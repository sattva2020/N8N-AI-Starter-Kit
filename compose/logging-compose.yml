services:
  # Elasticsearch - Log storage and indexing
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: n8n_elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=n8n-logging-cluster
      - node.name=elasticsearch-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - action.auto_create_index=".monitoring*,.watches,.triggered_watches,.watcher-history*,.ml*,filebeat-*,logstash-*"
      - logger.org.elasticsearch.deprecation=WARN
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ../config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ../logs/elasticsearch:/usr/share/elasticsearch/logs
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - n8n_logging
    restart: unless-stopped
    labels:
      - "logging.component=elasticsearch"
      - "monitoring.scrape=true"

  # Logstash - Log processing and transformation
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: n8n_logstash
    environment:
      - "LS_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.monitoring.enabled=false
    volumes:
      - ../config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ../config/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ../config/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ../logs/logstash:/usr/share/logstash/logs
      - n8n_logs:/var/log/n8n:ro
      - ollama_logs:/var/log/ollama:ro
      - qdrant_logs:/var/log/qdrant:ro
      - postgres_logs:/var/log/postgresql:ro
    ports:
      - "5044:5044"  # Beats input
      - "5000:5000"  # TCP input
      - "9600:9600"  # HTTP monitoring
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600/_node/stats || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - n8n_logging
    restart: unless-stopped
    labels:
      - "logging.component=logstash"
      - "monitoring.scrape=true"

  # Kibana - Log visualization and dashboard
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: n8n_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=5601
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
      - xpack.security.enabled=false
      - xpack.encryptedSavedObjects.encryptionKey=fhjskloppd678ehkdfdlliverpoolfcr
      - xpack.reporting.encryptionKey=gedeshtabhashjcuyy66guzggo455fql
      - xpack.security.encryptionKey=frduiplmh655hhbzxnjmnppp4xjmkgf
    volumes:
      - ../config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - ../config/kibana/dashboards:/usr/share/kibana/dashboards:ro
      - kibana_data:/usr/share/kibana/data
      - ../logs/kibana:/usr/share/kibana/logs
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - n8n_logging
    restart: unless-stopped
    labels:
      - "logging.component=kibana"
      - "monitoring.scrape=true"

volumes:
  elasticsearch_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/elasticsearch
  kibana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/kibana
  n8n_logs:
    external: true
  ollama_logs:
    external: true
  qdrant_logs:
    external: true
  postgres_logs:
    external: true

networks:
  n8n_logging:
    external: true
    name: n8n_logging
  default:
    external: true
    name: n8n_network
