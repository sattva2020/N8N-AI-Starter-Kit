# PostgreSQL Main Database (for n8n, etc.)
POSTGRES_USER=root
POSTGRES_PASSWORD=password # Замените на надежный пароль
POSTGRES_DB=n8n
POSTGRES_DB_ZEP=zep # Имя базы данных для Zep

# n8n Specific Variables
N8N_ENCRYPTION_KEY=generate_a_strong_random_key_for_n8n # Замените на сгенерированный ключ
N8N_USER_MANAGEMENT_JWT_SECRET=generate_another_strong_random_key_for_n8n_jwt # Замените на сгенерированный ключ
N8N_DEFAULT_BINARY_DATA_MODE=filesystem

# Supabase Variables
# Пароль для встроенной в Supabase Studio базы данных PostgreSQL
SUPABASE_POSTGRES_PASSWORD=your_strong_password_for_supabase_internal_db # Замените на надежный пароль
# Ключи Supabase API (сгенерируйте их, например, на https://supabase.com/docs/guides/getting-started/tutorials/with-docker#api-keys)
# Для генерации ANON_KEY и SERVICE_ROLE_KEY можно использовать команду: openssl rand -base64 32
SUPABASE_ANON_KEY=your_supabase_anon_key_here_generate_one # Замените на сгенерированный ключ
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here_generate_one # Замените на сгенерированный ключ
# Для JWT_SECRET используйте команду: openssl rand -base64 48
# JWT_SECRET должен быть минимум 32 символа длиной
SUPABASE_JWT_SECRET=your_super_secret_jwt_token_at_least_32_characters_long_for_supabase # Замените на сгенерированный ключ (минимум 32 символа)

# MinIO Variables
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=your_strong_minio_password # Замените на надежный пароль

# pgAdmin Variables
PGADMIN_DEFAULT_EMAIL=admin@example.com # Замените на ваш email
PGADMIN_DEFAULT_PASSWORD=your_strong_pgadmin_password # Замените на надежный пароль

# Traefik Variables
ACME_EMAIL=your-email@example.com # Замените на ваш реальный email для Let's Encrypt
TRAEFIK_USERNAME=admin # Имя пользователя для панели управления Traefik
# Сгенерируйте хеш пароля (например, с помощью htpasswd: echo $(htpasswd -nb ваш_логин ваш_пароль) )
# Пример: admin:$apr1$j0gP9h9L$k8h3kHq8z3k3jK8HqJkKk.
TRAEFIK_PASSWORD_HASHED=your_generated_htpasswd_hash_for_traefik # Замените на сгенерированный хеш

# Zep Community Edition Variables
ZEP_POSTGRES_USER=postgres                 # Пользователь для PostgreSQL Zep (должен совпадать с сервисом db в zep-compose.yaml)
ZEP_POSTGRES_PASSWORD=postgres # Пароль для PostgreSQL Zep (должен совпадать с сервисом db в zep-compose.yaml, или обновите оба при изменении)
ZEP_POSTGRES_DB=postgres                     # Имя базы данных для PostgreSQL Zep (по умолчанию для пользователя 'postgres')
ZEP_API_SECRET=your_strong_zep_api_secret # Замените на надежный секрет для доступа к Zep API (используется в zep.yaml)

# Переменные для сервиса Graphiti (используется Zep)
# Убедитесь, что это установлено для Graphiti, если вы планируете использовать модели OpenAI через Zep/Graphiti.
OPENAI_API_KEY=your_openai_api_key_if_needed

# JupyterLab Variables (опционально)
# JUPYTER_TOKEN=your_secure_jupyter_token # Раскомментируйте и установите, если хотите использовать токен для JupyterLab

# Domain Variables (для удобства, если потребуется в скриптах или других местах)
# DOMAIN_NAME=example.com
# N8N_DOMAIN=n8n.example.com
# OLLAMA_DOMAIN=ollama.example.com
# QDRANT_DOMAIN=qdrant.example.com
# SUPABASE_STUDIO_DOMAIN=supabase.example.com
# SUPABASE_API_DOMAIN=api.supabase.example.com
# MINIO_API_DOMAIN=minio.example.com
# MINIO_CONSOLE_DOMAIN=minio-console.example.com
# PGADMIN_DOMAIN=pgadmin.example.com
# JUPYTER_DOMAIN=jupyter.example.com
# TRAEFIK_DASHBOARD_DOMAIN=traefik.example.com
# ZEP_DOMAIN=zep.example.com
# GRAPHITI_DOMAIN=graphiti.example.com
