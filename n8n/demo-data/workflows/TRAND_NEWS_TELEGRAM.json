{
  "name": "TRAND_NEWS_TELEGRAM",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a friendly and informative news bot with access to fresh data through a vector store.\n\nROLE:\n- You are an expert at finding current information and news\n- You help users quickly get the information they need\n\nFUNCTIONALITY:\n- Always use the vector store to answer user queries\n- Skillfully transform user requests into effective search queries\n- Identify the main topic of the request and search for relevant information\n- Ask for clarification when the request is unclear\n\nSTYLE AND TONE:\n- Energetic, positive, and accessible\n- Use conversational language at an 8th-grade reading level\n- Be concise - sentences up to 15 words\n- Add an element of surprise or humor where appropriate\n- Use emojis to convey mood (1-2 per response)\n- Reply ONLY in Russian language, regardless of the language used in queries\n\nRESPONSE STRUCTURE:\n- Start with a direct answer to the question\n- Highlight key thoughts in **bold**\n- Add 1-2 interesting facts from the information found\n- Mention multiple perspectives when available\n- End with a logical transition to continue the conversation\n\nFORMAT:\n- Markdown with reasonable use of formatting\n- Structure information for easy reading\n- Avoid paragraphs longer than 3-4 lines\n\nCONSTRAINTS:\n- Never provide answers without consulting the vector store\n- If no answer is found, suggest: \"Я не нашел информации по этому вопросу.\"\n- Don't make up information\n- Strive for objectivity, don't exp"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        1900,
        280
      ],
      "id": "2827062a-4bb9-4f09-a06e-0f539b00c3ce",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "ai_news",
        "toolDescription": "Summarized news articles and YouTube transcripts related to AI",
        "pineconeIndex": {
          "__rl": true,
          "value": "ainewstest",
          "mode": "list",
          "cachedResultName": "ainewstest"
        },
        "includeDocumentMetadata": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        2060,
        540
      ],
      "id": "2914aac0-bb01-4148-bd92-ddb35f45b494",
      "name": "Pinecone Vector Store"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2080,
        700
      ],
      "id": "7aa19792-dc66-4ab5-8e9d-ae137c3ffb1b",
      "name": "Embeddings OpenAI"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "VASH_API"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"{{ $json.queries }}\",\n  \"topic\": \"general\",\n  \"search_depth\": \"basic\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 2,\n  \"time_range\": \"day\",\n  \"days\": 1,\n  \"include_answer\": \"advanced\",\n  \"include_raw_content\": false,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_domains\": [],\n  \"exclude_domains\": []\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1440,
        1660
      ],
      "id": "549ce8e7-0993-40fb-bda9-35fa0e109694",
      "name": "Tavily"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -480,
        2620
      ],
      "id": "94682d05-af86-4ab8-922f-b41b072420d6",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3160,
        3040
      ],
      "id": "b8de0de4-256e-4c2f-992d-3a5a1f9abcdc",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/channels",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "part",
              "value": "id, snippet"
            },
            {
              "name": "forHandle",
              "value": "={{ $json.usernames }}"
            },
            {
              "name": "regionCode",
              "value": "US"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1640,
        2960
      ],
      "id": "5308ce0a-ed46-4387-ac80-9998f47a69c8",
      "name": "Get Channel ID"
    },
    {
      "parameters": {
        "chunkSize": 3000,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "typeVersion": 2,
      "position": [
        3600,
        2620
      ],
      "id": "47c9860e-599a-4d4a-880e-567edb32d4f6",
      "name": "Summarization Chain"
    },
    {
      "parameters": {
        "tableId": "news",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "title",
              "fieldValue": "={{ $json.output.title }}"
            },
            {
              "fieldId": "content",
              "fieldValue": "={{ $json.output.content }}"
            },
            {
              "fieldId": "type",
              "fieldValue": "News"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2220,
        1440
      ],
      "id": "dd093105-5cca-4b5c-a2b5-7f715d0e64a6",
      "name": "Supabase"
    },
    {
      "parameters": {
        "tableId": "news",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "title",
              "fieldValue": "={{ $json.output.title }}"
            },
            {
              "fieldId": "content",
              "fieldValue": "={{ $json.output.content }}"
            },
            {
              "fieldId": "type",
              "fieldValue": "YouTube"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4320,
        2620
      ],
      "id": "2a84ca6c-a8f3-45cc-9914-a2801093640e",
      "name": "Supabase1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Repurpose this summarized article: {{ $json.answer }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are a professional editor and copywriter specializing in transforming technical and dry content into viral material that readers instantly remember.\n\nInstructions:\n1. Create a captivating, positive title with EXACTLY 5 words for the summary (place in <title>). The title should evoke curiosity without being clickbait.\n2. Rewrite the summary (place in <content>), using:\n   • Vivid, specific nouns instead of general ones\n   • Active verbs instead of passive ones\n   • Analogies and metaphors to simplify complex ideas\n   • Conversational, friendly tone as if explaining to a friend\n   • Short sentences and paragraphs for readability\n   • 1-2 questions to engage the reader\n   • Always end with a key takeaway\n\nOutput format:\n{\n\"title\": \"<title>\",\n\"content\": \"<content>\"\n}\n\nOutput:\n- Markdown formatting\n- Use **bold text** for 3-4 key terms/concepts\n- Use emojis maximum 2-3 times to emphasize emotional moments\n\nConstraints:\n- Strictly under 110 words for the summary\n- No subheadings in the summary\n- Don't use - or : in titles\n- Avoid clichés and formulaic phrases\n- Preserve all important facts from the original without distortion\n- No more than one exclamation mark"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1820,
        1440
      ],
      "id": "71cd5b5e-e97a-408e-8aba-9841e0debd37",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Repurpose this summarized article: {{ $json.response.text }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are a professional editor and copywriter specializing in transforming technical and dry content into viral material that readers instantly remember.\n\nInstructions:\n1. Create a captivating, positive title with EXACTLY 5 words for the summary (place in <title>). The title should evoke curiosity without being clickbait.\n2. Rewrite the summary (place in <content>), using:\n   • Vivid, specific nouns instead of general ones\n   • Active verbs instead of passive ones\n   • Analogies and metaphors to simplify complex ideas\n   • Conversational, friendly tone as if explaining to a friend\n   • Short sentences and paragraphs for readability\n   • 1-2 questions to engage the reader\n   • Always end with a key takeaway\n\nOutput format:\n{\n\"title\": \"<title>\",\n\"content\": \"<content>\"\n}\n\nOutput:\n- Markdown formatting\n- Use **bold text** for 3-4 key terms/concepts\n- Use emojis maximum 2-3 times to emphasize emotional moments\n\nConstraints:\n- Strictly under 110 words for the summary\n- No subheadings in the summary\n- Don't use - or : in titles\n- Avoid clichés and formulaic phrases\n- Preserve all important facts from the original without distortion\n- No more than one exclamation mark"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        3960,
        2620
      ],
      "id": "6ccb73d2-6a3c-4b03-8cdb-9ca4d2f83178",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3620,
        2840
      ],
      "id": "5b6fa291-6d8b-4392-9be1-2835f12e941c",
      "name": "4o-mini"
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/search",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "part",
              "value": "snippet"
            },
            {
              "name": "channelId",
              "value": "={{ $json.ChannelId }}"
            },
            {
              "name": "type",
              "value": "channel"
            },
            {
              "name": "maxResults",
              "value": "1"
            },
            {
              "name": "order",
              "value": "date"
            },
            {
              "name": "type",
              "value": "video"
            },
            {
              "name": "publishedAfter",
              "value": "={{ new Date(Date.UTC(new Date().getUTCFullYear(), new Date().getUTCMonth(), new Date().getUTCDate() - 1, 0, 0, 0)).toISOString() }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2620,
        2820
      ],
      "id": "8200efb6-c7d2-438d-8dec-ecbaa846c84f",
      "name": "Get 1 Video"
    },
    {
      "parameters": {
        "fieldToSplitOut": "items",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1640,
        2820
      ],
      "id": "fa4d5222-7105-4266-9ded-f7bd999a3121",
      "name": "Split Items"
    },
    {
      "parameters": {
        "fieldToSplitOut": "items",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2560,
        2620
      ],
      "id": "49038a17-7662-4a1a-973f-4e356e49f0ce",
      "name": "Split Items Again"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "57cb180d-a772-4537-b86f-488b5d1e0f51",
              "name": "videoId",
              "value": "={{ $json.id.videoId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2960,
        3040
      ],
      "id": "dbf73bab-2ba5-42ed-9518-ff932a17180b",
      "name": "Set VideoId"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "ainewstest",
          "mode": "list",
          "cachedResultName": "ainewstest"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        2420,
        1440
      ],
      "id": "1fd33665-ed9d-4cf3-918c-ea2ca82bda96",
      "name": "Pinecone Vector Store1"
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "title",
                "value": "={{ $('Supabase').item.json.title }}"
              },
              {
                "name": "content",
                "value": "={{ $('Supabase').item.json.content }}"
              },
              {
                "name": "=type",
                "value": "={{ $('Supabase').item.json.type }}"
              },
              {
                "name": "created_at",
                "value": "={{ $('Supabase').item.json.created_at }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2560,
        1660
      ],
      "id": "b0703c20-c0cf-4600-81f1-a8a3baa60aa6",
      "name": "Default Data Loader"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "typeVersion": 1,
      "position": [
        2580,
        1820
      ],
      "id": "208d3fd7-c7c0-421a-b0a3-98876504b3b6",
      "name": "Token Splitter"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "ainewstest",
          "mode": "list",
          "cachedResultName": "ainewstest"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        4520,
        2620
      ],
      "id": "6c381383-7f59-416b-b50c-31f753a6fe19",
      "name": "Pinecone Vector Store2"
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "title",
                "value": "={{ $('Supabase1').item.json.title }}"
              },
              {
                "name": "content",
                "value": "={{ $('Supabase1').item.json.content }}"
              },
              {
                "name": "=type",
                "value": "={{ $('Supabase1').item.json.type }}"
              },
              {
                "name": "created_at",
                "value": "={{ $('Supabase1').item.json.created_at }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        4660,
        2840
      ],
      "id": "f57b9af6-fc30-4312-9395-7173295e0479",
      "name": "Default Data Loader1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "typeVersion": 1,
      "position": [
        4680,
        3000
      ],
      "id": "e967fd5a-ec4f-4b35-b4e4-80db5f93b030",
      "name": "Token Splitter1"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"usernames\": {\n  \"username1\": \"morecryptoonline\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        560,
        2820
      ],
      "id": "1fba2c82-67c0-4712-8012-97dcd849c730",
      "name": "YouTube Users"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1720,
        540
      ],
      "id": "ae3a3fa4-b1c2-410e-93b3-ae623e8cf4ef",
      "name": "4o-minix"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1020,
        2820
      ],
      "id": "02a36616-16be-4a75-b062-70f620212a30",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "usernames",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        820,
        2820
      ],
      "id": "880cbc5f-057f-434e-9fa1-018bcb8c84ad",
      "name": "Split Out"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "da2f5f04-78ad-4ec2-838f-542d33b13fe4",
              "name": "ChannelId",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1840,
        2820
      ],
      "id": "0db681a2-95aa-4f8a-8f52-10193827bddd",
      "name": "Set"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2040,
        2820
      ],
      "id": "95baf005-214e-4e82-ad96-44bf3db28e9a",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3920,
        3040
      ],
      "id": "55b3e0eb-5d71-4dc5-b9f5-3f191e7a8324",
      "name": "Wait",
      "webhookId": "0519420e-4f03-4a24-a06b-2cb2abd4bab7"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2400,
        1660
      ],
      "id": "f47ff2bc-2e6d-4a88-bd1a-c4065230139d",
      "name": "3-small"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        4500,
        2840
      ],
      "id": "fcc612fb-9fe6-4d8f-a1f8-fea46003abbd",
      "name": "3-small-x"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"title\": \"<title>\",\n\t\"content\": \"<content>\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1960,
        1660
      ],
      "id": "2bb46311-f3cf-4839-b662-288cf8745dcf",
      "name": "Parser"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"title\": \"<title>\",\n\t\"content\": \"<content>\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        4140,
        2840
      ],
      "id": "57223cef-a4a5-449a-b6d8-dc42d9f395d7",
      "name": "Parserx"
    },
    {
      "parameters": {
        "fieldToSplitOut": "queries",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        840,
        1660
      ],
      "id": "de359301-77c7-42d5-baaa-d9a27ae6e630",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1060,
        1660
      ],
      "id": "92a95edc-bc1c-48ad-b4bc-9e6e851a246c",
      "name": "Loop Over Items3"
    },
    {
      "parameters": {
        "content": "## Замените запросы на то, что вы хотите искать.",
        "height": 100,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        480,
        1540
      ],
      "typeVersion": 1,
      "id": "37a2eb56-21e9-4568-8015-0cd11b03f98e",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Разместите здесь имена пользователей ваших любимых ютуберов, которых хотите отслеживать\n\n## Примечание: Старайтесь добавлять действительно активных ютуберов, так как если они не публикуют много контента, например, раз в месяц, вы не получите много новых видео и т.д.",
        "height": 320,
        "width": 580,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        320,
        3020
      ],
      "typeVersion": 1,
      "id": "90945e22-a9d9-4872-aae6-191e664d80fd",
      "name": "Sticky Note1",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Добавьте ваш API-ключ Tavily\n\n### www.tavily.com",
        "height": 120,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1300,
        1860
      ],
      "typeVersion": 1,
      "id": "35e9ffb2-9ad8-4374-9102-44ad84b3a4dc",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "### Подключите (создайте и используйте учетные данные OpenAI)",
        "height": 80,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4120,
        3000
      ],
      "typeVersion": 1,
      "id": "5754e742-b5fd-4bc1-a041-901c0f580fc5",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Добавьте ваш ключ RapidAPI для API транскрипции YouTube\n\n### https://rapidapi.com/solid-api-solid-api-default/api/youtube-transcript3/playground/\n\n\n### Зарегистрируйтесь на RapidAPI, если вы еще этого не сделали, подпишитесь на план API для транскрипции YouTube и используйте API-ключ для вашей учетной записи",
        "height": 320,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2900,
        2580
      ],
      "typeVersion": 1,
      "id": "ea1fdcb9-7616-421e-9d63-1d1b3b48b988",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "### Подключите (учетные данные Supabase)",
        "height": 80,
        "width": 280,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2120,
        1320
      ],
      "typeVersion": 1,
      "id": "34f4f28c-2427-4cd2-a34e-95139463c163",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "### Подключите учетные данные YouTube\n\n### : https://youtu.be/yyj9Hyr86ag",
        "height": 120,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2500,
        3040
      ],
      "typeVersion": 1,
      "id": "8ccf233d-8f66-4960-b8d1-b61c6f8ee523",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "###Подключите учетные данные Pinecone.",
        "height": 80,
        "width": 280,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2400,
        480
      ],
      "typeVersion": 1,
      "id": "7224c80f-30ab-432e-ab1a-6cdcd0160618",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "### Подключите учетные данные OpenAI",
        "height": 80,
        "width": 260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1660,
        680
      ],
      "typeVersion": 1,
      "id": "2128444d-055e-41b6-9af0-4cdb0f6dcd5a",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "## Всё устраивает?\n\n###Замените триггер \"При нажатии\" на триггер по расписанию, чтобы запускать автоматически раз в 24 часа.",
        "width": 420,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -540,
        2840
      ],
      "typeVersion": 1,
      "id": "b07ebb6d-ea70-4a5c-945f-9919fafdeede",
      "name": "Sticky Note12",
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtMinute": 1
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -460,
        2440
      ],
      "id": "c744b01e-9b0c-4c46-bdc4-154f1a3ffe68",
      "name": "Run every 24 hours"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"queries\": {\n    \"query1\": \"ai\",\n    \"query10\": \"bitcoin\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        620,
        1660
      ],
      "id": "b054c72c-eb40-4ad5-9e61-eaed5d1430e4",
      "name": "Queries"
    },
    {
      "parameters": {
        "content": "### Настройте ваше пространство имен в Pinecone (на ваше собственное), а также тип информации в нем.",
        "height": 100,
        "width": 320,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2220,
        640
      ],
      "typeVersion": 1,
      "id": "f97ea9cf-36e6-4f25-9a54-9878e4a92379",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "### Подключите (создайте и используйте учетные данные OpenAI)",
        "height": 80,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2000,
        1820
      ],
      "typeVersion": 1,
      "id": "1ff407b0-f8eb-4617-9f50-9eb62090fec3",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "content": "### Подключите (учетные данные Supabase)",
        "height": 80,
        "width": 280,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4220,
        2500
      ],
      "typeVersion": 1,
      "id": "56dd92b4-a00b-4756-9240-da71902ed2f4",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "### Подключите учетные данные YouTube\n\n### : https://youtu.be/yyj9Hyr86ag",
        "height": 120,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1540,
        3220
      ],
      "typeVersion": 1,
      "id": "fb96ad08-3f35-4b4d-8827-afae92087510",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "content": "## ПРОМПТ\nВы профессиональный редактор и копирайтер со специализацией на трансформации технических и сухих текстов в вирусный контент, который читатели мгновенно запоминают.\n\nИнструкции:\n1. Создайте захватывающий, позитивный заголовок из ТОЧНО 5 слов для сводки (поместите в <title>). Заголовок должен вызывать любопытство, но не быть кликбейтом.\n2. Перепишите сводку (поместите в <content>), используя:\n   • Яркие, конкретные существительные вместо общих\n   • Активные глаголы вместо пассивных\n   • Аналогии и метафоры для упрощения сложных идей\n   • Разговорный, дружелюбный тон, будто объясняете другу\n   • Короткие предложения и абзацы для легкости чтения\n   • 1-2 вопроса для вовлечения читателя\n   • Всегда заканчивайте ключевым выводом\n\nФормат вывода:\n{\n\"title\": \"<title>\",\n\"content\": \"<content>\"\n}\n\nВывод:\n- Markdown форматирование\n- Используйте **жирный шрифт** для 3-4 ключевых терминов/понятий\n- Используйте эмодзи максимум 2-3 раза для подчеркивания эмоциональных моментов\n\nОграничения:\n- Строго до 110 слов для сводки\n- Никаких подзаголовков в сводке\n- Не используйте - или : в заголовках\n- Избегайте клише и шаблонных фраз\n- Сохраняйте все важные факты из оригинала без искажений\n- Никаких восклицательных знаков больше одного",
        "height": 780,
        "width": 560,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3000,
        1320
      ],
      "typeVersion": 1,
      "id": "1bc5b165-aa61-45d3-9ca4-fcbd48c12386",
      "name": "Sticky Note3",
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1740,
        1660
      ],
      "id": "0acdceab-2a49-4438-8a6f-ef44f7f080f1",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "url": "=https://youtube-transcripts.p.rapidapi.com/youtube/transcript\n",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "videoId",
              "value": "={{ $json.videoId }}"
            },
            {
              "name": "flat_text",
              "value": "true"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-rapidapi-key",
              "value": "VASH_API"
            },
            {
              "name": "x-rapidapi-host",
              "value": "youtube-transcripts.p.rapidapi.com"
            }
          ]
        },
        "options": {
          "response": {}
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3400,
        3040
      ],
      "id": "00941b5e-3d0d-44fd-8a92-9d8169be958c",
      "name": "Transcribe1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4eb11523-0575-4d12-a159-cb7bc9ed3942",
              "name": "content.text",
              "value": "={{ $json[\"content\"] && $json[\"content\"].map(item => item.text).join(\" \") || \"\" }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3660,
        3040
      ],
      "id": "a80fcc7b-ec95-4765-875d-9f4925c4ddef",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3880,
        2840
      ],
      "id": "0d1b9164-c437-445f-b276-3ff39c7ff5d1",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "content": "## ПРОМПТ \nТы дружелюбный и информативный новостной бот с доступом к свежим данным через векторное хранилище.\n\nРОЛЬ:\n- Ты эксперт по поиску актуальной информации и новостей\n- Ты помогаешь пользователям быстро получать нужную информацию\n\nФУНКЦИОНАЛ:\n- Всегда используй векторное хранилище для ответов на запросы пользователей\n- Умело преобразуй запросы пользователей в эффективные поисковые запросы\n- Определяй главную тему запроса и ищи подходящую информацию\n- При неясном запросе запрашивай уточнение темы\n\nСТИЛЬ И ТОН:\n- Энергичный, позитивный и доступный\n- Используй разговорный язык на уровне 8-го класса\n- Будь лаконичным - предложения до 15 слов\n- Добавляй элемент неожиданности или юмора где уместно\n- Используй эмодзи для передачи настроения (1-2 на ответ)\n\nСТРУКТУРА ОТВЕТОВ:\n- Начинай с прямого ответа на вопрос\n- Выделяй ключевые мысли **жирным шрифтом**\n- Добавляй 1-2 интересных факта из найденной информации\n- При наличии нескольких точек зрения упоминай их\n- Заканчивай логичным переходом к продолжению разговора\n\nФОРМАТ:\n- Markdown с разумным использованием форматирования\n- Структурируй информацию для удобства чтения\n- Избегай абзацев длиннее 3-4 строк\n\nОГРАНИЧЕНИЯ:\n- Не давай ответов без обращения к векторному хранилищу\n- Если не нашлось ответа, предложи: \"Я не нашел информации по этому вопросу. Попробуй спросить о новых моделях ИИ, последних технологических новостях или трендах в [релевантная область]\"\n- Не выдумывай информацию\n- Стремись к объективности, не выражай политические предпочтения",
        "height": 860,
        "width": 600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2740,
        220
      ],
      "typeVersion": 1,
      "id": "5ff88244-3e45-4065-b6d8-54fad20abe5e",
      "name": "Sticky Note8",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## СБОР НОВОСТЕЙ",
        "height": 2240,
        "width": 5800,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -600,
        1200
      ],
      "typeVersion": 1,
      "id": "55e79374-5fe5-4282-a858-5e94d5bd85ad",
      "name": "Sticky Note17",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## ОБЩЕНИЕ",
        "height": 1140,
        "width": 3540,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "15670454-1051-4eb6-bf6e-be3fce46d8a1",
      "name": "Sticky Note18",
      "disabled": true
    },
    {
      "parameters": {
        "content": "### Проверка бота (обычно для AI Ассистентов используют)",
        "height": 100,
        "width": 220,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1180,
        560
      ],
      "typeVersion": 1,
      "id": "82ac2276-afea-48c0-a2a9-6c2add820de1",
      "name": "Sticky Note19"
    },
    {
      "parameters": {
        "content": "### Подключите свой Telegram\n",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        900,
        560
      ],
      "typeVersion": 1,
      "id": "1154b594-0149-4e35-9f3a-ab1d1e714885",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        140,
        320
      ],
      "id": "e866371e-e6a0-48ac-b962-fb3d8d1aab85",
      "name": "Telegram Trigger1",
      "webhookId": "79408097-d284-4034-a6d7-65bb07b242ba"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Telegram Trigger1').item.json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "dd8451ae-fc03-49d0-a19e-2678a5f4ff64"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bc42e6d3-ad50-4188-a168-9c5696e74252",
                    "leftValue": "={{ $('Telegram Trigger1').item.json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        840,
        300
      ],
      "id": "bb781823-5e51-4bd2-866f-3e36ad3a8140",
      "name": "Switch1"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Telegram Trigger1').item.json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1020,
        140
      ],
      "id": "3bd4f3e1-6def-41f7-bdf2-97c1d08eb78e",
      "name": "Telegram3",
      "webhookId": "0142b70e-e116-4fe0-bce6-bfc0fb8db9db"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1240,
        160
      ],
      "id": "889e8905-38ec-456b-95f9-af3c2c5f6346",
      "name": "OpenAI1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a9e919bb-8d22-4855-a7b6-a9e5a9f39778",
              "leftValue": "={{ $json.message.chat.username }}",
              "rightValue": "=igorzuevich\n",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        340,
        320
      ],
      "id": "3d80a1f4-a25e-4c16-a742-a7af2598fd75",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $('Telegram Trigger1').item.json.message.chat.id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        620,
        300
      ],
      "id": "289f7166-6e64-4111-b05f-20196bdea92b",
      "name": "Telegram2",
      "webhookId": "4f938fd7-6e62-45f5-9f45-118ed704bc35"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dc04da2b-b648-42a4-9a04-bdf8a8d23508",
              "name": "message.text",
              "value": "={{ $('Telegram Trigger1').item.json.message.text }}{{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1500,
        280
      ],
      "id": "9c2efe20-e49e-400e-9ff2-c688fd2e287f",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "content": "### Проверка бота (обычно для AI Ассистентов используют)",
        "height": 100,
        "width": 220,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        480
      ],
      "typeVersion": 1,
      "id": "59039fbd-8770-4325-8a78-ba9f66008f83",
      "name": "Sticky Note21"
    },
    {
      "parameters": {
        "content": "### Подключите свой Telegram\n",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        120,
        500
      ],
      "typeVersion": 1,
      "id": "4a1db01a-68ba-486b-a171-07d2a6a4c983",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger1').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2360,
        240
      ],
      "id": "dbb4d515-8304-49d2-9e35-d7a6f8eecaeb",
      "name": "Telegram1",
      "webhookId": "927ce694-1b0f-40c8-8622-4d925e707ca4"
    },
    {
      "parameters": {
        "content": "## СВЕЖИЕ НОВОСТИ\n",
        "height": 800,
        "width": 2480
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        420,
        1260
      ],
      "typeVersion": 1,
      "id": "1dc0e89f-da88-4507-8132-7b2c3affe9a6",
      "name": "Sticky Note23"
    },
    {
      "parameters": {
        "content": "## YOUTUBE",
        "height": 1140,
        "width": 4700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        300,
        2240
      ],
      "typeVersion": 1,
      "id": "80bad920-d99d-48c1-9e6c-ce136ad850ee",
      "name": "Sticky Note24",
      "disabled": true
    }
  ],
  "pinData": {},
  "connections": {
    "Pinecone Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "YouTube Users",
            "type": "main",
            "index": 0
          },
          {
            "node": "Queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Summarization Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Transcribe1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Channel ID": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarization Chain": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tavily": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4o-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Summarization Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get 1 Video": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Items": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Items Again": {
      "main": [
        [
          {
            "node": "Set VideoId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set VideoId": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store2",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Users": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4o-minix": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Split Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Channel ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [
          {
            "node": "Split Items Again",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get 1 Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3-small": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "3-small-x": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parserx": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Tavily",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Queries": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram3": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a87f7ca2-d1a0-47c2-9081-8c5912726cca",
  "meta": {
    "instanceId": "ca8caa61a83f420fdc05c213faa0cf5c47ce8b5aabb954f66c96ea62e07126ef"
  },
  "id": "CwlGaYBPpy7C04qP",
  "tags": [
    {
      "createdAt": "2025-05-18T15:19:33.676Z",
      "updatedAt": "2025-05-18T15:19:33.676Z",
      "id": "naJjhtxzTdEq62Pb",
      "name": "проверил"
    }
  ]
}