{
  "name": "SNABLON_RSS_LENTA_TELEGRAM",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=Ты высокоэффективный чат-бот, и твоя задача — отвечать на вопросы, связанные с маркетингом, используя предоставленное тебе хранилище векторов.\n\n### Ограничения:\n\n- Ответы должны быть сгенерированы только на основе информации, предоставленной в хранилище векторов."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -880,
        140
      ],
      "id": "5e5774bf-0af9-4d2a-9443-2e7976d4bc1e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -960,
        420
      ],
      "id": "70decbdd-66d9-41a4-aa64-cb1bae1a3442",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "name": "marketing",
        "description": "Contains data on marketing"
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -520,
        500
      ],
      "id": "76d304c0-2602-4127-9631-8c3a7902fcdb",
      "name": "Answer questions with a vector store"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -400,
        840
      ],
      "id": "ceaa0fba-69c7-457b-a700-9c8a150e6151",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "bazamark",
          "mode": "list",
          "cachedResultName": "bazamark"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.1,
      "position": [
        -660,
        660
      ],
      "id": "cc048d3f-c04e-40f5-a7c2-f1bbb35e1d11",
      "name": "Pinecone Vector Store"
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -600,
        840
      ],
      "id": "62ad471b-7f65-4cb5-a5da-8a636f3cb3b8",
      "name": "Embeddings OpenAI"
    },
    {
      "parameters": {
        "content": "## ИДЕЯ, ЦА И ЗАДАЧА\n",
        "height": 1020,
        "width": 860,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        20
      ],
      "typeVersion": 1,
      "id": "c9e0ec6b-0056-4a92-a004-3e8f2a3fa59c",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "bazamark",
          "mode": "list",
          "cachedResultName": "bazamark"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        1560,
        180
      ],
      "id": "86abda92-14d0-40c0-a670-2ff91981ccf7",
      "name": "Pinecone Vector Store1"
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1480,
        440
      ],
      "id": "20ab1919-8514-400f-bf60-e448b55a3d25",
      "name": "Embeddings OpenAI1"
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "Publish Date",
                "value": "={{ $('Clean up').item.json.publishDate }}"
              },
              {
                "name": "Extraction Date",
                "value": "={{ $('Clean up').item.json.extractedAt }}"
              },
              {
                "name": "Content",
                "value": "={{ $('Clean up').item.json.content }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1760,
        380
      ],
      "id": "c1470aa1-e4ba-4477-af35-e8f40326b7a0",
      "name": "Default Data Loader"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1820,
        580
      ],
      "id": "823b2892-cec3-4abe-8a7c-c411a742ff42",
      "name": "Character Text Splitter"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        80,
        260
      ],
      "id": "3f1c210d-780e-4e95-b997-8ac149ba11a2",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        520,
        260
      ],
      "id": "a8630127-8902-4124-b682-df0f5cf53fd1",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "={{ $json.feed }}",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        820,
        380
      ],
      "id": "86fb34c1-383f-4001-a8a6-32a8d1452cf8",
      "name": "RSS Read"
    },
    {
      "parameters": {
        "url": "={{ $json.link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1060,
        160
      ],
      "id": "4012c33a-e694-4f58-855e-6a62bbfed29c",
      "name": "Get HTML"
    },
    {
      "parameters": {
        "jsCode": "return [\n { json: { feed: \"https://contentmarketinginstitute.com/blog/feed\" } }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        260
      ],
      "id": "da9a40d4-7f47-4647-ba28-edbf4a4cc725",
      "name": "Input RSS Feeds here"
    },
    {
      "parameters": {
        "jsCode": "// Get the HTML content from the response\nconst html = items[0].json.data;\n\n// Simple HTML to text converter function\nfunction htmlToText(html) {\n  return html\n    .replace(/<style[^>]*>.*?<\\/style>/gs, '')\n    .replace(/<script[^>]*>.*?<\\/script>/gs, '')\n    .replace(/<header[^>]*>.*?<\\/header>/gs, '')\n    .replace(/<footer[^>]*>.*?<\\/footer>/gs, '')\n    .replace(/<nav[^>]*>.*?<\\/nav>/gs, '')\n    .replace(/<aside[^>]*>.*?<\\/aside>/gs, '')\n    .replace(/<[^>]+>/g, ' ')\n    .replace(/\\s+/g, ' ')\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&[^;]+;/g, '')\n    .trim();\n}\n\n// Extract publish date using multiple methods\nfunction extractPublishDate(html) {\n    const metaDateMatch = html.match(/<meta property=\"article:published_time\" content=\"([^\"]+)\"/i) ||\n                         html.match(/<meta name=\"published_time\" content=\"([^\"]+)\"/i) ||\n                         html.match(/<meta name=\"date\" content=\"([^\"]+)\"/i);\n    \n    if (metaDateMatch) {\n        return new Date(metaDateMatch[1]).toISOString();\n    }\n\n    const schemaMatch = html.match(/<script type=\"application\\/ld\\+json\">[^{]*({[\\s\\S]*?})[^}]*<\\/script>/i);\n    if (schemaMatch) {\n        try {\n            const schema = JSON.parse(schemaMatch[1]);\n            if (schema.datePublished) {\n                return new Date(schema.datePublished).toISOString();\n            }\n        } catch (e) {}\n    }\n\n    const datePattern = /(?:Published|Updated|Posted on|Date):\\s*([A-Za-z]+\\s+\\d{1,2},\\s+\\d{4})|(\\d{4}-\\d{2}-\\d{2})/i;\n    const dateMatch = html.match(datePattern);\n    if (dateMatch) {\n        const dateStr = dateMatch[1] || dateMatch[2];\n        return new Date(dateStr).toISOString();\n    }\n\n    return new Date().toISOString();\n}\n\n// Extract content\nlet content = '';\nconst articleMatch = html.match(/<article[^>]*>([\\s\\S]*?)<\\/article>/i);\n\nif (articleMatch && articleMatch[1]) {\n  content = htmlToText(articleMatch[1]);\n} else {\n  content = htmlToText(html);\n}\n\n// Clean up the content\nconst cleanContent = content\n  .replace(/\\s+/g, ' ')\n  .replace(/\\n+/g, '\\n')\n  .replace(/\\t+/g, ' ')\n  .trim();\n\n// Remove common navigation text and footer text\nconst finalContent = cleanContent\n  .replace(/Menu.*?Search/g, '')\n  .replace(/Share this article/g, '')\n  .replace(/Related articles/g, '')\n  .replace(/Leave a comment/g, '');\n\nreturn {\n  json: {\n    content: finalContent,\n    publishDate: extractPublishDate(html),\n    extractedAt: new Date().toISOString()\n  }\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1300,
        160
      ],
      "id": "59e0fff2-7cc5-41c9-ad6a-ad9e0b05f994",
      "name": "Clean up"
    },
    {
      "parameters": {
        "content": "## ФОРМИРОВАНИЕ БАЗЫ",
        "height": 800,
        "width": 2080,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "9f6ca15b-9069-4fc2-b3e0-23e1b31bdd86",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9a7becbc-b3d1-4d5d-bec2-193ab95ea0cc",
              "leftValue": "={{ new Date($json[\"pubDate\"]).getTime() }}",
              "rightValue": "={{ new Date('2022-01-01T00:00:00Z').getTime() + (new Date().setHours(0, 0, 0, 0) - new Date('2022-01-01T00:00:00Z').setHours(0, 0, 0, 0)) }}",
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        760,
        80
      ],
      "id": "6e38944f-1b99-46c6-988c-2fc8812b25f1",
      "name": "If"
    },
    {
      "parameters": {
        "content": "## СТАРТ\n",
        "height": 540,
        "width": 1260
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2360,
        460
      ],
      "typeVersion": 1,
      "id": "b961e1c1-ce68-4f2f-832e-106fdef658c0",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "0bdf6a0d-aea5-45a5-8082-5a7bd8f2f85e",
      "name": "Respond to Me",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -320,
        160
      ],
      "webhookId": "cd45388a-451a-42a0-b4aa-94857c5cc9f2"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -800,
        360
      ],
      "id": "d850bdd3-d29f-4801-ab55-01b6bb88c37f",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $json.message.chat.id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2120,
        680
      ],
      "id": "6cd7fa66-e5b3-4ff3-afaf-1d5c72bf47ed",
      "name": "Telegram2",
      "webhookId": "8cd99b7a-3eca-4fd9-9b9a-168ea002f4b1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ca9cc06c-dcf8-457b-854b-4c03d3d15dcc",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1940,
        680
      ],
      "id": "e002bf2b-9620-4394-934d-538d54ceb2ce",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1600,
        780
      ],
      "id": "4e89ede0-e10b-43f5-a869-1ed81b79a2d1",
      "name": "OpenAI"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Telegram Trigger').item.json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1780,
        780
      ],
      "id": "25f6c92f-3daf-43b1-85ab-5eb31990a903",
      "name": "Telegram",
      "webhookId": "c66673cf-72f0-4233-82d8-70fe313d8765"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c9d8e573-3830-4e93-9f74-4838b5ff49b5",
              "name": "text",
              "value": "={{ $('Telegram Trigger').item.json.message.text }} {{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1340,
        660
      ],
      "id": "92e8f278-bcd5-45b0-8a4d-be27033f806d",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "e0c89ad0-d66f-4518-9340-700c3bd618bb",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -2300,
        680
      ],
      "webhookId": "2194a6b2-2302-4406-9c8c-207161b7eb22"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Input RSS Feeds here",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "RSS Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get HTML": {
      "main": [
        [
          {
            "node": "Clean up",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input RSS Feeds here": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean up": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5f9cff36-0127-4328-bb97-9961971d3819",
  "meta": {
    "instanceId": "ca8caa61a83f420fdc05c213faa0cf5c47ce8b5aabb954f66c96ea62e07126ef"
  },
  "id": "fv9pxzBDdQPJUXwP",
  "tags": [
    {
      "createdAt": "2025-05-18T15:19:33.676Z",
      "updatedAt": "2025-05-18T15:19:33.676Z",
      "id": "naJjhtxzTdEq62Pb",
      "name": "проверил"
    }
  ]
}