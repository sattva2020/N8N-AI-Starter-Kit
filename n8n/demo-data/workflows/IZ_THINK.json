{
  "name": "IZ_THINK",
  "nodes": [
    {
      "parameters": {
        "options": {
          "systemMessage": "=# Overview\nYou are a helpful assistant.\n\n## Tool\nThink - Use this tool to think deeply"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        280,
        760
      ],
      "id": "91e3a356-1165-4831-a477-6b647a1f84ef",
      "name": "Think Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        40,
        760
      ],
      "id": "e03f8e81-765b-468d-93da-1774fde87901",
      "name": "When chat message received",
      "webhookId": "65eff381-f609-4af4-9d78-66f83745eb26"
    },
    {
      "parameters": {
        "description": "=Use the tool to think about something. It will not obtain new information or change the database, but just append the thought to the log. Use it when complex reasoning or some cache memory is needed."
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        520,
        1100
      ],
      "id": "ca046cf1-91a9-4bf5-baea-589c894391f8",
      "name": "Think"
    },
    {
      "parameters": {
        "content": "# Think",
        "height": 240,
        "width": 280,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        420,
        1020
      ],
      "id": "b95ac4bc-864b-4783-8c7d-cf3214013898",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Agent\n",
        "height": 320,
        "width": 720,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        660
      ],
      "id": "5eff9e1e-e92e-40fd-9d35-96401e6acc72",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        280,
        1080
      ],
      "id": "3645ebc2-d9ab-4be9-903a-902b13c04032",
      "name": "GPT 4.1",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "knowledge_base",
        "toolDescription": "Use this tool to access company policies and FAQs",
        "pineconeIndex": {
          "__rl": true,
          "value": "ainewstest",
          "mode": "list",
          "cachedResultName": "ainewstest"
        },
        "options": {
          "pineconeNamespace": "FAQ"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.1,
      "position": [
        2800,
        920
      ],
      "id": "a49c59ee-25c2-402c-861b-969baa3f64da",
      "name": "knowlege_base",
      "credentials": {
        "pineconeApi": {
          "id": "xHYJdGWUvOWZd8CK",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2760,
        1080
      ],
      "id": "1fe2e7d5-fcd5-491c-8e60-e28ce57590e8",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "XLvdxNcexKfUmGhl",
          "name": "OpenAi account 3"
        }
      }
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "app2vioOyPFvFn7XE",
          "mode": "list",
          "cachedResultName": "Instagram_agent_n8n",
          "cachedResultUrl": "https://airtable.com/app2vioOyPFvFn7XE"
        },
        "table": {
          "__rl": true,
          "value": "tbl7V6L6E6GwpFHfU",
          "mode": "list",
          "cachedResultName": "Instagram_COMPETITORS",
          "cachedResultUrl": "https://airtable.com/app2vioOyPFvFn7XE/tbl7V6L6E6GwpFHfU"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        3240,
        920
      ],
      "id": "1d53d7c1-cf7c-4364-9d21-197f6bec3f67",
      "name": "Contacts",
      "credentials": {
        "airtableTokenApi": {
          "id": "I2xyDRh4mGB6rGH2",
          "name": "Airtable Personal Access Token account 2"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Use this tool to search the web",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Authorization",
              "valueProvider": "fieldValue",
              "value": "API_TAVILY"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"query\": \"{searchTerm}\",\n  \"topic\": \"general\",\n  \"search_depth\": \"basic\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 1,\n  \"time_range\": null,\n  \"days\": 7,\n  \"include_answer\": true,\n  \"include_raw_content\": false,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_domains\": [],\n  \"exclude_domains\": []\n}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "searchTerm",
              "description": "What the user is requesting to search the web for"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        3380,
        920
      ],
      "id": "0290128c-8f58-43b1-893e-da3157a71b0b",
      "name": "Web Search"
    },
    {
      "parameters": {
        "description": "=User request:\n```text\n{{ $json.message.text }}\n\n\nYou are a helpful assistant. Your task is to:\n1. Retrieve the latest marketing news.\n2. Compare them with the existing entries in our knowledge_base.\n3. Check if any Instagram contacts in our database can cover these news."
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        2640,
        900
      ],
      "id": "eddd74eb-5305-456c-9725-7d21d26c8cd2",
      "name": "Think1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a multifunctional AI agent. Use **Think** for reflecting on complex tasks, such as comparing news and searching for contacts.\n\n## Tools\n- \"Think\" – for reflection, before performing tasks.\n- \"Web Search\" – to look up information on the internet.  \n- \"knowledge_base\" – to query our internal database.  \n- \"Telegram\" – to send prepared messages via our Telegram bot.\n\n## Instructions\n1. When a user request arrives, first analyze its intent.  \n2. Decide which tools are needed (Web Search, knowledge_base, Think, Telegram).  \n3. Use **Think** to plan the logic for any multi-step or conditional operations.  \n4. Invoke the selected tools in the proper sequence.  \n5. If required, deliver the detailed result through the Telegram node.  \n6. Finally, return a brief confirmation or summary to the user.\n7. Answer in Russian.\n8. Always refer to the \"Think\" node to properly complete and structure the task.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        2660,
        680
      ],
      "id": "86bf8c8e-2252-4924-bcf4-23fa8e8bd996",
      "name": "Think Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-3-5-sonnet-20241022",
          "mode": "list",
          "cachedResultName": "Claude 3.5 Sonnet (New)"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        2480,
        900
      ],
      "id": "c0723bfe-f4c5-4862-b677-ec9b99455ed1",
      "name": "Claude 3.5 Sonnet1",
      "credentials": {
        "anthropicApi": {
          "id": "r4EaRI5Kvj3xpuKm",
          "name": "n8n_1"
        }
      }
    },
    {
      "parameters": {
        "content": "# Пример: Выполнение множества задач и составление структуры этих задач.",
        "height": 680,
        "width": 2880,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        780,
        560
      ],
      "id": "03005ee1-3637-4789-976e-cc4fe0d6261b",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# Пример: Сложные задачи",
        "height": 80,
        "width": 720,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        560
      ],
      "id": "c5dcd309-7f2c-4565-a916-369bae2b0196",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "name": "quoter",
        "description": "Use this tool to get a quote. Send over the number of guests and the dates requested.",
        "workflowId": {
          "__rl": true,
          "value": "QpmzSqqw8uCpUTF1",
          "mode": "list",
          "cachedResultName": "Quoter"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        3160,
        1080
      ],
      "id": "cf3efd9e-1200-4b45-8e36-719b56a90109",
      "name": "quoter",
      "disabled": true
    },
    {
      "parameters": {
        "name": "availability",
        "description": "Call this tool to get availability information. Only send over the dates the user requested.",
        "workflowId": {
          "__rl": true,
          "value": "NxuKUt5jT8TDOtXs",
          "mode": "list",
          "cachedResultName": "Availability"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        3300,
        1080
      ],
      "id": "ac2b4e39-cc77-4314-ad62-a7504aa83994",
      "name": "availability",
      "disabled": true
    },
    {
      "parameters": {
        "content": "# 🛠️ Руководство по настройке  \n\n1. **Подключите Chat Trigger**  \n   Вставьте узел Chat Trigger в тот агент, который вы хотите использовать.\n\n2. **Назначьте правильную модель**  \n   Убедитесь, что для агента выбрана корректная чат-модель. Дважды проверьте, какая модель передаётся в узел агента.\n\n3. **Добавьте учётные данные**  \n   Убедитесь, что настроены все необходимые учётные данные:  \n   - Ваши чат-модели (например, OpenAI, Claude и т.д.)  \n   - Любые внешние инструменты или сервисы, используемые агентом\n\n4. **Настройка подпроцессов (Sub-Workflows)**  \n   Для подпроцессов, таких как **Quoter** и **Availability**:  \n   - Каждый из них должен находиться в **отдельном workflow**  \n   - Каждый должен начинаться с триггера **\"When Executed by Another Workflow\"**  \n   - Используйте тот же шаблон, что и в примере (например, как запускается Quoter)\n\n✅ После того как всё подключено и учётные данные добавлены, можно приступать к работе!  \n",
        "height": 540,
        "width": 600
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        600,
        1300
      ],
      "id": "787d277a-2f50-4a8f-8dc7-d8ac2aa95aa7",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "### Think \nThink Tool — это специальный под-узел (sub-node) для AI Agent в n8n, который позволяет «поговорить самому с собой» перед тем, как дать окончательный ответ. \n\nЕго основная задача — вынести промежуточное рассуждение или план действий для сложных запросов, требующих вдумчивого подхода\n\n### Когда и зачем использовать Think\n\nСложные логические задачи\nКогда нужно разобрать несколько условий или случаев (например, классические головоломки с «Jack–Anne–George»).\n\nПромежуточное планирование\nЕсли агенту требуется спланировать серию шагов (токены, API-вызовы, последующие инструменты) перед выполнением действий.\n\nПовышение прозрачности\nThink выдаёт текст рассуждений, который вы можете логировать или показывать пользователю как «черновик мысли» агента.\n\n",
        "height": 560,
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1280,
        1300
      ],
      "typeVersion": 1,
      "id": "feffdad4-6a53-4483-ad9c-059496437168",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "# Как нода **Think** помогает в автоматизации на базе n8n\n\n## Преимущества использования Think\n1. **Гибкое логическое ветвление**  \n   Think генерирует промежуточные рассуждения, по которым агент автоматически выбирает последующий инструмент или путь выполнения.  \n2. **Повышенная надёжность решений**  \n   Благодаря «мысленному» этапу агент проверяет сразу несколько сценариев, снижая риск неверного действия.  \n3. **Прозрачность и аудит**  \n   Логи рассуждений Think можно хранить и анализировать — видно, почему агент принял именно такое решение.  \n4. **Экономия токенов**  \n   Вместо нескольких отдельных запросов к модели ты один раз прогоняешь логику в Think и на основе её результата — выполняешь нужное действие.  \n\n---\n\n## Применение в ключевых бизнес-сценариях\n\n| Сценарий                                  | Что делает Think                              | Результат автоматизации                         |\n|-------------------------------------------|-----------------------------------------------|--------------------------------------------------|\n| **Обработка заявок клиентов**             | Анализирует текст обращения, определяет категорию (тех. поддержка, продажи, возврат) и предлагает следующий шаг | Автоматический роутинг тикета в нужный отдел     |\n| **Сбор и фильтрация лидов**               | Оценивает качество лида (по ключевым словам, истории взаимодействий) и рекомендует приоритет | Лиды с высоким приоритетом попадают в «горячую» очередь |\n| **Планирование контента для соцсетей**    | Разбирает тему, целевую аудиторию и предлагает структуру поста/рекламы | Генерация готовых шаблонов постов, которые отправляются на утверждение |\n| **Анализ конкурентных цен**               | Сравнивает полученные цены от разных API конкурентов, выбирает оптимальный вариант | Автоматическое обновление прайс-листа на сайте    |\n| **Умный чат-бот для консультаций**        | Прежде чем отвечать пользователю, Think оценивает сложность вопроса и собирает факты из базы знаний | Бот даёт точные, обоснованные ответы без «галлюки» |\n\n---\n\n## Шаги внедрения Think в твой n8n-workflow\n\n1. **Определи ключевую точку логики**  \n   Выбери узел, где требуется принятие решения на основе сложного анализа (фильтрация заявок, маршрутизация, подготовка данных).  \n2. **Добавь под-узел Think**  \n   Внутри AI Agent вставь Think перед основным Action Tool или Call Workflow.  \n3. **Пропиши чёткий Prompt**  \n   Опиши проблему и возможные варианты (например: “Если сумма заказа >1000 — … иначе — …”).  \n4. **Настрой параметры генерации**  \n   Установи умеренную temperature (0.3–0.5) и ограничь max tokens, чтобы рассуждения были ёмкими.  \n5. **Используй выход Think для ветвления**  \n   На основании ключевых фраз или JSON-тегов из ответа Think направляй поток к нужному инструменту.  \n6. **Логируй и анализируй**  \n   Сохраняй текст рассуждений в базе (Google Sheets, Airtable) — позже можно улучшить Prompt и повысить точность.  \n\n---\n\n## Рекомендации по оптимизации\n\n- **Минимизируй шаблон**: короткие, но информативные инструкции в Prompt ускорят вывод.  \n- **Тестируй в \"Demo\" режиме**: сначала вывод Think покажи в UI, чтобы убедиться, что он соответствует ожиданиям.  \n- **Итеративная доработка**: накапливай примеры неудачных рассуждений и добавляй их в примеры (few-shot) для повышения качества.  \n\n---\n\nИспользуя ноду **Think**, ты получаешь в своём AI-агенте настоящий «мозг», который помогает принимать взвешенные решения, экономит токены и делает автоматизацию в n8n более надёжной и понятной.  \n",
        "height": 1300,
        "width": 1600
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1760,
        1300
      ],
      "typeVersion": 1,
      "id": "2418c5fc-85c6-481d-ab4b-efc6bb92acb2",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "content": "### Сценарий | Что делает Think | Результат в n8n-workflow\n1. Маршрутизация заявок | Определяет тип обращения (продажи/техподдержка) и приоритет | Автоматически отправляет тикет нужному отделу\n2. Фильтрация лидов | Оценивает качество лида по тексту и истории взаимодействия | Лиды с высоким приоритетом сразу поступают «горячим»\n3. Генерация контента | Анализирует тему и ЦА → предлагает структуру поста | Автогенерация черновиков постов и сценариев для Reels\n4. Оптимизация цен | Сравнивает данные от 3 API конкурентов, выбирает лучшую цену | Обновление прайс-листа на сайте или в CRM\n5. Анализ обратной связи | Кластеризует отзывы клиентов по тональности и проблемам | Сводный отчёт для маркетолога или продукта",
        "height": 260,
        "width": 680
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        820,
        1960
      ],
      "typeVersion": 1,
      "id": "c693941f-cf21-4740-b7a7-57d415a2da7c",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "chatId": "190190068",
        "text": "={{ $fromAI('Text', ``, 'string') }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegramTool",
      "typeVersion": 1.2,
      "position": [
        3100,
        920
      ],
      "id": "1bcf37de-ca4b-48e8-acf1-39c8479a41d8",
      "name": "Telegram",
      "webhookId": "857135c4-66f4-4680-916e-4f7ca9ba393d",
      "credentials": {
        "telegramApi": {
          "id": "PZ8G2FOFBcVzOqdk",
          "name": "Telegram account (Бот помощник по Gmai)"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger1').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3320,
        680
      ],
      "id": "a21efb54-08d2-4967-8dcd-9e3a67148b04",
      "name": "Telegram1",
      "webhookId": "e8c4c596-04e1-4ebd-ae83-5928d527c444",
      "credentials": {
        "telegramApi": {
          "id": "XUm07jZTU6o7G7Zz",
          "name": "Telegram account 3 (Главный AI Помощник)"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        880,
        720
      ],
      "id": "71c6f101-db40-4aaa-9560-144c354a6734",
      "name": "Telegram Trigger1",
      "webhookId": "79408097-d284-4034-a6d7-65bb07b242ba",
      "credentials": {
        "telegramApi": {
          "id": "XUm07jZTU6o7G7Zz",
          "name": "Telegram account 3 (Главный AI Помощник)"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Telegram Trigger1').item.json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "dd8451ae-fc03-49d0-a19e-2678a5f4ff64"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bc42e6d3-ad50-4188-a168-9c5696e74252",
                    "leftValue": "={{ $('Telegram Trigger1').item.json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1720,
        700
      ],
      "id": "9f766570-3650-4cc4-9df6-f0dbd8584253",
      "name": "Switch1"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2080,
        960
      ],
      "id": "243e9e43-2a85-4111-b3b3-b8d244e23b2b",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "XLvdxNcexKfUmGhl",
          "name": "OpenAi account 3"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a9e919bb-8d22-4855-a7b6-a9e5a9f39778",
              "leftValue": "={{ $json.message.chat.username }}",
              "rightValue": "=igorzuevich\n",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1160,
        720
      ],
      "id": "8b8e465d-157c-48b7-87f1-5e801b87afde",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $('Telegram Trigger1').item.json.message.chat.id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1480,
        700
      ],
      "id": "9cdefaeb-d8dc-4d54-b10b-c1ff759b287e",
      "name": "Telegram2",
      "webhookId": "4f938fd7-6e62-45f5-9f45-118ed704bc35",
      "credentials": {
        "telegramApi": {
          "id": "XUm07jZTU6o7G7Zz",
          "name": "Telegram account 3 (Главный AI Помощник)"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dc04da2b-b648-42a4-9a04-bdf8a8d23508",
              "name": "message.text",
              "value": "={{ $('Telegram Trigger1').item.json.message.text }}{{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2340,
        680
      ],
      "id": "6252ecd5-70bf-4137-b4aa-6e8030fbd661",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Telegram Trigger1').item.json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1860,
        960
      ],
      "id": "7a06a19c-6241-4131-b3bc-55c4302415be",
      "name": "Telegram3",
      "webhookId": "0142b70e-e116-4fe0-bce6-bfc0fb8db9db",
      "credentials": {
        "telegramApi": {
          "id": "XUm07jZTU6o7G7Zz",
          "name": "Telegram account 3 (Главный AI Помощник)"
        }
      }
    },
    {
      "parameters": {
        "content": "### НАСТРОЙКА TELEGRAM: https://youtu.be/c8bePGmxFNw\n",
        "height": 80,
        "width": 380,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        860,
        1120
      ],
      "typeVersion": 1,
      "id": "04baf194-259d-4b7e-a19f-0666aff86b0e",
      "name": "Sticky Note1"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Think Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Think Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GPT 4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Think Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "knowlege_base": {
      "ai_tool": [
        [
          {
            "node": "Think Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "knowlege_base",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Contacts": {
      "ai_tool": [
        [
          {
            "node": "Think Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Web Search": {
      "ai_tool": [
        [
          {
            "node": "Think Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think1": {
      "ai_tool": [
        [
          {
            "node": "Think Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Claude 3.5 Sonnet1": {
      "ai_languageModel": [
        [
          {
            "node": "Think Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "quoter": {
      "ai_tool": [
        []
      ]
    },
    "availability": {
      "ai_tool": [
        []
      ]
    },
    "Telegram": {
      "ai_tool": [
        [
          {
            "node": "Think Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think Agent1": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram3": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Think Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "465ac918-9176-4f86-836f-6f4917faf11e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "479931a9b1c0980217b795eef202ec08aa8efa5933ee558f5e5c7dc32b0cdc9e"
  },
  "id": "CbvlylqjHiLDK5QN",
  "tags": []
}