{
  "name": "IGORZUEVICH_SNABLON_RSS_LENTA_TELEGRAM",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=Ты высокоэффективный чат-бот, и твоя задача — отвечать на вопросы, связанные с маркетингом, используя предоставленное тебе хранилище векторов.\n\n### Ограничения:\n\n- Ответы должны быть сгенерированы только на основе информации, предоставленной в хранилище векторов."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -120,
        0
      ],
      "id": "4b38671f-c527-4ec5-a278-682c7b83a0f2",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -200,
        280
      ],
      "id": "002b12af-a39b-4a4d-8cd5-35ff8218239f",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "marketing",
        "description": "Contains data on marketing"
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        240,
        360
      ],
      "id": "d16484ee-f811-4fb6-b20a-cfc0bb0de9dc",
      "name": "Answer questions with a vector store"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        360,
        700
      ],
      "id": "4115241c-e04c-416a-af39-259f355d6769",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "bazamark",
          "mode": "list",
          "cachedResultName": "bazamark"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.1,
      "position": [
        100,
        520
      ],
      "id": "4c2fee8b-9e7a-4ed4-b367-82ac0878057b",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "xHYJdGWUvOWZd8CK",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        160,
        700
      ],
      "id": "128931f2-1afa-4ddb-be7b-968d62c623e8",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## ИДЕЯ, ЦА И ЗАДАЧА\n",
        "height": 1020,
        "width": 860,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -240,
        -120
      ],
      "typeVersion": 1,
      "id": "5bc3755d-c405-49a1-8f92-e0a3d410e8a3",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "bazamark",
          "mode": "list",
          "cachedResultName": "bazamark"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        2320,
        40
      ],
      "id": "825f3ce2-ea5c-48bd-9ecf-9b8d55be67d7",
      "name": "Pinecone Vector Store1",
      "credentials": {
        "pineconeApi": {
          "id": "xHYJdGWUvOWZd8CK",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2240,
        300
      ],
      "id": "b318716e-b760-49fe-9035-a95742e37ea6",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "Publish Date",
                "value": "={{ $('Clean up').item.json.publishDate }}"
              },
              {
                "name": "Extraction Date",
                "value": "={{ $('Clean up').item.json.extractedAt }}"
              },
              {
                "name": "Content",
                "value": "={{ $('Clean up').item.json.content }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2520,
        240
      ],
      "id": "79c364fc-3ee5-4439-9cf5-3e76f9a1313f",
      "name": "Default Data Loader"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2580,
        440
      ],
      "id": "7295de5d-1b29-412a-926c-7db10d9a6c8c",
      "name": "Character Text Splitter"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        840,
        120
      ],
      "id": "ea64557b-9253-44aa-baa9-903c35c70567",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1280,
        120
      ],
      "id": "9ec6c2cf-d8ed-4bcc-9ef0-b22dbb11cda1",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "={{ $json.feed }}",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        1580,
        240
      ],
      "id": "6277c61c-1bd2-40cc-bfb2-f4274ee63f5a",
      "name": "RSS Read"
    },
    {
      "parameters": {
        "url": "={{ $json.link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1820,
        20
      ],
      "id": "311a1b33-7934-4808-80be-148cd2bd73cc",
      "name": "Get HTML"
    },
    {
      "parameters": {
        "jsCode": "return [\n { json: { feed: \"https://contentmarketinginstitute.com/blog/feed\" } }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        120
      ],
      "id": "7d3b2ec4-c98c-4ef7-8c97-0fde3bbfdeb0",
      "name": "Input RSS Feeds here"
    },
    {
      "parameters": {
        "jsCode": "// Get the HTML content from the response\nconst html = items[0].json.data;\n\n// Simple HTML to text converter function\nfunction htmlToText(html) {\n  return html\n    .replace(/<style[^>]*>.*?<\\/style>/gs, '')\n    .replace(/<script[^>]*>.*?<\\/script>/gs, '')\n    .replace(/<header[^>]*>.*?<\\/header>/gs, '')\n    .replace(/<footer[^>]*>.*?<\\/footer>/gs, '')\n    .replace(/<nav[^>]*>.*?<\\/nav>/gs, '')\n    .replace(/<aside[^>]*>.*?<\\/aside>/gs, '')\n    .replace(/<[^>]+>/g, ' ')\n    .replace(/\\s+/g, ' ')\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&[^;]+;/g, '')\n    .trim();\n}\n\n// Extract publish date using multiple methods\nfunction extractPublishDate(html) {\n    const metaDateMatch = html.match(/<meta property=\"article:published_time\" content=\"([^\"]+)\"/i) ||\n                         html.match(/<meta name=\"published_time\" content=\"([^\"]+)\"/i) ||\n                         html.match(/<meta name=\"date\" content=\"([^\"]+)\"/i);\n    \n    if (metaDateMatch) {\n        return new Date(metaDateMatch[1]).toISOString();\n    }\n\n    const schemaMatch = html.match(/<script type=\"application\\/ld\\+json\">[^{]*({[\\s\\S]*?})[^}]*<\\/script>/i);\n    if (schemaMatch) {\n        try {\n            const schema = JSON.parse(schemaMatch[1]);\n            if (schema.datePublished) {\n                return new Date(schema.datePublished).toISOString();\n            }\n        } catch (e) {}\n    }\n\n    const datePattern = /(?:Published|Updated|Posted on|Date):\\s*([A-Za-z]+\\s+\\d{1,2},\\s+\\d{4})|(\\d{4}-\\d{2}-\\d{2})/i;\n    const dateMatch = html.match(datePattern);\n    if (dateMatch) {\n        const dateStr = dateMatch[1] || dateMatch[2];\n        return new Date(dateStr).toISOString();\n    }\n\n    return new Date().toISOString();\n}\n\n// Extract content\nlet content = '';\nconst articleMatch = html.match(/<article[^>]*>([\\s\\S]*?)<\\/article>/i);\n\nif (articleMatch && articleMatch[1]) {\n  content = htmlToText(articleMatch[1]);\n} else {\n  content = htmlToText(html);\n}\n\n// Clean up the content\nconst cleanContent = content\n  .replace(/\\s+/g, ' ')\n  .replace(/\\n+/g, '\\n')\n  .replace(/\\t+/g, ' ')\n  .trim();\n\n// Remove common navigation text and footer text\nconst finalContent = cleanContent\n  .replace(/Menu.*?Search/g, '')\n  .replace(/Share this article/g, '')\n  .replace(/Related articles/g, '')\n  .replace(/Leave a comment/g, '');\n\nreturn {\n  json: {\n    content: finalContent,\n    publishDate: extractPublishDate(html),\n    extractedAt: new Date().toISOString()\n  }\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2060,
        20
      ],
      "id": "56ab4229-c939-4eb0-8640-6d9968fcd41e",
      "name": "Clean up"
    },
    {
      "parameters": {
        "content": "## ФОРМИРОВАНИЕ БАЗЫ",
        "height": 800,
        "width": 2080,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        760,
        -140
      ],
      "typeVersion": 1,
      "id": "a02e6598-1f84-4c95-b6c8-a1b336d10aa9",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9a7becbc-b3d1-4d5d-bec2-193ab95ea0cc",
              "leftValue": "={{ new Date($json[\"pubDate\"]).getTime() }}",
              "rightValue": "={{ new Date('2022-01-01T00:00:00Z').getTime() + (new Date().setHours(0, 0, 0, 0) - new Date('2022-01-01T00:00:00Z').setHours(0, 0, 0, 0)) }}",
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1520,
        -60
      ],
      "id": "ef4bc1c2-f65f-4eec-a33f-4b915c6f22c2",
      "name": "If"
    },
    {
      "parameters": {
        "content": "## @igorzuevich \n**Автор** на [YouTube](https://www.youtube.com/@igorzuevich)",
        "height": 240,
        "width": 280,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -7800,
        4500
      ],
      "typeVersion": 1,
      "id": "04f92d37-dd7b-4b97-8beb-7a5f208b2a99",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## СТАРТ\n",
        "height": 540,
        "width": 1260
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1600,
        320
      ],
      "typeVersion": 1,
      "id": "18b423b8-8294-4d12-931a-44e0b38759cc",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "9b5351fc-3c9d-4f82-b486-81c0d05393eb",
      "name": "Respond to Me",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        440,
        20
      ],
      "webhookId": "cd45388a-451a-42a0-b4aa-94857c5cc9f2",
      "credentials": {
        "telegramApi": {
          "id": "XUm07jZTU6o7G7Zz",
          "name": "Telegram account 3 (Главный AI Помощник)"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -40,
        220
      ],
      "id": "94651e4b-326b-4390-8830-44c13f7e0204",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $json.message.chat.id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1360,
        540
      ],
      "id": "d008d537-1242-410e-8272-9a61ae4c77b4",
      "name": "Telegram2",
      "webhookId": "8cd99b7a-3eca-4fd9-9b9a-168ea002f4b1",
      "credentials": {
        "telegramApi": {
          "id": "XUm07jZTU6o7G7Zz",
          "name": "Telegram account 3 (Главный AI Помощник)"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ca9cc06c-dcf8-457b-854b-4c03d3d15dcc",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1180,
        540
      ],
      "id": "05cc393a-e30d-4f9f-90d3-1959dae267fd",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -840,
        640
      ],
      "id": "de97c60a-fd7e-4fa3-acdc-287144607cf8",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Telegram Trigger').item.json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1020,
        640
      ],
      "id": "ebf4903b-aa00-4f72-a175-df08b4202a13",
      "name": "Telegram",
      "webhookId": "c66673cf-72f0-4233-82d8-70fe313d8765",
      "credentials": {
        "telegramApi": {
          "id": "XUm07jZTU6o7G7Zz",
          "name": "Telegram account 3 (Главный AI Помощник)"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c9d8e573-3830-4e93-9f74-4838b5ff49b5",
              "name": "text",
              "value": "={{ $('Telegram Trigger').item.json.message.text }} {{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -580,
        520
      ],
      "id": "e1206550-0bb9-4e7f-b6d6-064edd7e5055",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "5d1ef9b1-55fb-4dcb-9d9b-58a2fd3a6247",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -1540,
        540
      ],
      "webhookId": "2194a6b2-2302-4406-9c8c-207161b7eb22",
      "credentials": {
        "telegramApi": {
          "id": "XUm07jZTU6o7G7Zz",
          "name": "Telegram account 3 (Главный AI Помощник)"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Input RSS Feeds here",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "RSS Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get HTML": {
      "main": [
        [
          {
            "node": "Clean up",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input RSS Feeds here": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean up": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4ea7aa4c-9529-4386-9601-70461bc8923e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "479931a9b1c0980217b795eef202ec08aa8efa5933ee558f5e5c7dc32b0cdc9e"
  },
  "id": "IiN4tL3zyuKP3i0M",
  "tags": []
}