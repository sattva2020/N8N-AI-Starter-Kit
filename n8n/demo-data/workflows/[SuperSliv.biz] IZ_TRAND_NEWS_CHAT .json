{
  "name": "IZ_TRAND_NEWS_CHAT",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a friendly and informative news bot with access to fresh data through a vector store.\n\nROLE:\n- You are an expert at finding current information and news\n- You help users quickly get the information they need\n\nFUNCTIONALITY:\n- Always use the vector store to answer user queries\n- Skillfully transform user requests into effective search queries\n- Identify the main topic of the request and search for relevant information\n- Ask for clarification when the request is unclear\n\nSTYLE AND TONE:\n- Energetic, positive, and accessible\n- Use conversational language at an 8th-grade reading level\n- Be concise - sentences up to 15 words\n- Add an element of surprise or humor where appropriate\n- Use emojis to convey mood (1-2 per response)\n- Reply ONLY in Russian language, regardless of the language used in queries\n\nRESPONSE STRUCTURE:\n- Start with a direct answer to the question\n- Highlight key thoughts in **bold**\n- Add 1-2 interesting facts from the information found\n- Mention multiple perspectives when available\n- End with a logical transition to continue the conversation\n\nFORMAT:\n- Markdown with reasonable use of formatting\n- Structure information for easy reading\n- Avoid paragraphs longer than 3-4 lines\n\nCONSTRAINTS:\n- Never provide answers without consulting the vector store\n- If no answer is found, suggest: \"Я не нашел информации по этому вопросу.\"\n- Don't make up information\n- Strive for objectivity, don't exp"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -380,
        -380
      ],
      "id": "e6cef7eb-435f-4d24-b210-7aebc5d4137d",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "ai_news",
        "toolDescription": "Summarized news articles and YouTube transcripts related to AI",
        "pineconeIndex": {
          "__rl": true,
          "value": "ainewstest",
          "mode": "list",
          "cachedResultName": "ainewstest"
        },
        "includeDocumentMetadata": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        -220,
        -120
      ],
      "id": "136dc17c-5ffa-4460-965b-47742de83bfc",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "xHYJdGWUvOWZd8CK",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -200,
        40
      ],
      "id": "f633a069-813b-427a-9191-f56e0aad4381",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "VASH_API"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"{{ $json.queries }}\",\n  \"topic\": \"general\",\n  \"search_depth\": \"basic\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 2,\n  \"time_range\": \"day\",\n  \"days\": 1,\n  \"include_answer\": \"advanced\",\n  \"include_raw_content\": false,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_domains\": [],\n  \"exclude_domains\": []\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -840,
        1000
      ],
      "id": "20c32013-9bce-4f94-99a5-649a5b40e134",
      "name": "Tavily"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -2760,
        1960
      ],
      "id": "f2be31c4-34c4-4214-8a94-e582b076469f",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        880,
        2380
      ],
      "id": "11355156-171a-4d1e-9545-7b0351ec94b8",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/channels",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "part",
              "value": "id, snippet"
            },
            {
              "name": "forHandle",
              "value": "={{ $json.usernames }}"
            },
            {
              "name": "regionCode",
              "value": "US"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -640,
        2300
      ],
      "id": "39b14727-6356-4dad-bbb4-31a6b6a36e51",
      "name": "Get Channel ID",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "kaehDW4Ii5Pf7uw4",
          "name": "YouTube account"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 3000,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "typeVersion": 2,
      "position": [
        1320,
        1960
      ],
      "id": "6c9be419-4a9f-498f-8a9d-9a7ebb2ef415",
      "name": "Summarization Chain"
    },
    {
      "parameters": {
        "tableId": "news",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "title",
              "fieldValue": "={{ $json.output.title }}"
            },
            {
              "fieldId": "content",
              "fieldValue": "={{ $json.output.content }}"
            },
            {
              "fieldId": "type",
              "fieldValue": "News"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -60,
        780
      ],
      "id": "c9b63030-7ceb-4bac-bac0-59530c9370be",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "koxVIlMFEhTVYykk",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "news",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "title",
              "fieldValue": "={{ $json.output.title }}"
            },
            {
              "fieldId": "content",
              "fieldValue": "={{ $json.output.content }}"
            },
            {
              "fieldId": "type",
              "fieldValue": "YouTube"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2040,
        1960
      ],
      "id": "91b7102d-e4f2-4f41-99c0-c6f8e5fe4902",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "koxVIlMFEhTVYykk",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Repurpose this summarized article: {{ $json.answer }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are a professional editor and copywriter specializing in transforming technical and dry content into viral material that readers instantly remember.\n\nInstructions:\n1. Create a captivating, positive title with EXACTLY 5 words for the summary (place in <title>). The title should evoke curiosity without being clickbait.\n2. Rewrite the summary (place in <content>), using:\n   • Vivid, specific nouns instead of general ones\n   • Active verbs instead of passive ones\n   • Analogies and metaphors to simplify complex ideas\n   • Conversational, friendly tone as if explaining to a friend\n   • Short sentences and paragraphs for readability\n   • 1-2 questions to engage the reader\n   • Always end with a key takeaway\n\nOutput format:\n{\n\"title\": \"<title>\",\n\"content\": \"<content>\"\n}\n\nOutput:\n- Markdown formatting\n- Use **bold text** for 3-4 key terms/concepts\n- Use emojis maximum 2-3 times to emphasize emotional moments\n\nConstraints:\n- Strictly under 110 words for the summary\n- No subheadings in the summary\n- Don't use - or : in titles\n- Avoid clichés and formulaic phrases\n- Preserve all important facts from the original without distortion\n- No more than one exclamation mark"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -460,
        780
      ],
      "id": "35f4142d-e2fe-4c46-95a4-8983a17b00b7",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Repurpose this summarized article: {{ $json.response.text }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are a professional editor and copywriter specializing in transforming technical and dry content into viral material that readers instantly remember.\n\nInstructions:\n1. Create a captivating, positive title with EXACTLY 5 words for the summary (place in <title>). The title should evoke curiosity without being clickbait.\n2. Rewrite the summary (place in <content>), using:\n   • Vivid, specific nouns instead of general ones\n   • Active verbs instead of passive ones\n   • Analogies and metaphors to simplify complex ideas\n   • Conversational, friendly tone as if explaining to a friend\n   • Short sentences and paragraphs for readability\n   • 1-2 questions to engage the reader\n   • Always end with a key takeaway\n\nOutput format:\n{\n\"title\": \"<title>\",\n\"content\": \"<content>\"\n}\n\nOutput:\n- Markdown formatting\n- Use **bold text** for 3-4 key terms/concepts\n- Use emojis maximum 2-3 times to emphasize emotional moments\n\nConstraints:\n- Strictly under 110 words for the summary\n- No subheadings in the summary\n- Don't use - or : in titles\n- Avoid clichés and formulaic phrases\n- Preserve all important facts from the original without distortion\n- No more than one exclamation mark"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1680,
        1960
      ],
      "id": "b53d91d1-ce39-4521-9f3c-3c336f8e6b8a",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1340,
        2180
      ],
      "id": "c7ba8926-e8bb-44e8-930e-d6bcff853950",
      "name": "4o-mini",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/search",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "part",
              "value": "snippet"
            },
            {
              "name": "channelId",
              "value": "={{ $json.ChannelId }}"
            },
            {
              "name": "type",
              "value": "channel"
            },
            {
              "name": "maxResults",
              "value": "1"
            },
            {
              "name": "order",
              "value": "date"
            },
            {
              "name": "type",
              "value": "video"
            },
            {
              "name": "publishedAfter",
              "value": "={{ new Date(Date.UTC(new Date().getUTCFullYear(), new Date().getUTCMonth(), new Date().getUTCDate() - 1, 0, 0, 0)).toISOString() }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        340,
        2160
      ],
      "id": "c3324931-99a3-497d-84d9-43708a52cf0c",
      "name": "Get 1 Video",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "kaehDW4Ii5Pf7uw4",
          "name": "YouTube account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "items",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -640,
        2160
      ],
      "id": "e2d2594d-6e79-4383-ad75-e7992c49e83c",
      "name": "Split Items"
    },
    {
      "parameters": {
        "fieldToSplitOut": "items",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        280,
        1960
      ],
      "id": "0f5a6de7-da76-44d7-98f3-5cbd80c18098",
      "name": "Split Items Again"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "57cb180d-a772-4537-b86f-488b5d1e0f51",
              "name": "videoId",
              "value": "={{ $json.id.videoId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        680,
        2380
      ],
      "id": "f8603fdd-be80-49f2-a55e-a2eaf7f3bd4f",
      "name": "Set VideoId"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "ainewstest",
          "mode": "list",
          "cachedResultName": "ainewstest"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        140,
        780
      ],
      "id": "45e31ce4-54b2-4cd3-8369-40316196e5c4",
      "name": "Pinecone Vector Store1",
      "credentials": {
        "pineconeApi": {
          "id": "xHYJdGWUvOWZd8CK",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "title",
                "value": "={{ $('Supabase').item.json.title }}"
              },
              {
                "name": "content",
                "value": "={{ $('Supabase').item.json.content }}"
              },
              {
                "name": "=type",
                "value": "={{ $('Supabase').item.json.type }}"
              },
              {
                "name": "created_at",
                "value": "={{ $('Supabase').item.json.created_at }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        280,
        1000
      ],
      "id": "069411fa-31fe-4e00-ad4c-99a51487e377",
      "name": "Default Data Loader"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "typeVersion": 1,
      "position": [
        300,
        1160
      ],
      "id": "e1c45962-e1b6-49e7-b7a8-36dcee8e7fc2",
      "name": "Token Splitter"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "ainewstest",
          "mode": "list",
          "cachedResultName": "ainewstest"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        2240,
        1960
      ],
      "id": "e452e3ca-da8b-42ab-a6f2-5aa85edd2644",
      "name": "Pinecone Vector Store2",
      "credentials": {
        "pineconeApi": {
          "id": "xHYJdGWUvOWZd8CK",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "title",
                "value": "={{ $('Supabase1').item.json.title }}"
              },
              {
                "name": "content",
                "value": "={{ $('Supabase1').item.json.content }}"
              },
              {
                "name": "=type",
                "value": "={{ $('Supabase1').item.json.type }}"
              },
              {
                "name": "created_at",
                "value": "={{ $('Supabase1').item.json.created_at }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2380,
        2180
      ],
      "id": "9146aa95-11ff-44d2-87b1-79bc8fdf79d0",
      "name": "Default Data Loader1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "typeVersion": 1,
      "position": [
        2400,
        2340
      ],
      "id": "f889922a-1cc4-4dd4-a4f3-1cbc5eaa76f5",
      "name": "Token Splitter1"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"usernames\": {\n  \"username1\": \"igorzuevich\",\n  \"username2\": \"OpenAI\",\n  \"username3\": \"AI.Uncovered\",\n  \"username4\": \"aiadvantage\",\n  \"username5\": \"AICodeKing\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1660,
        2160
      ],
      "id": "8df82589-9b51-424b-acd9-027a97f02052",
      "name": "YouTube Users"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -560,
        -120
      ],
      "id": "304681d5-52f4-4839-b8af-ddc946bfa02d",
      "name": "4o-minix",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1260,
        2160
      ],
      "id": "1c037790-de8b-4702-bb27-dd7e13e22d78",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "usernames",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1460,
        2160
      ],
      "id": "9793759c-e431-45de-abf4-aaf8fd7eb65d",
      "name": "Split Out"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "da2f5f04-78ad-4ec2-838f-542d33b13fe4",
              "name": "ChannelId",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -440,
        2160
      ],
      "id": "71effdfb-36ab-495d-957d-e3f60a9689b9",
      "name": "Set"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -240,
        2160
      ],
      "id": "a813bb6b-8dbb-4a2b-942d-c4c3910eb41d",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1640,
        2380
      ],
      "id": "a1034357-6991-4eaa-b0d6-f734429514c9",
      "name": "Wait",
      "webhookId": "79705520-d4f0-40b3-a530-6fc633786bf1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        120,
        1000
      ],
      "id": "1393a6c3-e273-482b-997c-3a2f3e572826",
      "name": "3-small",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2220,
        2180
      ],
      "id": "e2f49680-27a5-4039-9256-f3b1618455cf",
      "name": "3-small-x",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"title\": \"<title>\",\n\t\"content\": \"<content>\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -320,
        1000
      ],
      "id": "0dc3e3be-462a-466d-8cc8-6f33772c7e5f",
      "name": "Parser"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"title\": \"<title>\",\n\t\"content\": \"<content>\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1860,
        2180
      ],
      "id": "7f096b51-c513-4ef3-b703-ff66fe2c61f8",
      "name": "Parserx"
    },
    {
      "parameters": {
        "fieldToSplitOut": "queries",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1440,
        1000
      ],
      "id": "8cd34384-308b-4df4-bacd-ca31fea2293b",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1220,
        1000
      ],
      "id": "91ecfb3a-7ed6-435d-acc4-7d788bf8f846",
      "name": "Loop Over Items3"
    },
    {
      "parameters": {
        "content": "## Замените запросы на то, что вы хотите искать.",
        "height": 100,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1800,
        880
      ],
      "typeVersion": 1,
      "id": "c30414c2-05dd-4054-bb66-531de8707a01",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Разместите здесь имена пользователей ваших любимых ютуберов, которых хотите отслеживать\n\n## Примечание: Старайтесь добавлять действительно активных ютуберов, так как если они не публикуют много контента, например, раз в месяц, вы не получите много новых видео и т.д.",
        "height": 320,
        "width": 580,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1960,
        2360
      ],
      "typeVersion": 1,
      "id": "3936e118-5029-4899-9c15-a2061d4a3caa",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Добавьте ваш API-ключ Tavily\n\n### www.tavily.com",
        "height": 120,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -980,
        1200
      ],
      "typeVersion": 1,
      "id": "ec900493-e4fe-4458-956f-e9a1211a2497",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "### Подключите (создайте и используйте учетные данные OpenAI)",
        "height": 80,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1840,
        2340
      ],
      "typeVersion": 1,
      "id": "9500d759-b7a3-4db1-92a5-567a103162dc",
      "name": "Sticky Note4",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Добавьте ваш ключ RapidAPI для API транскрипции YouTube\n\n### https://rapidapi.com/solid-api-solid-api-default/api/youtube-transcript3/playground/\n\n\n### Зарегистрируйтесь на RapidAPI, если вы еще этого не сделали, подпишитесь на план API для транскрипции YouTube и используйте API-ключ для вашей учетной записи",
        "height": 320,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        620,
        1920
      ],
      "typeVersion": 1,
      "id": "c22d0b7f-3710-4708-91e8-7a84c5b499c3",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "### Подключите (учетные данные Supabase)",
        "height": 80,
        "width": 280,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        660
      ],
      "typeVersion": 1,
      "id": "e4553806-a7c0-4671-baeb-17eef66db159",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "### Подключите учетные данные YouTube\n\n### : https://youtu.be/yyj9Hyr86ag",
        "height": 120,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        220,
        2380
      ],
      "typeVersion": 1,
      "id": "97192cd3-1d37-469d-be90-ac36c44566f3",
      "name": "Sticky Note9",
      "disabled": true
    },
    {
      "parameters": {
        "content": "###Подключите учетные данные Pinecone.",
        "height": 80,
        "width": 280,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        120,
        -180
      ],
      "typeVersion": 1,
      "id": "285b450b-4c99-41a0-9a5a-5875434d84fd",
      "name": "Sticky Note10",
      "disabled": true
    },
    {
      "parameters": {
        "content": "### Подключите учетные данные OpenAI",
        "height": 80,
        "width": 260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -620,
        20
      ],
      "typeVersion": 1,
      "id": "aaf676c0-6c8c-45ba-a170-ee5be4188eea",
      "name": "Sticky Note11",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Всё устраивает?\n\n###Замените триггер \"При нажатии\" на триггер по расписанию, чтобы запускать автоматически раз в 24 часа.",
        "width": 420,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2820,
        2180
      ],
      "typeVersion": 1,
      "id": "3360ef76-040d-4c8e-96a0-da781fa826d7",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtMinute": 1
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2740,
        1780
      ],
      "id": "b7d87853-6a18-4099-ae47-7c43234608f5",
      "name": "Run every 24 hours"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"queries\": {\n    \"query1\": \"n8n\",\n    \"query10\": \"ai models\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1660,
        1000
      ],
      "id": "acbecd70-2da4-4ebd-be4e-3b7618f4e615",
      "name": "Queries"
    },
    {
      "parameters": {
        "content": "### Настройте ваше пространство имен в Pinecone (на ваше собственное), а также тип информации в нем.",
        "height": 100,
        "width": 320,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -60,
        -20
      ],
      "typeVersion": 1,
      "id": "f3446358-dca0-4e06-96e4-b5ff20405d4b",
      "name": "Sticky Note13",
      "disabled": true
    },
    {
      "parameters": {
        "content": "### Подключите (создайте и используйте учетные данные OpenAI)",
        "height": 80,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -280,
        1160
      ],
      "typeVersion": 1,
      "id": "13a70285-ce20-4c20-87de-ed1969a18ad7",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "content": "### Подключите (учетные данные Supabase)",
        "height": 80,
        "width": 280,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1940,
        1840
      ],
      "typeVersion": 1,
      "id": "ffbbfd49-f5ef-471a-9455-80d93087709f",
      "name": "Sticky Note15",
      "disabled": true
    },
    {
      "parameters": {
        "content": "### Подключите учетные данные YouTube\n\n### : https://youtu.be/yyj9Hyr86ag",
        "height": 120,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -740,
        2560
      ],
      "typeVersion": 1,
      "id": "3adc24d3-599e-408a-bd25-ccf95535a9fb",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "content": "## ПРОМПТ\nВы профессиональный редактор и копирайтер со специализацией на трансформации технических и сухих текстов в вирусный контент, который читатели мгновенно запоминают.\n\nИнструкции:\n1. Создайте захватывающий, позитивный заголовок из ТОЧНО 5 слов для сводки (поместите в <title>). Заголовок должен вызывать любопытство, но не быть кликбейтом.\n2. Перепишите сводку (поместите в <content>), используя:\n   • Яркие, конкретные существительные вместо общих\n   • Активные глаголы вместо пассивных\n   • Аналогии и метафоры для упрощения сложных идей\n   • Разговорный, дружелюбный тон, будто объясняете другу\n   • Короткие предложения и абзацы для легкости чтения\n   • 1-2 вопроса для вовлечения читателя\n   • Всегда заканчивайте ключевым выводом\n\nФормат вывода:\n{\n\"title\": \"<title>\",\n\"content\": \"<content>\"\n}\n\nВывод:\n- Markdown форматирование\n- Используйте **жирный шрифт** для 3-4 ключевых терминов/понятий\n- Используйте эмодзи максимум 2-3 раза для подчеркивания эмоциональных моментов\n\nОграничения:\n- Строго до 110 слов для сводки\n- Никаких подзаголовков в сводке\n- Не используйте - или : в заголовках\n- Избегайте клише и шаблонных фраз\n- Сохраняйте все важные факты из оригинала без искажений\n- Никаких восклицательных знаков больше одного",
        "height": 780,
        "width": 560,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        660
      ],
      "typeVersion": 1,
      "id": "34d84a5f-e78e-40b8-89b9-bb40ed0c3fb5",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -540,
        1000
      ],
      "id": "6edda670-ddc0-4c41-97fb-56a50c55c4a1",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://youtube-transcripts.p.rapidapi.com/youtube/transcript\n",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "videoId",
              "value": "={{ $json.videoId }}"
            },
            {
              "name": "flat_text",
              "value": "true"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-rapidapi-key",
              "value": "VASH_API"
            },
            {
              "name": "x-rapidapi-host",
              "value": "youtube-transcripts.p.rapidapi.com"
            }
          ]
        },
        "options": {
          "response": {}
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1120,
        2380
      ],
      "id": "3115a4b8-af89-42c3-8905-6a2d1fbc0f09",
      "name": "Transcribe1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4eb11523-0575-4d12-a159-cb7bc9ed3942",
              "name": "content.text",
              "value": "={{ $json[\"content\"] && $json[\"content\"].map(item => item.text).join(\" \") || \"\" }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1380,
        2380
      ],
      "id": "300f1f87-ad86-4c5c-8a3e-f7cb2b6ca6c3",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1600,
        2180
      ],
      "id": "79512e29-521e-4651-9650-a3da48a6c4c3",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "T7XqlsJ9D3iey8AW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## ПРОМПТ \nТы дружелюбный и информативный новостной бот с доступом к свежим данным через векторное хранилище.\n\nРОЛЬ:\n- Ты эксперт по поиску актуальной информации и новостей\n- Ты помогаешь пользователям быстро получать нужную информацию\n\nФУНКЦИОНАЛ:\n- Всегда используй векторное хранилище для ответов на запросы пользователей\n- Умело преобразуй запросы пользователей в эффективные поисковые запросы\n- Определяй главную тему запроса и ищи подходящую информацию\n- При неясном запросе запрашивай уточнение темы\n\nСТИЛЬ И ТОН:\n- Энергичный, позитивный и доступный\n- Используй разговорный язык на уровне 8-го класса\n- Будь лаконичным - предложения до 15 слов\n- Добавляй элемент неожиданности или юмора где уместно\n- Используй эмодзи для передачи настроения (1-2 на ответ)\n\nСТРУКТУРА ОТВЕТОВ:\n- Начинай с прямого ответа на вопрос\n- Выделяй ключевые мысли **жирным шрифтом**\n- Добавляй 1-2 интересных факта из найденной информации\n- При наличии нескольких точек зрения упоминай их\n- Заканчивай логичным переходом к продолжению разговора\n\nФОРМАТ:\n- Markdown с разумным использованием форматирования\n- Структурируй информацию для удобства чтения\n- Избегай абзацев длиннее 3-4 строк\n\nОГРАНИЧЕНИЯ:\n- Не давай ответов без обращения к векторному хранилищу\n- Если не нашлось ответа, предложи: \"Я не нашел информации по этому вопросу. Попробуй спросить о новых моделях ИИ, последних технологических новостях или трендах в [релевантная область]\"\n- Не выдумывай информацию\n- Стремись к объективности, не выражай политические предпочтения",
        "height": 860,
        "width": 600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        460,
        -440
      ],
      "typeVersion": 1,
      "id": "a0e5b38a-4663-4049-969b-0ab42b05ebd7",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## СБОР НОВОСТЕЙ",
        "height": 2240,
        "width": 5800,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2880,
        540
      ],
      "typeVersion": 1,
      "id": "ee47bfd3-a4d2-449d-901b-bc56798237c3",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "## ОБЩЕНИЕ",
        "height": 1140,
        "width": 2300,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1040,
        -660
      ],
      "typeVersion": 1,
      "id": "c5559cb1-4f3c-4cd3-8e02-16f9201f9ca6",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "## СВЕЖИЕ НОВОСТИ\n",
        "height": 800,
        "width": 2480
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1860,
        600
      ],
      "typeVersion": 1,
      "id": "d4c1f5d7-56e6-4d64-973f-51e421c05eb0",
      "name": "Sticky Note23"
    },
    {
      "parameters": {
        "content": "## YOUTUBE",
        "height": 1140,
        "width": 4700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1980,
        1580
      ],
      "typeVersion": 1,
      "id": "0add159c-4517-4f77-ac51-27ebc0bda55c",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -840,
        -380
      ],
      "id": "3e91705b-5508-4de3-8bfc-69ca467f6aca",
      "name": "When chat message received",
      "webhookId": "deae2339-090a-4191-8bb0-323b5b920126"
    }
  ],
  "pinData": {
    "Set": [
      {
        "json": {
          "ChannelId": "UCO85GRCGUWMH08jjBZwdq7g"
        }
      },
      {
        "json": {
          "ChannelId": "UCXZCJLdBC09xxGZ6gcdrc6A"
        }
      },
      {
        "json": {
          "ChannelId": "UCUTF61UNExRdjmoK5mXwWfQ"
        }
      },
      {
        "json": {
          "ChannelId": "UCHhYXsLBEVVnbvsq57n1MTQ"
        }
      },
      {
        "json": {
          "ChannelId": "UC0m81bQuthaQZmFbXEY9QSw"
        }
      }
    ],
    "Summarization Chain": [
      {
        "json": {
          "response": {
            "text": "The ideal seller or assistant is one who remembers everything about their client. Using the N8N service, a system has been created that allows for the retention of detailed client interactions, including not just chat history but also the construction of a meaningful relationship map. For example, it can remember a client’s social media presence, interests, and personal details, like allergies. This ongoing interaction enables the assistant or seller to tailor their communication and services, enhancing customer relationships by actively recalling past conversations and personal preferences."
          }
        }
      },
      {
        "json": {
          "response": {
            "text": "Nvidia has launched the Llama 3.1 Neatron Ultra 253B, a large language model based on Meta's older Llama 3.145B Instruct model. With 253 billion parameters, it outperforms competitors like DeepSeek R1 in AI performance tests, excelling in tasks such as advanced reasoning, math, and coding. The model's innovative design includes enhanced structure and techniques that optimize memory and computing efficiency, allowing it to run effectively on fewer GPUs. Nvidia emphasizes collaboration by making its code, training data, and weights publicly available on Hugging Face. Through meticulous post-training refinement, the model is designed for adaptability and user-friendliness, showcasing significant advancements in AI capabilities while maintaining a leaner architecture."
          }
        }
      },
      {
        "json": {
          "response": {
            "text": "Minamax has launched its advanced audio 2 text-to-speech model at minmax.io/audio, offering users 4,000 free credits daily. The platform allows for script input, document uploads, and website narration, supporting text up to 200,000 characters in over 30 languages, with a variety of voice options customizable by language, accent, gender, and age. Users can choose between an HD model for high quality and a turbo model for faster output, and they can create custom voices by uploading audio. With features like emotional tone adjustment and a history tracker, the tool is ideal for content creators looking to produce audiobooks and podcasts without hiring voice actors. Overall, it provides efficient and quality audio generation for personal use."
          }
        }
      }
    ]
  },
  "connections": {
    "Pinecone Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "YouTube Users",
            "type": "main",
            "index": 0
          },
          {
            "node": "Queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Summarization Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Transcribe1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Channel ID": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarization Chain": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tavily": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4o-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Summarization Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get 1 Video": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Items": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Items Again": {
      "main": [
        [
          {
            "node": "Set VideoId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set VideoId": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store2",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Users": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4o-minix": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Split Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Channel ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [
          {
            "node": "Split Items Again",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get 1 Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3-small": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "3-small-x": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parserx": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Tavily",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Queries": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8850dc3d-d1a0-4a8d-9045-f0dd6feb43c4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "479931a9b1c0980217b795eef202ec08aa8efa5933ee558f5e5c7dc32b0cdc9e"
  },
  "id": "QIRXclL0l4W5Reub",
  "tags": []
}