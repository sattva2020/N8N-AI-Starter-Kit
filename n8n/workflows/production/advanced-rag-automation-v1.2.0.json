{
  "name": "Advanced RAG Pipeline Automation v1.2.0",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "rag-automation",
        "responseMode": "responseNode"
      },
      "id": "f5c8b8a1-1234-4567-8910-abcdef123456",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "auto-rag-pipeline"
    },
    {
      "parameters": {
        "url": "http://document-processor:8001/documents",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendQuery": false,
        "sendHeaders": false,
        "sendBody": false
      },
      "id": "a1b2c3d4-5678-9012-3456-abcdef789012",
      "name": "Get Documents List",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "={{ $json.total }}",
            "operation": "larger",
            "rightValue": 0
          }
        }
      },
      "id": "b2c3d4e5-6789-0123-4567-bcdef8901234",
      "name": "Check Documents Exist",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "url": "http://document-processor:8001/documents/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendQuery": false,
        "sendHeaders": true,
        "specifyHeaders": "keypair",
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  \"query\": $json.body.query || \"тестирование RAG\",\n  \"threshold\": $json.body.threshold || 0.05,\n  \"limit\": $json.body.limit || 5\n}) }}"
      },
      "id": "c3d4e5f6-7890-1234-5678-cdef90123456",
      "name": "Semantic Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "url": "http://web-interface:8002/api/search",
        "authentication": "genericCredentialType", 
        "genericAuthType": "httpBasicAuth",
        "sendQuery": false,
        "sendHeaders": true,
        "specifyHeaders": "keypair",
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  \"query\": $json.body.query || \"модернизация AI\",\n  \"threshold\": $json.body.threshold || 0.05,\n  \"limit\": $json.body.limit || 3\n}) }}"
      },
      "id": "d4e5f6g7-8901-2345-6789-def012345678",
      "name": "Web Interface Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "jsCode": "// Объединяем результаты поиска из обоих источников\nconst directSearch = $input.first().json;\nconst webSearch = $input.last().json;\n\n// Создаем сводный отчет\nconst report = {\n  timestamp: new Date().toISOString(),\n  query: directSearch.query || webSearch.query,\n  direct_search: {\n    total_found: directSearch.total_found,\n    search_time_ms: directSearch.search_time_ms,\n    results: directSearch.results || []\n  },\n  web_interface_search: {\n    total_found: webSearch.total_found,\n    search_time_ms: webSearch.search_time_ms,\n    results: webSearch.results || []\n  },\n  performance: {\n    avg_search_time: ((directSearch.search_time_ms || 0) + (webSearch.search_time_ms || 0)) / 2,\n    total_documents_processed: (directSearch.total_found || 0) + (webSearch.total_found || 0)\n  },\n  status: 'SUCCESS',\n  message: 'Advanced RAG Pipeline automation completed successfully'\n};\n\nreturn report;"
      },
      "id": "e5f6g7h8-9012-3456-7890-ef0123456789",
      "name": "Process Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "f6g7h8i9-0123-4567-8901-f01234567890",
      "name": "Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"error\": \"No documents found in the system\", \"status\": \"ERROR\", \"timestamp\": new Date().toISOString() } }}"
      },
      "id": "g7h8i9j0-1234-5678-9012-012345678901",
      "name": "No Documents Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 500]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Get Documents List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Documents List": {
      "main": [
        [
          {
            "node": "Check Documents Exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Documents Exist": {
      "main": [
        [
          {
            "node": "Semantic Search",
            "type": "main",
            "index": 0
          },
          {
            "node": "Web Interface Search",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Documents Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Semantic Search": {
      "main": [
        [
          {
            "node": "Process Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Web Interface Search": {
      "main": [
        [
          {
            "node": "Process Results",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Process Results": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8a2db8f4-5c3d-41e7-9f12-7b6e8c4a9d2f",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "rag-automation-v1-2-0",
  "tags": [
    {
      "createdAt": "2025-06-24T12:00:00.000Z",
      "updatedAt": "2025-06-24T12:00:00.000Z",
      "id": "rag-pipeline",
      "name": "RAG Pipeline"
    },
    {
      "createdAt": "2025-06-24T12:00:00.000Z", 
      "updatedAt": "2025-06-24T12:00:00.000Z",
      "id": "automation",
      "name": "Automation"
    }
  ]
}
