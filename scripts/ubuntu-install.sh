#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n-ai-starter-kit –Ω–∞ Ubuntu
# –í–µ—Ä—Å–∏—è: 1.0.0

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

echo "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n-ai-starter-kit"
echo "================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
if ! grep -q "Ubuntu" /etc/os-release; then
    error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Ubuntu. –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –¥—Ä—É–≥–∞—è –û–°."
fi

log "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ Ubuntu $(lsb_release -rs)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ sudo
if ! sudo -n true 2>/dev/null; then
    warn "–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ sudo. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è."
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update -y
sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
sudo apt install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    git \
    wget

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π
    sudo apt remove -y docker docker-engine docker.io containerd runc 2>/dev/null || true
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ GPG –∫–ª—é—á–∞
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
    sudo apt update -y
    sudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
    sudo usermod -aG docker $USER
    
    log "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    log "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker --version)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
if ! docker compose version &> /dev/null; then
    error "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è Docker."
fi

log "Docker Compose –Ω–∞–π–¥–µ–Ω: $(docker compose version --short)"

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_DIR="$HOME/N8N-AI-Starter-Kit"

if [ -d "$PROJECT_DIR" ]; then
    warn "–ü–∞–ø–∫–∞ $PROJECT_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç..."
    cd "$PROJECT_DIR"
    git pull origin main
else
    log "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
    cd "$HOME"
    git clone https://github.com/sattva2020/N8N-AI-Starter-Kit.git
    cd N8N-AI-Starter-Kit
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤..."
chmod +x scripts/*.sh
chmod +x start.sh

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã..."
if [ -f "./scripts/diagnose.sh" ]; then
    ./scripts/diagnose.sh
else
    warn "–°–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
log "–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."
echo ""
echo "üîß –¢–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –º–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
echo "–í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —É–∫–∞–∑–∞—Ç—å:"
echo "  - Email –¥–ª—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
echo "  - –î–æ–º–µ–Ω–Ω–æ–µ –∏–º—è (–∏–ª–∏ localhost)"
echo "  - OpenAI API –∫–ª—é—á"
echo ""
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    ./scripts/setup.sh
    
    log "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞..."
    ./start.sh
    
    echo ""
    echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üåê –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:"
    echo "  - n8n: http://localhost:5678"
    echo "  - Qdrant: http://localhost:6333"
    echo "  - Traefik: http://localhost:8080"
    echo ""
    echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  - –°—Ç–∞—Ç—É—Å: docker compose ps"
    echo "  - –õ–æ–≥–∏: docker compose logs -f"
    echo "  - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker compose down"
    echo "  - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: ./scripts/diagnose.sh"
    echo ""
    echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: ./docs/UBUNTU_DEPLOYMENT.md"
else
    log "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞."
    echo ""
    echo "–î–ª—è —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "  cd $PROJECT_DIR"
    echo "  ./scripts/setup.sh"
    echo "  ./start.sh"
fi

log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –≥—Ä—É–ø–ø—ã docker
if groups $USER | grep -q docker; then
    log "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ docker"
else
    warn "–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã docker:"
    echo "  newgrp docker"
    echo "  –∏–ª–∏ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω—å—Ç–µ—Å—å –≤ —Å–∏—Å—Ç–µ–º—É"
fi
