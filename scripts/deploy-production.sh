#!/bin/bash

# N8N AI Starter Kit - Production Deployment Script
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å SSL

set -e

echo "üöÄ N8N AI Starter Kit - Production Deployment"
echo "=============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è .env.production
check_production_env() {
    if [ ! -f ".env.production" ]; then
        log_warn ".env.production –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        log_info "–°–æ–∑–¥–∞—é –∏–∑ —à–∞–±–ª–æ–Ω–∞ .env.production.template..."
        
        if [ -f ".env.production.template" ]; then
            cp .env.production.template .env.production
            log_warn "‚ö†Ô∏è  –í–ê–ñ–ù–û: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env.production –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º!"
            log_info "–ò–∑–º–µ–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è:"
            echo "  - DOMAIN_NAME=yourdomain.com"
            echo "  - ACME_EMAIL=admin@yourdomain.com"  
            echo "  - –í—Å–µ –ø–∞—Ä–æ–ª–∏ CHANGE_THIS_*"
            echo ""
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –Ω–∞—Å—Ç—Ä–æ–∏—Ç–µ .env.production..."
        else
            log_error "–§–∞–π–ª .env.production.template –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
        fi
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –∏ –¥–æ–º–µ–Ω–æ–≤
check_dns() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –Ω–∞—Å—Ç—Ä–æ–µ–∫..."
    
    source .env.production
    
    if [ "$DOMAIN_NAME" = "yourdomain.com" ]; then
        log_error "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –¥–æ–º–µ–Ω –≤ .env.production"
        exit 1
    fi
    
    log_info "–î–æ–º–µ–Ω: $DOMAIN_NAME"
    log_info "N8N: $N8N_DOMAIN"
    log_info "Web Interface: $WEB_INTERFACE_DOMAIN"
    log_info "API: $DOCUMENT_PROCESSOR_DOMAIN"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
check_ports() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤ 80 –∏ 443..."
    
    if netstat -tulpn | grep -q ":80 "; then
        log_warn "–ü–æ—Ä—Ç 80 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
    fi
    
    if netstat -tulpn | grep -q ":443 "; then
        log_warn "–ü–æ—Ä—Ç 443 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
setup_directories() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    mkdir -p ./data/uploads
    mkdir -p ./data/processed
    mkdir -p ./config/traefik/dynamic
    
    # –ü—Ä–∞–≤–∞ –¥–ª—è Let's Encrypt
    sudo mkdir -p /etc/letsencrypt
    sudo chmod 755 /etc/letsencrypt
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ development —Å–µ—Ä–≤–∏—Å–æ–≤
stop_development() {
    log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ development —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose --profile default --profile cpu --profile developer down
}

# –ó–∞–ø—É—Å–∫ production —Å–µ—Ä–≤–∏—Å–æ–≤
start_production() {
    log_info "–ó–∞–ø—É—Å–∫ production —Å–µ—Ä–≤–∏—Å–æ–≤ —Å SSL..."
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º production environment
    docker-compose --env-file .env.production --profile production up -d
    
    log_info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 30
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
    docker-compose --env-file .env.production --profile production ps
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
check_ssl() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
    
    source .env.production
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
    for domain in "$N8N_DOMAIN" "$WEB_INTERFACE_DOMAIN" "$DOCUMENT_PROCESSOR_DOMAIN"; do
        log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ $domain..."
        if curl -k -f "https://$domain/health" >/dev/null 2>&1; then
            log_success "‚úÖ $domain –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ HTTPS"
        else
            log_warn "‚ö†Ô∏è  $domain –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    done
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏
show_deployment_info() {
    log_success "üéâ Production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo ""
    echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–∞—Ö:"
    
    source .env.production
    
    echo "‚îú‚îÄ‚îÄ ü§ñ N8N Workflow Automation: https://$N8N_DOMAIN"
    echo "‚îú‚îÄ‚îÄ üåê Web Interface: https://$WEB_INTERFACE_DOMAIN"  
    echo "‚îú‚îÄ‚îÄ üîå Document Processor API: https://$DOCUMENT_PROCESSOR_DOMAIN"
    echo "‚îú‚îÄ‚îÄ üìä Traefik Dashboard: https://$TRAEFIK_DASHBOARD_DOMAIN"
    echo "‚îî‚îÄ‚îÄ üóÑÔ∏è  Database Admin: https://$PGADMIN_DOMAIN"
    echo ""
    echo "üîê SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã: Let's Encrypt (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)"
    echo "üîí Security headers: –í–∫–ª—é—á–µ–Ω—ã"
    echo "üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: –î–æ—Å—Ç—É–ø–µ–Ω –≤ Traefik Dashboard"
    echo ""
    log_info "–õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤: docker-compose --env-file .env.production logs -f"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo ""
    log_info "–ù–∞—á–∏–Ω–∞—é production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ..."
    
    check_production_env
    check_dns
    check_ports
    setup_directories
    stop_development
    start_production
    
    log_info "–û–∂–∏–¥–∞–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)..."
    sleep 60
    
    check_ssl
    show_deployment_info
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-deploy}" in
    "deploy")
        main
        ;;
    "stop")
        log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ production —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose --env-file .env.production --profile production down
        log_success "Production —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        ;;
    "restart")
        log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ production —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose --env-file .env.production --profile production restart
        ;;
    "logs")
        docker-compose --env-file .env.production --profile production logs -f
        ;;
    "status")
        docker-compose --env-file .env.production --profile production ps
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [deploy|stop|restart|logs|status]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  deploy   - –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å production —Å SSL (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å production —Å–µ—Ä–≤–∏—Å—ã"
        echo "  restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å production —Å–µ—Ä–≤–∏—Å—ã"
        echo "  logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ production —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  status   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å production —Å–µ—Ä–≤–∏—Å–æ–≤"
        exit 1
        ;;
esac
