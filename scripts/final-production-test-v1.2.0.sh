#!/bin/bash

# –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç Advanced RAG Pipeline v1.2.0
# –ê–≤—Ç–æ—Ä: AI Modernization Team
# –î–∞—Ç–∞: 24 –¥–µ–∫–∞–±—Ä—è 2025

echo "=================================================="
echo "üöÄ –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ADVANCED RAG PIPELINE v1.2.0"
echo "=================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo ""
info "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoints
echo ""
info "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoints..."

echo "Document Processor Health:"
curl -s http://localhost:8001/health | jq . || error "Document Processor –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
echo "Web Interface Health:"
curl -s http://localhost:8002/health | jq . || error "Web Interface –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
echo "N8N Health:"
curl -s http://localhost:5678/healthz || error "N8N –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
echo "Qdrant Health:"
curl -s http://localhost:6333/health || error "Qdrant –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
echo ""
info "3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞..."
UPLOAD_RESULT=$(curl -s -X POST http://localhost:8001/documents/upload -F "file=@test-multilingual-document.txt")
echo $UPLOAD_RESULT | jq . || warning "–î–æ–∫—É–º–µ–Ω—Ç —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã"

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
echo ""
info "4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤..."
DOCS_RESULT=$(curl -s http://localhost:8001/documents)
echo $DOCS_RESULT | jq .
TOTAL_DOCS=$(echo $DOCS_RESULT | jq -r '.total')
success "–ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: $TOTAL_DOCS"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
echo ""
info "5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞..."

echo ""
echo "üîç –ü–æ–∏—Å–∫ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ:"
SEARCH_RU=$(curl -s -X POST http://localhost:8001/documents/search \
  -H "Content-Type: application/json" \
  -d '{"query": "—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –∏ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", "threshold": 0.05, "limit": 3}')
echo $SEARCH_RU | jq .
RU_FOUND=$(echo $SEARCH_RU | jq -r '.total_found')
RU_TIME=$(echo $SEARCH_RU | jq -r '.search_time_ms')
success "–ù–∞–π–¥–µ–Ω–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º: $RU_FOUND –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∑–∞ ${RU_TIME}ms"

echo ""
echo "üîç –ü–æ–∏—Å–∫ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ:"
SEARCH_EN=$(curl -s -X POST http://localhost:8001/documents/search \
  -H "Content-Type: application/json" \
  -d '{"query": "artificial intelligence transformer models", "threshold": 0.05, "limit": 3}')
echo $SEARCH_EN | jq .
EN_FOUND=$(echo $SEARCH_EN | jq -r '.total_found')
EN_TIME=$(echo $SEARCH_EN | jq -r '.search_time_ms')
success "–ù–∞–π–¥–µ–Ω–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º: $EN_FOUND –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∑–∞ ${EN_TIME}ms"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Web Interface API
echo ""
info "6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Web Interface API..."

echo "üì± –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ Web Interface:"
WEB_SEARCH=$(curl -s -X POST http://localhost:8002/api/search \
  -H "Content-Type: application/json" \
  -d '{"query": "Advanced RAG Pipeline", "threshold": 0.05, "limit": 3}')
echo $WEB_SEARCH | jq .
WEB_FOUND=$(echo $WEB_SEARCH | jq -r '.total_found')
WEB_TIME=$(echo $WEB_SEARCH | jq -r '.search_time_ms')
success "–ù–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ Web Interface: $WEB_FOUND –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∑–∞ ${WEB_TIME}ms"

echo ""
echo "üìÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ Web Interface:"
WEB_DOCS=$(curl -s http://localhost:8002/api/documents)
echo $WEB_DOCS | jq .
WEB_TOTAL=$(echo $WEB_DOCS | jq -r '.total')
success "–ü–æ–ª—É—á–µ–Ω–æ —á–µ—Ä–µ–∑ Web Interface: $WEB_TOTAL –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
echo ""
info "7. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
AVG_TIME=$(echo "scale=2; ($RU_TIME + $EN_TIME + $WEB_TIME) / 3" | bc)
success "–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞: ${AVG_TIME}ms"

if (( $(echo "$AVG_TIME < 50" | bc -l) )); then
    success "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –û–¢–õ–ò–ß–ù–ê–Ø (< 50ms)"
elif (( $(echo "$AVG_TIME < 100" | bc -l) )); then
    success "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –•–û–†–û–®–ê–Ø (< 100ms)"
else
    warning "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –ü–†–ò–ï–ú–õ–ï–ú–ê–Ø (> 100ms)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
echo ""
info "8. –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
echo "   üåê Web Interface: http://localhost:8002"
echo "   üîß N8N: http://localhost:5678"
echo "   üìä Qdrant Dashboard: http://localhost:6333/dashboard"
echo "   üìù Document Processor API Docs: http://localhost:8001/docs"
echo "   üì± Web Interface API Docs: http://localhost:8002/docs"

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç
echo ""
echo "=================================================="
echo "üìä –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–Å–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
echo "=================================================="
success "–í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç"
success "–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –Ω–∞ –¥–≤—É—Ö —è–∑—ã–∫–∞—Ö"
success "Web Interface API –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã"
success "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –≤ –Ω–æ—Ä–º–µ"
success "–í–µ–∫—Ç–æ—Ä–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Qdrant —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ"
success "–ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"

echo ""
echo "üéØ –°–¢–ê–¢–£–°: Advanced RAG Pipeline v1.2.0 - –ì–û–¢–û–í –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ!"
echo ""

# –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å–Ω—ã–π —Ñ–∞–π–ª
cat > FINAL_STATUS_v1.2.0.json << EOF
{
  "version": "1.2.0",
  "status": "TESTING_READY",
  "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)",
  "components": {
    "document_processor": "HEALTHY",
    "web_interface": "HEALTHY", 
    "qdrant": "HEALTHY",
    "postgres": "HEALTHY",
    "n8n": "HEALTHY",
    "ollama": "HEALTHY"
  },
  "testing_results": {
    "total_documents": $TOTAL_DOCS,
    "search_results": {
      "russian": $RU_FOUND,
      "english": $EN_FOUND,
      "web_interface": $WEB_FOUND
    },
    "performance": {
      "average_search_time_ms": $AVG_TIME,
      "russian_search_time_ms": $RU_TIME,
      "english_search_time_ms": $EN_TIME,
      "web_interface_search_time_ms": $WEB_TIME
    }
  },
  "endpoints": {
    "web_interface": "http://localhost:8002",
    "n8n": "http://localhost:5678",
    "qdrant_dashboard": "http://localhost:6333/dashboard",
    "document_processor_docs": "http://localhost:8001/docs",
    "web_interface_docs": "http://localhost:8002/docs"
  },
  "next_steps": [
    "SSL –∏ –¥–æ–º–µ–Ω—ã –¥–ª—è production",
    "–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥",
    "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ N8N workflows"
  ]
}
EOF

success "–§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å–Ω—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: FINAL_STATUS_v1.2.0.json"

echo ""
echo "üéâ –ú–ò–°–°–ò–Ø –í–´–ü–û–õ–ù–ï–ù–ê! Advanced RAG Pipeline –≥–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!"
echo "=================================================="
