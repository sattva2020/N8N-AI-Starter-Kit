#!/bin/bash

# =============================================
# N8N + PostgreSQL Reset and Reinitialize
# =============================================
# –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –∏ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–≤—è–∑–∫–∏ N8N + PostgreSQL
# –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª—è–µ—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ N8N –∏ PostgreSQL!

set -e

echo "‚ö†Ô∏è  N8N + PostgreSQL: –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –∏ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è"
echo "======================================================"
echo ""
echo "üö® –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ:"
echo "   - –í—Å–µ —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã N8N"
echo "   - –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ N8N"
echo "   - –í—Å—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL"
echo "   - –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
echo ""

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
read -p "‚ùì –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–≤–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è): " confirm
if [ "$confirm" != "YES" ]; then
    echo "üö´ –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."
    exit 0
fi

echo ""
echo "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ–¥—É—Ä—É —Å–±—Ä–æ—Å–∞..."

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
source .env 2>/dev/null || true

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if [[ -z "$POSTGRES_USER" || -z "$POSTGRES_PASSWORD" || -z "$POSTGRES_DB" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ –∑–∞–¥–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ POSTGRES_USER, POSTGRES_PASSWORD –∏–ª–∏ POSTGRES_DB"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env"
    exit 1
fi

# –®–∞–≥ 1: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo ""
echo "1Ô∏è‚É£  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
echo "------------------------"
docker compose stop n8n postgres 2>/dev/null || true
echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –®–∞–≥ 2: –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo ""
echo "2Ô∏è‚É£  –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
echo "--------------------------"
docker compose rm -f n8n postgres 2>/dev/null || true
echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã"

# –®–∞–≥ 3: –£–¥–∞–ª–µ–Ω–∏–µ volumes
echo ""
echo "3Ô∏è‚É£  –£–¥–∞–ª–µ–Ω–∏–µ volumes..."
echo "---------------------"

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_NAME=$(docker compose config --format json | jq -r '.name' 2>/dev/null || echo "n8n-ai-starter-kit")

# –£–¥–∞–ª–µ–Ω–∏–µ named volumes
docker volume rm "${PROJECT_NAME}_n8n_storage" 2>/dev/null && echo "‚úÖ Volume n8n_storage —É–¥–∞–ª–µ–Ω" || echo "‚ö†Ô∏è  Volume n8n_storage –Ω–µ –Ω–∞–π–¥–µ–Ω"
docker volume rm "${PROJECT_NAME}_postgres_storage" 2>/dev/null && echo "‚úÖ Volume postgres_storage —É–¥–∞–ª–µ–Ω" || echo "‚ö†Ô∏è  Volume postgres_storage –Ω–µ –Ω–∞–π–¥–µ–Ω"

# –£–¥–∞–ª–µ–Ω–∏–µ orphaned volumes
echo "üßπ –£–¥–∞–ª–µ–Ω–∏–µ orphaned volumes..."
docker volume prune -f >/dev/null 2>&1 || true

echo "‚úÖ Volumes –æ—á–∏—â–µ–Ω—ã"

# –®–∞–≥ 4: –û—á–∏—Å—Ç–∫–∞ –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo ""
echo "4Ô∏è‚É£  –û—á–∏—Å—Ç–∫–∞ –æ–±—Ä–∞–∑–æ–≤..."
echo "--------------------"
docker image prune -f >/dev/null 2>&1 || true
echo "‚úÖ –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã —É–¥–∞–ª–µ–Ω—ã"

# –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
echo ""
echo "5Ô∏è‚É£  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è..."
echo "---------------------------------------"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ 32-–±–∞–π—Ç–æ–≤–æ–≥–æ –∫–ª—é—á–∞ –≤ base64
NEW_ENCRYPTION_KEY=$(openssl rand -base64 32)

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .env
cp .env .env.backup.$(date +%Y%m%d_%H%M%S)
echo "‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è .env"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –≤ .env —Ñ–∞–π–ª–µ
if grep -q "^N8N_ENCRYPTION_KEY=" .env; then
    # –ó–∞–º–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª—é—á–∞
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        sed -i '' "s/^N8N_ENCRYPTION_KEY=.*/N8N_ENCRYPTION_KEY=${NEW_ENCRYPTION_KEY}/" .env
    else
        # Linux
        sed -i "s/^N8N_ENCRYPTION_KEY=.*/N8N_ENCRYPTION_KEY=${NEW_ENCRYPTION_KEY}/" .env
    fi
    echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è N8N"
else
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞
    echo "N8N_ENCRYPTION_KEY=${NEW_ENCRYPTION_KEY}" >> .env
    echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è N8N"
fi

echo "üîë –ù–æ–≤—ã–π –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: ${NEW_ENCRYPTION_KEY}"

# –®–∞–≥ 6: –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
echo ""
echo "6Ô∏è‚É£  –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
echo "---------------------------------"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–µ–π
echo "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ Docker —Å–µ—Ç–µ–π..."
docker compose up --no-start 2>/dev/null || true

# –ó–∞–ø—É—Å–∫ PostgreSQL
echo "üîÑ –ó–∞–ø—É—Å–∫ PostgreSQL..."
docker compose up -d postgres

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
for i in {1..30}; do
    if docker exec n8n-ai-starter-kit-postgres-1 pg_isready -U postgres >/dev/null 2>&1; then
        echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤"
        break
    fi
    if [ $i -eq 30 ]; then
        echo "‚ùå PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ 30 –ø–æ–ø—ã—Ç–æ–∫"
        exit 1
    fi
    sleep 2
done

# –®–∞–≥ 7: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PostgreSQL
echo ""
echo "7Ô∏è‚É£  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PostgreSQL..."
echo "------------------------------"

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -c "CREATE DATABASE \"$POSTGRES_DB\";" 2>/dev/null || echo "‚ö†Ô∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -c "CREATE USER \"$POSTGRES_USER\" WITH PASSWORD '$POSTGRES_PASSWORD';" 2>/dev/null || echo "‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

# –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤
docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE \"$POSTGRES_DB\" TO \"$POSTGRES_USER\";"
docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -c "ALTER DATABASE \"$POSTGRES_DB\" OWNER TO \"$POSTGRES_USER\";"
docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -c "ALTER USER \"$POSTGRES_USER\" CREATEDB;"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ö–µ–º—ã public
docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -d "$POSTGRES_DB" -c "
    GRANT ALL ON SCHEMA public TO \"$POSTGRES_USER\";
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO \"$POSTGRES_USER\";
    GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO \"$POSTGRES_USER\";
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO \"$POSTGRES_USER\";
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO \"$POSTGRES_USER\";
" 2>/dev/null || echo "‚ö†Ô∏è  –ß–∞—Å—Ç–∏—á–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Å—Ö–µ–º–∞ public"

echo "‚úÖ PostgreSQL –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
if docker exec n8n-ai-starter-kit-postgres-1 psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 1;" >/dev/null 2>&1; then
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    exit 1
fi

# –®–∞–≥ 8: –ó–∞–ø—É—Å–∫ N8N
echo ""
echo "8Ô∏è‚É£  –ó–∞–ø—É—Å–∫ N8N..."
echo "----------------"
docker compose up -d n8n

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ N8N
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ N8N..."
for i in {1..60}; do
    if curl -s -f "http://localhost:5678/healthz" >/dev/null 2>&1; then
        echo "‚úÖ N8N –≥–æ—Ç–æ–≤ –∏ –¥–æ—Å—Ç—É–ø–µ–Ω"
        break
    fi
    if [ $i -eq 60 ]; then
        echo "‚ùå N8N –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ 60 –ø–æ–ø—ã—Ç–æ–∫"
        echo "üìã –õ–æ–≥–∏ N8N:"
        docker logs n8n-ai-starter-kit-n8n-1 --tail 10
        exit 1
    fi
    sleep 3
done

# –®–∞–≥ 9: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo ""
echo "9Ô∏è‚É£  –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
echo "-----------------------"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
if docker ps | grep -q "n8n-ai-starter-kit-n8n-1.*Up" && docker ps | grep -q "n8n-ai-starter-kit-postgres-1.*Up"; then
    echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç"
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–ø—É—Å–∫–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    docker ps | grep "n8n-ai-starter-kit"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API
if curl -s -f "http://localhost:5678/healthz" >/dev/null 2>&1; then
    echo "‚úÖ N8N API –æ—Ç–≤–µ—á–∞–µ—Ç"
else
    echo "‚ùå N8N API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—à–∏–±–æ–∫
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏..."
n8n_logs=$(docker logs n8n-ai-starter-kit-n8n-1 --tail 20 2>&1)
if echo "$n8n_logs" | grep -qi "error\|failed\|connection refused"; then
    echo "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö N8N:"
    echo "$n8n_logs" | grep -i "error\|failed\|connection refused" | tail -3
else
    echo "‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
fi

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
echo ""
echo "üéâ –°–±—Ä–æ—Å –∏ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
echo "=============================================="
echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
echo "   - PostgreSQL: ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
echo "   - N8N: ‚úÖ –ó–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤"
echo "   - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
echo "   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ‚úÖ –°–æ–∑–¥–∞–Ω —Å –ø–æ–ª–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏"
echo "   - –ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø –∫ N8N:"
echo "   - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:5678"
echo "   - API Healthcheck: http://localhost:5678/healthz"
echo ""
echo "üîë –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "   - –ù–æ–≤—ã–π –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ .env"
echo "   - –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è .env —Å–æ–∑–¥–∞–Ω–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .backup"
echo "   - –í—Å–µ —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã - —ç—Ç–æ —á–∏—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞"
echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5678 –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
echo "   2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ N8N"
echo "   3. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"
echo ""
