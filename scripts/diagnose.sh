# filepath: e:\AI\n8n-ai-starter-kit\scripts\diagnose.sh
# –°–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ N8N AI Starter Kit
# –í–µ—Ä—Å–∏—è: 1.0.6

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ N8N AI Starter Kit ===${NC}"
echo ""

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
echo -e "${BLUE}1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...${NC}"
if command -v docker &> /dev/null; then
    docker_version=$(docker --version)
    echo -e "   ${GREEN}‚úÖ Docker –Ω–∞–π–¥–µ–Ω: ${docker_version}${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Docker daemon
    if docker info &> /dev/null; then
        echo -e "   ${GREEN}‚úÖ Docker daemon –∑–∞–ø—É—â–µ–Ω${NC}"
    else
        echo -e "   ${RED}‚ùå Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    fi
else
    echo -e "   ${RED}‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
echo -e "${BLUE}2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose...${NC}"
if command -v docker-compose &> /dev/null; then
    compose_version=$(docker-compose --version)
    echo -e "   ${GREEN}‚úÖ Docker Compose –Ω–∞–π–¥–µ–Ω: ${compose_version}${NC}"
elif docker compose version &> /dev/null; then
    compose_version=$(docker compose version)
    echo -e "   ${GREEN}‚úÖ Docker Compose (–ø–ª–∞–≥–∏–Ω) –Ω–∞–π–¥–µ–Ω: ${compose_version}${NC}"
else
    echo -e "   ${RED}‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker Compose
echo -e "${BLUE}3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker Compose...${NC}"
if docker compose config &>/dev/null; then
    echo -e "   ${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞${NC}"
else
    echo -e "   ${RED}‚ùå –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏${NC}"
    echo -e "   ${YELLOW}–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫:${NC}"
    docker compose config 2>&1 | head -10 | sed 's/^/      /'
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
echo -e "${BLUE}4. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞...${NC}"
if [ -f .env ]; then
    echo -e "   ${GREEN}‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–∑–∞–∫–∞–≤—ã—á–µ–Ω–Ω—ã–µ $
    if grep -q '\$[^{]' .env; then
        echo -e "   ${YELLOW}‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –Ω–µ—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã $ –≤ .env${NC}"
        echo -e "   ${YELLOW}   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å: ./scripts/fix-env-vars.sh${NC}"
    else
        echo -e "   ${GREEN}‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    required_vars=("N8N_ENCRYPTION_KEY" "POSTGRES_PASSWORD" "TRAEFIK_PASSWORD_HASHED")
    for var in "${required_vars[@]}"; do
        if grep -q "^${var}=" .env; then
            echo -e "   ${GREEN}‚úÖ ${var} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
        else
            echo -e "   ${RED}‚ùå ${var} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
        fi
    done
else
    echo -e "   ${RED}‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    echo -e "   ${YELLOW}   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./scripts/setup.sh${NC}"
fi

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
echo -e "${BLUE}5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤...${NC}"
ports_to_check=(80 443 5678 6333 11434 8080)
for port in "${ports_to_check[@]}"; do
    if command -v netstat &> /dev/null; then
        if netstat -tuln 2>/dev/null | grep -q ":$port "; then
            echo -e "   ${YELLOW}‚ö†Ô∏è –ü–æ—Ä—Ç $port —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è${NC}"
        else
            echo -e "   ${GREEN}‚úÖ –ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω${NC}"
        fi
    elif command -v ss &> /dev/null; then
        if ss -tuln 2>/dev/null | grep -q ":$port "; then
            echo -e "   ${YELLOW}‚ö†Ô∏è –ü–æ—Ä—Ç $port —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è${NC}"
        else
            echo -e "   ${GREEN}‚úÖ –ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω${NC}"
        fi
    else
        echo -e "   ${YELLOW}‚ö†Ô∏è –ö–æ–º–∞–Ω–¥—ã netstat/ss –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ –ø—Ä–æ–ø—É—â–µ–Ω–∞${NC}"
        break
    fi
done

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ GPU
echo -e "${BLUE}6. –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU...${NC}"
if command -v nvidia-smi &> /dev/null; then
    if nvidia-smi &> /dev/null; then
        gpu_info=$(nvidia-smi --query-gpu=name --format=csv,noheader,nounits | head -1)
        echo -e "   ${GREEN}‚úÖ NVIDIA GPU –Ω–∞–π–¥–µ–Ω: ${gpu_info}${NC}"
    else
        echo -e "   ${YELLOW}‚ö†Ô∏è nvidia-smi –Ω–∞–π–¥–µ–Ω, –Ω–æ GPU –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
else
    echo -e "   ${YELLOW}‚ö†Ô∏è NVIDIA GPU –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω${NC}"
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
echo -e "${BLUE}7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞...${NC}"
if command -v df &> /dev/null; then
    available_space=$(df . | awk 'NR==2 {print $4}')
    available_gb=$((available_space / 1024 / 1024))
    
    if [ "$available_gb" -gt 20 ]; then
        echo -e "   ${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ: ${available_gb}GB${NC}"
    elif [ "$available_gb" -gt 10 ]; then
        echo -e "   ${YELLOW}‚ö†Ô∏è –î–æ—Å—Ç—É–ø–Ω–æ: ${available_gb}GB (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è >20GB)${NC}"
    else
        echo -e "   ${RED}‚ùå –î–æ—Å—Ç—É–ø–Ω–æ: ${available_gb}GB (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ –º–µ—Å—Ç–∞)${NC}"
    fi
else
    echo -e "   ${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ${NC}"
fi

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
echo -e "${BLUE}8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏...${NC}"
if command -v free &> /dev/null; then
    total_memory=$(free -m | awk 'NR==2{printf "%.0f", $2/1024}')
    
    if [ "$total_memory" -gt 16 ]; then
        echo -e "   ${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ: ${total_memory}GB (–æ—Ç–ª–∏—á–Ω–æ –¥–ª—è developer –ø—Ä–æ—Ñ–∏–ª—è)${NC}"
    elif [ "$total_memory" -gt 8 ]; then
        echo -e "   ${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ: ${total_memory}GB (—Ö–æ—Ä–æ—à–æ –¥–ª—è cpu –ø—Ä–æ—Ñ–∏–ª—è)${NC}"
    elif [ "$total_memory" -gt 4 ]; then
        echo -e "   ${YELLOW}‚ö†Ô∏è –î–æ—Å—Ç—É–ø–Ω–æ: ${total_memory}GB (–º–∏–Ω–∏–º–∞–ª—å–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã)${NC}"
    else
        echo -e "   ${RED}‚ùå –î–æ—Å—Ç—É–ø–Ω–æ: ${total_memory}GB (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏)${NC}"
    fi
else
    echo -e "   ${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞–º—è—Ç—å${NC}"
fi

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${BLUE}9. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
if docker ps -a --filter "name=n8n-ai-starter-kit" --format "table {{.Names}}\t{{.Status}}" 2>/dev/null | grep -q "n8n-ai-starter-kit"; then
    echo -e "   ${GREEN}‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:${NC}"
    docker ps -a --filter "name=n8n-ai-starter-kit" --format "      {{.Names}}: {{.Status}}" 2>/dev/null
else
    echo -e "   ${YELLOW}‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
fi

# 10. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
echo ""
echo -e "${BLUE}=== –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ ===${NC}"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
if command -v nvidia-smi &> /dev/null && nvidia-smi &> /dev/null; then
    echo -e "   ${GREEN}üöÄ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –ø—Ä–æ—Ñ–∏–ª—å: gpu-nvidia${NC}"
elif [ "${total_memory:-0}" -gt 16 ]; then
    echo -e "   ${GREEN}üöÄ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –ø—Ä–æ—Ñ–∏–ª—å: developer${NC}"
else
    echo -e "   ${GREEN}üöÄ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –ø—Ä–æ—Ñ–∏–ª—å: cpu${NC}"
fi

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
if [ ! -f .env ]; then
    echo -e "   ${YELLOW}üìã –ó–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É: ./scripts/setup.sh${NC}"
fi

if grep -q '\$[^{]' .env 2>/dev/null; then
    echo -e "   ${YELLOW}üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ./scripts/fix-env-vars.sh${NC}"
fi

echo ""
echo -e "${BLUE}–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"