#!/bin/bash

# N8N API-based Workflows Importer
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç N8N REST API –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ workflows
# –í–µ—Ä—Å–∏—è: 1.2.0

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
N8N_API_URL="${N8N_URL:-http://localhost:5678}/rest"
WORKFLOWS_DIR="${WORKFLOWS_DIR:-./n8n/workflows}"
MAX_RETRIES=60
RETRY_INTERVAL=5

echo "üöÄ N8N API Workflows Importer v1.2.0"
echo "   API URL: $N8N_API_URL"
echo "   Workflows Dir: $WORKFLOWS_DIR"
echo ""

# –§—É–Ω–∫—Ü–∏—è –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ N8N
wait_for_n8n_api() {
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ N8N API..."
    local retries=0
    
    while [ $retries -lt $MAX_RETRIES ]; do
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        if curl -s -f "$N8N_API_URL/login" -o /dev/null 2>&1; then
            echo "‚úÖ N8N API –¥–æ—Å—Ç—É–ø–µ–Ω"
            return 0
        fi
        
        retries=$((retries + 1))
        echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $retries/$MAX_RETRIES - –æ–∂–∏–¥–∞–Ω–∏–µ N8N API..."
        sleep $RETRY_INTERVAL
    done
    
    echo "‚ùå N8N API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ $MAX_RETRIES –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö workflows
get_existing_workflows() {
    curl -s -X GET "$N8N_API_URL/workflows" \
        -H "Content-Type: application/json" 2>/dev/null || echo "[]"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è workflow
workflow_exists() {
    local workflow_name="$1"
    local existing_workflows=$(get_existing_workflows)
    
    echo "$existing_workflows" | jq -r '.[].name' | grep -q "^$workflow_name$" 2>/dev/null
}

# –§—É–Ω–∫—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞ workflow —á–µ—Ä–µ–∑ API
import_workflow_api() {
    local workflow_file="$1"
    local workflow_name=$(jq -r '.name // "Unknown"' "$workflow_file")
    
    echo "üì• –ò–º–ø–æ—Ä—Ç workflow: $workflow_name"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
    if workflow_exists "$workflow_name"; then
        echo "‚ö†Ô∏è  Workflow '$workflow_name' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        return 0
    fi
    
    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ workflow
    local workflow_data=$(cat "$workflow_file")
    
    # –ò–º–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ API
    local response=$(curl -s -X POST "$N8N_API_URL/workflows" \
        -H "Content-Type: application/json" \
        -d "$workflow_data" 2>/dev/null)
    
    if [ $? -eq 0 ] && echo "$response" | jq -e '.id' >/dev/null 2>&1; then
        local workflow_id=$(echo "$response" | jq -r '.id')
        echo "‚úÖ Workflow '$workflow_name' –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω (ID: $workflow_id)"
        
        # –ê–∫—Ç–∏–≤–∞—Ü–∏—è workflow
        if [ "$workflow_id" != "null" ]; then
            curl -s -X POST "$N8N_API_URL/workflows/$workflow_id/activate" \
                -H "Content-Type: application/json" >/dev/null 2>&1
            
            if [ $? -eq 0 ]; then
                echo "üü¢ Workflow '$workflow_name' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
            else
                echo "‚ö†Ô∏è  Workflow '$workflow_name' –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
            fi
        fi
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ workflow '$workflow_name'"
        echo "Response: $response"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ API —Ç–æ–∫–µ–Ω–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
setup_api_access() {
    # –î–ª—è —Å–ª—É—á–∞–µ–≤ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    # –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ N8N –Ω–∞—Å—Ç—Ä–æ–µ–Ω –±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    echo "üîì N8N –Ω–∞—Å—Ç—Ä–æ–µ–Ω –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üîç –ü–æ–∏—Å–∫ workflow —Ñ–∞–π–ª–æ–≤ –≤ $WORKFLOWS_DIR"
    
    if [ ! -d "$WORKFLOWS_DIR" ]; then
        echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è workflows –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $WORKFLOWS_DIR"
        exit 1
    fi
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ N8N API
    if ! wait_for_n8n_api; then
        echo "‚ùå N8N API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        exit 1
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ API
    setup_api_access
    
    # –ü–æ–∏—Å–∫ –∏ –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö workflow —Ñ–∞–π–ª–æ–≤
    local imported_count=0
    local failed_count=0
    local skipped_count=0
    
    for workflow_file in "$WORKFLOWS_DIR"/*.json; do
        if [ -f "$workflow_file" ]; then
            echo ""
            if import_workflow_api "$workflow_file"; then
                imported_count=$((imported_count + 1))
            else
                failed_count=$((failed_count + 1))
            fi
        fi
    done
    
    echo ""
    echo "=" * 50
    echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –ò–ú–ü–û–†–¢–ê:"
    echo "=" * 50
    echo "   ‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: $imported_count"
    echo "   ‚ùå –û—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–∞: $failed_count"
    echo "   ‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç): $skipped_count"
    echo ""
    
    if [ $failed_count -eq 0 ]; then
        echo "üéâ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç workflows –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        echo "üåê N8N –¥–æ—Å—Ç—É–ø–µ–Ω: ${N8N_URL:-http://localhost:5678}"
        echo "üìã Workflows –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
        exit 0
    else
        echo "‚ö†Ô∏è  –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏ ($failed_count)"
        exit 1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'echo "‚ùå –ò–º–ø–æ—Ä—Ç –ø—Ä–µ—Ä–≤–∞–Ω"; exit 1' INT TERM

# –ó–∞–ø—É—Å–∫
main "$@"
