#!/bin/bash

# =============================================================================
# üîç –ê–ù–ê–õ–ò–ó –û–®–ò–ë–û–ö –í –õ–û–ì–ê–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í
# =============================================================================

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

container_name=${1:-"all"}

print_header() {
    echo -e "\n${BLUE}========================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}========================================${NC}\n"
}

analyze_container_logs() {
    local container=$1
    local lines=${2:-100}
    
    echo -e "${BLUE}üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–∏: $container (–ø–æ—Å–ª–µ–¥–Ω–∏–µ $lines —Å—Ç—Ä–æ–∫)${NC}"
    
    if ! docker ps --format "{{.Names}}" | grep -q "^$container$"; then
        echo -e "${RED}‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä '$container' –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
        return 1
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏
    logs=$(docker logs --tail "$lines" "$container" 2>&1)
    
    if [ -z "$logs" ]; then
        echo -e "${GREEN}‚ÑπÔ∏è  –õ–æ–≥–∏ –ø—É—Å—Ç—ã –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã${NC}"
        return 0
    fi
    
    echo -e "${YELLOW}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤:${NC}"
    total_lines=$(echo "$logs" | wc -l)
    echo "  –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: $total_lines"
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π
    errors=$(echo "$logs" | grep -i -c "error" || echo "0")
    warnings=$(echo "$logs" | grep -i -c "warning\|warn" || echo "0")
    fatals=$(echo "$logs" | grep -i -c "fatal\|panic" || echo "0")
    exceptions=$(echo "$logs" | grep -i -c "exception" || echo "0")
    
    echo "  –û—à–∏–±–∫–∏ (ERROR): $errors"
    echo "  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (WARNING): $warnings"
    echo "  –ö—Ä–∏—Ç–∏—á–Ω—ã–µ (FATAL/PANIC): $fatals"
    echo "  –ò—Å–∫–ª—é—á–µ–Ω–∏—è (EXCEPTION): $exceptions"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏
    if [ "$errors" -gt 0 ] || [ "$fatals" -gt 0 ] || [ "$exceptions" -gt 0 ]; then
        echo -e "\n${RED}‚ùå –ù–ê–ô–î–ï–ù–ù–´–ï –û–®–ò–ë–ö–ò:${NC}"
        echo "$logs" | grep -i -E "(error|fatal|panic|exception)" | tail -10
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è
        echo -e "\n${YELLOW}üí° –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú:${NC}"
        
        if echo "$logs" | grep -q -i "connection refused\|connect: connection refused"; then
            echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É${NC}"
            echo "   –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (depends_on)"
        fi
        
        if echo "$logs" | grep -q -i "getaddrinfo ENOTFOUND"; then
            echo -e "${YELLOW}‚ö†Ô∏è  DNS –ø—Ä–æ–±–ª–µ–º–∞ (—Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω)${NC}"
            echo "   –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º–µ–Ω–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ docker-compose.yml"
        fi
        
        if echo "$logs" | grep -q -i "role.*does not exist"; then
            echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö${NC}"
            echo "   –†–µ—à–µ–Ω–∏–µ: –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./scripts/reset-n8n-postgres.sh"
        fi
        
        if echo "$logs" | grep -q -i "encryption.*key\|mismatching.*key"; then
            echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–ª—é—á–æ–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è${NC}"
            echo "   –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ N8N_ENCRYPTION_KEY –≤ .env"
        fi
        
        if echo "$logs" | grep -q -i "port.*already in use\|bind.*address already in use"; then
            echo -e "${YELLOW}‚ö†Ô∏è  –ü–æ—Ä—Ç —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è${NC}"
            echo "   –†–µ—à–µ–Ω–∏–µ: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–æ—Ä—Ç—ã"
        fi
        
        if echo "$logs" | grep -q -i "no space left on device"; then
            echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ${NC}"
            echo "   –†–µ—à–µ–Ω–∏–µ: –û—á–∏—Å—Ç–∏—Ç–µ –º–µ—Å—Ç–æ –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ docker system prune"
        fi
        
        if echo "$logs" | grep -q -i "memory\|oom"; then
            echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–∞–º—è—Ç—å—é${NC}"
            echo "   –†–µ—à–µ–Ω–∏–µ: –£–≤–µ–ª–∏—á—å—Ç–µ –ª–∏–º–∏—Ç—ã –ø–∞–º—è—Ç–∏ –≤ docker-compose.yml"
        fi
    else
        echo -e "\n${GREEN}‚úÖ –ö–†–ò–¢–ò–ß–ù–´–• –û–®–ò–ë–û–ö –ù–ï –ù–ê–ô–î–ï–ù–û${NC}"
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if [ "$warnings" -gt 0 ]; then
        echo -e "\n${YELLOW}‚ö†Ô∏è  –ü–û–°–õ–ï–î–ù–ò–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:${NC}"
        echo "$logs" | grep -i "warning\|warn" | tail -5
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —É—Å–ø–µ—à–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    echo -e "\n${GREEN}‚úÖ –ü–û–°–õ–ï–î–ù–ò–ï –£–°–ü–ï–®–ù–´–ï –û–ü–ï–†–ê–¶–ò–ò:${NC}"
    echo "$logs" | grep -i -E "(success|started|ready|listening|connected|ok)" | tail -5
    
    return 0
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
if [ "$container_name" = "all" ]; then
    print_header "üîç –ê–ù–ê–õ–ò–ó –õ–û–ì–û–í –í–°–ï–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í"
    
    for container in $(docker ps --format "{{.Names}}"); do
        analyze_container_logs "$container" 50
        echo ""
    done
else
    print_header "üîç –ê–ù–ê–õ–ò–ó –õ–û–ì–û–í –ö–û–ù–¢–ï–ô–ù–ï–†–ê: $container_name"
    analyze_container_logs "$container_name" 200
fi

print_header "üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò"

echo "üìù –î–ª—è —Ä–µ—à–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º:"
echo "1. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞: docker-compose restart <service>"
echo "2. –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ N8N: ./scripts/diagnose-n8n-postgres.sh"
echo "3. –°–±—Ä–æ—Å N8N+PostgreSQL: ./scripts/reset-n8n-postgres.sh"
echo "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: ./scripts/validate-all-services.sh"
echo "5. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏: docker-compose logs -f <service>"

echo -e "\n${GREEN}üéØ –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ –∑–∞–≤–µ—Ä—à—ë–Ω!${NC}"
