#!/bin/bash

# Deploy Analytics Stack Script
# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–µ–∫–∞ N8N

set -e

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Analytics Stack –¥–ª—è N8N AI Starter Kit"
echo "=============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[–û–®–ò–ë–ö–ê]${NC} $1"
}

success() {
    echo -e "${GREEN}[–£–°–ü–ï–•]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –¥–∞–Ω–Ω—ã—Ö..."
    
    mkdir -p data/clickhouse
    mkdir -p data/superset
    mkdir -p data/postgres-analytics
    mkdir -p data/redis-analytics
    mkdir -p logs/clickhouse
    mkdir -p logs/superset
    mkdir -p logs/postgres
    mkdir -p logs/redis
    mkdir -p logs/etl
    mkdir -p logs/analytics-api
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    chmod 755 data/clickhouse
    chmod 755 data/superset
    chmod 755 data/postgres-analytics
    chmod 755 data/redis-analytics
    
    success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ Docker networks
create_networks() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ Docker networks..."
    
    # Analytics network
    if ! docker network ls | grep -q "n8n_analytics_network"; then
        docker network create n8n_analytics_network
        success "–°–æ–∑–¥–∞–Ω–∞ —Å–µ—Ç—å: n8n_analytics_network"
    else
        warning "–°–µ—Ç—å n8n_analytics_network —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ç–µ–π
    if ! docker network ls | grep -q "n8n_network"; then
        warning "–°–µ—Ç—å n8n_network –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã N8N –∑–∞–ø—É—â–µ–Ω—ã"
    fi
    
    if ! docker network ls | grep -q "n8n_monitoring_network"; then
        warning "–°–µ—Ç—å n8n_monitoring_network –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–π –∏ —Å–µ–∫—Ä–µ—Ç–æ–≤
generate_secrets() {
    log "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤..."
    
    if [ ! -f .env.analytics ]; then
        cat > .env.analytics << EOF
# Analytics Stack Environment Variables
CLICKHOUSE_PASSWORD=clickhouse_pass_$(date +%s)
SUPERSET_SECRET_KEY=superset_secret_$(openssl rand -hex 32)
POSTGRES_PASSWORD=postgres_analytics_$(date +%s)
REDIS_PASSWORD=redis_analytics_$(date +%s)
EOF
        success "–§–∞–π–ª .env.analytics —Å–æ–∑–¥–∞–Ω"
    else
        warning "–§–∞–π–ª .env.analytics —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –ó–∞–ø—É—Å–∫ ClickHouse
deploy_clickhouse() {
    log "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ ClickHouse..."
    
    docker-compose -f compose/analytics-compose.yml up -d clickhouse
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ ClickHouse
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ ClickHouse..."
    for i in {1..30}; do
        if curl -s http://localhost:8123/ > /dev/null 2>&1; then
            success "ClickHouse –≥–æ—Ç–æ–≤"
            break
        fi
        sleep 5
        if [ $i -eq 30 ]; then
            error "ClickHouse –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 150 —Å–µ–∫—É–Ω–¥"
            exit 1
        fi
    done
}

# –ó–∞–ø—É—Å–∫ PostgreSQL –¥–ª—è Superset
deploy_postgres() {
    log "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ PostgreSQL –¥–ª—è Superset..."
    
    docker-compose -f compose/analytics-compose.yml up -d postgres
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
    for i in {1..20}; do
        if docker-compose -f compose/analytics-compose.yml exec -T postgres pg_isready -U superset > /dev/null 2>&1; then
            success "PostgreSQL –≥–æ—Ç–æ–≤"
            break
        fi
        sleep 3
        if [ $i -eq 20 ]; then
            error "PostgreSQL –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥"
            exit 1
        fi
    done
}

# –ó–∞–ø—É—Å–∫ Redis
deploy_redis() {
    log "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Redis..."
    
    docker-compose -f compose/analytics-compose.yml up -d redis
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis..."
    for i in {1..15}; do
        if docker-compose -f compose/analytics-compose.yml exec -T redis redis-cli ping > /dev/null 2>&1; then
            success "Redis –≥–æ—Ç–æ–≤"
            break
        fi
        sleep 2
        if [ $i -eq 15 ]; then
            error "Redis –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥"
            exit 1
        fi
    done
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ Superset
deploy_superset() {
    log "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Superset..."
    
    # –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    docker-compose -f compose/analytics-compose.yml up --no-deps superset-init
    
    log "–ó–∞–ø—É—Å–∫ Superset..."
    docker-compose -f compose/analytics-compose.yml up -d superset
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Superset
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Superset..."
    for i in {1..60}; do
        if curl -s http://localhost:8088/health > /dev/null 2>&1; then
            success "Superset –≥–æ—Ç–æ–≤"
            break
        fi
        sleep 5
        if [ $i -eq 60 ]; then
            error "Superset –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 300 —Å–µ–∫—É–Ω–¥"
            exit 1
        fi
    done
}

# –ó–∞–ø—É—Å–∫ ETL —Å–µ—Ä–≤–∏—Å–æ–≤
deploy_etl_services() {
    log "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ ETL —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # ETL Processor
    docker-compose -f compose/analytics-compose.yml up -d etl-processor
    
    # Analytics API
    docker-compose -f compose/analytics-compose.yml up -d analytics-api
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ ETL —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ ETL Processor
    for i in {1..20}; do
        if curl -s http://localhost:8080/health > /dev/null 2>&1; then
            success "ETL Processor –≥–æ—Ç–æ–≤"
            break
        fi
        sleep 3
        if [ $i -eq 20 ]; then
            warning "ETL Processor –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Analytics API
    for i in {1..20}; do
        if curl -s http://localhost:8089/health > /dev/null 2>&1; then
            success "Analytics API –≥–æ—Ç–æ–≤"
            break
        fi
        sleep 3
        if [ $i -eq 20 ]; then
            warning "Analytics API –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
check_services() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    echo ""
    echo "üîç –°—Ç–∞—Ç—É—Å Analytics Stack:"
    echo "========================"
    
    # ClickHouse
    if curl -s http://localhost:8123/ > /dev/null 2>&1; then
        echo -e "‚úÖ ClickHouse: ${GREEN}–†–∞–±–æ—Ç–∞–µ—Ç${NC} (http://localhost:8123)"
    else
        echo -e "‚ùå ClickHouse: ${RED}–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    # Superset
    if curl -s http://localhost:8088/health > /dev/null 2>&1; then
        echo -e "‚úÖ Superset: ${GREEN}–†–∞–±–æ—Ç–∞–µ—Ç${NC} (http://localhost:8088)"
        echo -e "   üë§ –õ–æ–≥–∏–Ω: admin / admin123"
    else
        echo -e "‚ùå Superset: ${RED}–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    # Analytics API
    if curl -s http://localhost:8089/health > /dev/null 2>&1; then
        echo -e "‚úÖ Analytics API: ${GREEN}–†–∞–±–æ—Ç–∞–µ—Ç${NC} (http://localhost:8089)"
    else
        echo -e "‚ùå Analytics API: ${RED}–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    # ETL Processor
    if curl -s http://localhost:8080/health > /dev/null 2>&1; then
        echo -e "‚úÖ ETL Processor: ${GREEN}–†–∞–±–æ—Ç–∞–µ—Ç${NC} (http://localhost:8080)"
    else
        echo -e "‚ùå ETL Processor: ${RED}–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    echo ""
    echo "üìä Analytics Dashboard –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8088"
    echo "üîë API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8089/docs"
    echo ""
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo ""
    log "–ù–∞—á–∞–ª–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Analytics Stack"
    
    check_dependencies
    create_directories
    create_networks
    generate_secrets
    
    log "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
    deploy_clickhouse
    deploy_postgres
    deploy_redis
    deploy_superset
    deploy_etl_services
    
    check_services
    
    success "üéâ Analytics Stack —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç!"
    echo ""
    echo "üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ Superset: http://localhost:8088"
    echo "2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ admin/admin123"
    echo "3. –°–æ–∑–¥–∞–π—Ç–µ –¥–∞—à–±–æ—Ä–¥—ã –∏ –≥—Ä–∞—Ñ–∏–∫–∏"
    echo "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ ClickHouse"
    echo ""
    echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: docs/ANALYTICS_SETUP_GUIDE.md"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-deploy}" in
    "deploy")
        main
        ;;
    "status")
        check_services
        ;;
    "stop")
        log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Analytics Stack..."
        docker-compose -f compose/analytics-compose.yml down
        success "Analytics Stack –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        ;;
    "restart")
        log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Analytics Stack..."
        docker-compose -f compose/analytics-compose.yml restart
        success "Analytics Stack –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
        ;;
    "logs")
        docker-compose -f compose/analytics-compose.yml logs -f
        ;;
    "help")
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [deploy|status|stop|restart|logs|help]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  deploy   - –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å Analytics Stack (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  status   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        echo "  restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        echo "  logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "  help     - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        ;;
    *)
        error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
        exit 1
        ;;
esac
