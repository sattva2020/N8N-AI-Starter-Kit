@echo off
setlocal enabledelayedexpansion

REM Deploy Analytics Stack Script for Windows
REM –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–µ–∫–∞ N8N

echo üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Analytics Stack –¥–ª—è N8N AI Starter Kit
echo ==============================================

REM –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
:log
echo [%date% %time%] %~1
goto :eof

:error
echo [–û–®–ò–ë–ö–ê] %~1
goto :eof

:success
echo [–£–°–ü–ï–•] %~1
goto :eof

:warning
echo [–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï] %~1
goto :eof

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
call :log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

where docker >nul 2>nul
if %ERRORLEVEL% neq 0 (
    call :error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit /b 1
)

where docker-compose >nul 2>nul
if %ERRORLEVEL% neq 0 (
    call :error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit /b 1
)

call :success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

REM –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
call :log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –¥–∞–Ω–Ω—ã—Ö..."

if not exist "data\clickhouse" mkdir "data\clickhouse"
if not exist "data\superset" mkdir "data\superset"
if not exist "data\postgres-analytics" mkdir "data\postgres-analytics"
if not exist "data\redis-analytics" mkdir "data\redis-analytics"
if not exist "logs\clickhouse" mkdir "logs\clickhouse"
if not exist "logs\superset" mkdir "logs\superset"
if not exist "logs\postgres" mkdir "logs\postgres"
if not exist "logs\redis" mkdir "logs\redis"
if not exist "logs\etl" mkdir "logs\etl"
if not exist "logs\analytics-api" mkdir "logs\analytics-api"

call :success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

REM –°–æ–∑–¥–∞–Ω–∏–µ Docker networks
call :log "–°–æ–∑–¥–∞–Ω–∏–µ Docker networks..."

docker network ls | findstr "n8n_analytics_network" >nul
if %ERRORLEVEL% neq 0 (
    docker network create n8n_analytics_network
    call :success "–°–æ–∑–¥–∞–Ω–∞ —Å–µ—Ç—å: n8n_analytics_network"
) else (
    call :warning "–°–µ—Ç—å n8n_analytics_network —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ç–µ–π
docker network ls | findstr "n8n_network" >nul
if %ERRORLEVEL% neq 0 (
    call :warning "–°–µ—Ç—å n8n_network –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã N8N –∑–∞–ø—É—â–µ–Ω—ã"
)

docker network ls | findstr "n8n_monitoring_network" >nul
if %ERRORLEVEL% neq 0 (
    call :warning "–°–µ—Ç—å n8n_monitoring_network –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
)

REM –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤
call :log "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤..."

if not exist ".env.analytics" (
    echo # Analytics Stack Environment Variables > .env.analytics
    echo CLICKHOUSE_PASSWORD=clickhouse_pass_%RANDOM% >> .env.analytics
    echo SUPERSET_SECRET_KEY=superset_secret_%RANDOM% >> .env.analytics
    echo POSTGRES_PASSWORD=postgres_analytics_%RANDOM% >> .env.analytics
    echo REDIS_PASSWORD=redis_analytics_%RANDOM% >> .env.analytics
    call :success "–§–∞–π–ª .env.analytics —Å–æ–∑–¥–∞–Ω"
) else (
    call :warning "–§–∞–π–ª .env.analytics —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
)

REM –ó–∞–ø—É—Å–∫ ClickHouse
call :log "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ ClickHouse..."
docker-compose -f compose/analytics-compose.yml up -d clickhouse

REM –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ ClickHouse
call :log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ ClickHouse..."
set /a count=0
:wait_clickhouse
curl -s http://localhost:8123/ >nul 2>nul
if %ERRORLEVEL% equ 0 (
    call :success "ClickHouse –≥–æ—Ç–æ–≤"
    goto :clickhouse_ready
)
set /a count+=1
if %count% geq 30 (
    call :error "ClickHouse –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 150 —Å–µ–∫—É–Ω–¥"
    exit /b 1
)
timeout /t 5 /nobreak >nul
goto :wait_clickhouse
:clickhouse_ready

REM –ó–∞–ø—É—Å–∫ PostgreSQL –¥–ª—è Superset
call :log "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ PostgreSQL –¥–ª—è Superset..."
docker-compose -f compose/analytics-compose.yml up -d postgres

REM –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
call :log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
timeout /t 10 /nobreak >nul
call :success "PostgreSQL –∑–∞–ø—É—â–µ–Ω"

REM –ó–∞–ø—É—Å–∫ Redis
call :log "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Redis..."
docker-compose -f compose/analytics-compose.yml up -d redis

REM –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis
call :log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis..."
timeout /t 5 /nobreak >nul
call :success "Redis –∑–∞–ø—É—â–µ–Ω"

REM –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ Superset
call :log "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Superset..."
docker-compose -f compose/analytics-compose.yml up --no-deps superset-init

call :log "–ó–∞–ø—É—Å–∫ Superset..."
docker-compose -f compose/analytics-compose.yml up -d superset

REM –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Superset
call :log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Superset..."
set /a count=0
:wait_superset
curl -s http://localhost:8088/health >nul 2>nul
if %ERRORLEVEL% equ 0 (
    call :success "Superset –≥–æ—Ç–æ–≤"
    goto :superset_ready
)
set /a count+=1
if %count% geq 60 (
    call :warning "Superset –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    goto :superset_ready
)
timeout /t 5 /nobreak >nul
goto :wait_superset
:superset_ready

REM –ó–∞–ø—É—Å–∫ ETL —Å–µ—Ä–≤–∏—Å–æ–≤
call :log "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ ETL —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f compose/analytics-compose.yml up -d etl-processor
docker-compose -f compose/analytics-compose.yml up -d analytics-api

REM –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
call :log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ ETL —Å–µ—Ä–≤–∏—Å–æ–≤..."
timeout /t 10 /nobreak >nul

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
call :log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤..."

echo.
echo üîç –°—Ç–∞—Ç—É—Å Analytics Stack:
echo ========================

REM ClickHouse
curl -s http://localhost:8123/ >nul 2>nul
if %ERRORLEVEL% equ 0 (
    echo ‚úÖ ClickHouse: –†–∞–±–æ—Ç–∞–µ—Ç ^(http://localhost:8123^)
) else (
    echo ‚ùå ClickHouse: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω
)

REM Superset
curl -s http://localhost:8088/health >nul 2>nul
if %ERRORLEVEL% equ 0 (
    echo ‚úÖ Superset: –†–∞–±–æ—Ç–∞–µ—Ç ^(http://localhost:8088^)
    echo    üë§ –õ–æ–≥–∏–Ω: admin / admin123
) else (
    echo ‚ùå Superset: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω
)

REM Analytics API
curl -s http://localhost:8089/health >nul 2>nul
if %ERRORLEVEL% equ 0 (
    echo ‚úÖ Analytics API: –†–∞–±–æ—Ç–∞–µ—Ç ^(http://localhost:8089^)
) else (
    echo ‚ùå Analytics API: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω
)

REM ETL Processor
curl -s http://localhost:8080/health >nul 2>nul
if %ERRORLEVEL% equ 0 (
    echo ‚úÖ ETL Processor: –†–∞–±–æ—Ç–∞–µ—Ç ^(http://localhost:8080^)
) else (
    echo ‚ùå ETL Processor: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω
)

echo.
echo üìä Analytics Dashboard –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8088
echo üîë API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8089/docs
echo.

call :success "üéâ Analytics Stack —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç!"
echo.
echo üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
echo 1. –û—Ç–∫—Ä–æ–π—Ç–µ Superset: http://localhost:8088
echo 2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ admin/admin123
echo 3. –°–æ–∑–¥–∞–π—Ç–µ –¥–∞—à–±–æ—Ä–¥—ã –∏ –≥—Ä–∞—Ñ–∏–∫–∏
echo 4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ ClickHouse
echo.
echo üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: docs\ANALYTICS_SETUP_GUIDE.md

pause
