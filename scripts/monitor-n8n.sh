#!/bin/bash

# =============================================
# N8N + PostgreSQL Health Monitor
# =============================================
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–≤—è–∑–∫–∏ N8N + PostgreSQL
# –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SCRIPT_NAME="N8N Health Monitor"
LOG_FILE="/tmp/n8n-health-monitor.log"
ALERT_FILE="/tmp/n8n-health-alerts.log"
CHECK_INTERVAL=30
MAX_RETRIES=3
RESTART_COOLDOWN=300  # 5 –º–∏–Ω—É—Ç –º–µ–∂–¥—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–º–∏

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    local level=$1
    local message=$2
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo "[$timestamp] [$level] $message" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–æ–≤
send_alert() {
    local severity=$1
    local message=$2
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    echo "[$timestamp] [$severity] $message" >> "$ALERT_FILE"
    log_message "ALERT" "$severity: $message"
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    # –Ω–∞–ø—Ä–∏–º–µ—Ä, webhook, email, Slack, Discord –∏ —Ç.–¥.
    # curl -X POST "https://your-webhook-url" -d "N8N Alert: $message"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
check_container() {
    local container_name=$1
    local service_name=$2
    
    if ! docker ps --format "table {{.Names}}" | grep -q "^$container_name$"; then
        return 1
    fi
    
    local status=$(docker inspect --format='{{.State.Status}}' "$container_name" 2>/dev/null || echo "unknown")
    local health=$(docker inspect --format='{{.State.Health.Status}}' "$container_name" 2>/dev/null || echo "none")
    
    if [ "$status" != "running" ]; then
        return 1
    fi
    
    if [ "$health" != "healthy" ] && [ "$health" != "none" ]; then
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ PostgreSQL
check_postgres() {
    local container_name="n8n-ai-starter-kit-postgres-1"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    if ! check_container "$container_name" "PostgreSQL"; then
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    if ! docker exec "$container_name" pg_isready -U postgres >/dev/null 2>&1; then
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è N8N
    source .env 2>/dev/null || true
    if [[ -n "$POSTGRES_USER" && -n "$POSTGRES_DB" ]]; then
        if ! docker exec "$container_name" psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 1;" >/dev/null 2>&1; then
            return 1
        fi
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ N8N
check_n8n() {
    local container_name="n8n-ai-starter-kit-n8n-1"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    if ! check_container "$container_name" "N8N"; then
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    if ! curl -s -f "http://localhost:5678/healthz" >/dev/null 2>&1; then
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
    local logs=$(docker logs "$container_name" --tail 10 2>&1)
    if echo "$logs" | grep -qi "database connection.*failed\|authentication.*failed\|connection refused"; then
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ç–µ–≤–æ–π —Å–≤—è–∑–Ω–æ—Å—Ç–∏
check_network() {
    local n8n_container="n8n-ai-starter-kit-n8n-1"
    local postgres_container="n8n-ai-starter-kit-postgres-1"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑–æ–ª–≤–∏–Ω–≥–∞ –∏–º–µ–Ω–∏
    if ! docker exec "$n8n_container" nslookup postgres >/dev/null 2>&1; then
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
    source .env 2>/dev/null || true
    local postgres_port=${POSTGRES_PORT:-5432}
    if ! docker exec "$n8n_container" nc -z postgres "$postgres_port" >/dev/null 2>&1; then
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
restart_service() {
    local service_name=$1
    local cooldown_file="/tmp/n8n-restart-$service_name"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ cooldown –ø–µ—Ä–∏–æ–¥–∞
    if [ -f "$cooldown_file" ]; then
        local last_restart=$(cat "$cooldown_file")
        local current_time=$(date +%s)
        local time_diff=$((current_time - last_restart))
        
        if [ $time_diff -lt $RESTART_COOLDOWN ]; then
            log_message "WARN" "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ $service_name –ø—Ä–æ–ø—É—â–µ–Ω (cooldown: $((RESTART_COOLDOWN - time_diff))s)"
            return 1
        fi
    fi
    
    log_message "INFO" "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞: $service_name"
    send_alert "WARNING" "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ $service_name –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º"
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    if docker compose restart "$service_name" >/dev/null 2>&1; then
        echo "$(date +%s)" > "$cooldown_file"
        log_message "INFO" "–°–µ—Ä–≤–∏—Å $service_name –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        log_message "ERROR" "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–∏—Å–∞ $service_name"
        send_alert "CRITICAL" "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å $service_name"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
health_check() {
    local overall_status="OK"
    local issues=()
    
    log_message "INFO" "–ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
    if ! check_postgres; then
        issues+=("PostgreSQL")
        overall_status="DEGRADED"
        log_message "WARN" "PostgreSQL: –ø—Ä–æ–±–ª–µ–º—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
    else
        log_message "INFO" "PostgreSQL: OK"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ N8N
    if ! check_n8n; then
        issues+=("N8N")
        overall_status="DEGRADED"
        log_message "WARN" "N8N: –ø—Ä–æ–±–ª–µ–º—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
    else
        log_message "INFO" "N8N: OK"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–∏
    if ! check_network; then
        issues+=("Network")
        overall_status="DEGRADED"
        log_message "WARN" "Network: –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç–µ–≤–æ–π —Å–≤—è–∑–Ω–æ—Å—Ç—å—é"
    else
        log_message "INFO" "Network: OK"
    fi
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º
    if [ ${#issues[@]} -gt 0 ]; then
        log_message "WARN" "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã: ${issues[*]}"
        
        # –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        for issue in "${issues[@]}"; do
            case "$issue" in
                "PostgreSQL")
                    restart_service "postgres"
                    ;;
                "N8N")
                    restart_service "n8n"
                    ;;
                "Network")
                    log_message "INFO" "–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
                    restart_service "postgres"
                    sleep 10
                    restart_service "n8n"
                    ;;
            esac
        done
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª–µ—Ä—Ç–∞
        send_alert "WARNING" "–°–∏—Å—Ç–µ–º–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ $overall_status. –ü—Ä–æ–±–ª–µ–º—ã: ${issues[*]}"
    else
        log_message "INFO" "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
monitor_resources() {
    log_message "INFO" "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    local stats=$(docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}" | grep "n8n-ai-starter-kit")
    
    if [ -n "$stats" ]; then
        log_message "INFO" "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤:"
        echo "$stats" | while read line; do
            log_message "INFO" "  $line"
        done
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏—Å–∫–∞
    local disk_usage=$(df -h / | tail -1 | awk '{print $5}' | sed 's/%//')
    if [ "$disk_usage" -gt 85 ]; then
        send_alert "WARNING" "–í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: ${disk_usage}%"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤
cleanup_logs() {
    local max_lines=1000
    
    if [ -f "$LOG_FILE" ] && [ $(wc -l < "$LOG_FILE") -gt $max_lines ]; then
        tail -n $max_lines "$LOG_FILE" > "${LOG_FILE}.tmp"
        mv "${LOG_FILE}.tmp" "$LOG_FILE"
        log_message "INFO" "–õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã (–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ $max_lines —Å—Ç—Ä–æ–∫)"
    fi
    
    if [ -f "$ALERT_FILE" ] && [ $(wc -l < "$ALERT_FILE") -gt $max_lines ]; then
        tail -n $max_lines "$ALERT_FILE" > "${ALERT_FILE}.tmp"
        mv "${ALERT_FILE}.tmp" "$ALERT_FILE"
        log_message "INFO" "–õ–æ–≥–∏ –∞–ª–µ—Ä—Ç–æ–≤ –æ—á–∏—â–µ–Ω—ã"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_stats() {
    echo "======================================"
    echo "$SCRIPT_NAME - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    echo "======================================"
    echo ""
    
    if [ -f "$LOG_FILE" ]; then
        echo "üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:"
        tail -n 10 "$LOG_FILE"
        echo ""
    fi
    
    if [ -f "$ALERT_FILE" ]; then
        echo "üö® –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–ª–µ—Ä—Ç—ã:"
        tail -n 5 "$ALERT_FILE"
        echo ""
    fi
    
    echo "üîß –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    health_check
    echo ""
    
    monitor_resources
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "${1:-monitor}" in
        "monitor")
            log_message "INFO" "–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ($SCRIPT_NAME)"
            while true; do
                health_check
                monitor_resources
                cleanup_logs
                sleep $CHECK_INTERVAL
            done
            ;;
        "check")
            health_check
            ;;
        "stats")
            show_stats
            ;;
        "restart-postgres")
            restart_service "postgres"
            ;;
        "restart-n8n")
            restart_service "n8n"
            ;;
        "restart-all")
            restart_service "postgres"
            sleep 10
            restart_service "n8n"
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [monitor|check|stats|restart-postgres|restart-n8n|restart-all]"
            echo ""
            echo "–ö–æ–º–∞–Ω–¥—ã:"
            echo "  monitor          - –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
            echo "  check            - –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è"
            echo "  stats            - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ"
            echo "  restart-postgres - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å PostgreSQL"
            echo "  restart-n8n      - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å N8N"
            echo "  restart-all      - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
            echo ""
            exit 1
            ;;
    esac
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown
trap 'log_message "INFO" "–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"; exit 0' SIGTERM SIGINT

# –ó–∞–ø—É—Å–∫
main "$@"
