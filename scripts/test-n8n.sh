#!/bin/bash

# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ N8N

echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ N8N"
echo "=================================="

local_ip=$(hostname -I | awk '{print $1}')

echo "üìã 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö endpoint'–æ–≤ N8N:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
echo -n "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: "
if curl -s -f http://localhost:5678 >/dev/null 2>&1; then
    echo "‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞"
else
    echo "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
echo -n "Health check: "
if curl -s -f http://localhost:5678/healthz >/dev/null 2>&1; then
    echo "‚úÖ –ü—Ä–æ—à–µ–ª"
else
    echo "‚ùå –ù–µ –ø—Ä–æ—à–µ–ª"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API
echo -n "API (/rest/login): "
response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5678/rest/login)
if [[ "$response" =~ ^(200|401|403)$ ]]; then
    echo "‚úÖ –û—Ç–≤–µ—á–∞–µ—Ç (–∫–æ–¥: $response)"
else
    echo "‚ùå –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–∫–æ–¥: $response)"
fi

echo
echo "üìã 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:"
if docker exec compose-n8n-test-1 node -e "
const { DataSource } = require('typeorm');
const config = {
    type: 'postgres',
    host: 'postgres-test',
    port: 5432,
    username: 'n8n',
    password: 'n8npassword123',
    database: 'n8n'
};
const dataSource = new DataSource(config);
dataSource.initialize().then(() => {
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ');
    process.exit(0);
}).catch(err => {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:', err.message);
    process.exit(1);
});
" 2>/dev/null; then
    echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è N8N"
else
    echo "–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
fi

echo
echo "üìã 3. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏ N8N:"
docker exec compose-n8n-test-1 n8n --version 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é"

echo
echo "üìã 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã N8N:"
echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ N8N:"
docker exec compose-n8n-test-1 ls -la /home/node/.n8n/ 2>/dev/null || echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"

echo
echo "üìã 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:5678"
echo "2. –ò–ª–∏ —á–µ—Ä–µ–∑ —Å–µ—Ç—å: http://$local_ip:5678"
echo "3. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π workflow –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL –∏–∑ N8N –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"

if docker compose -f compose/test-minimal.yml ps | grep -q qdrant-test; then
    echo "5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Qdrant dashboard: http://localhost:6333/dashboard"
fi

echo
echo "üìã 6. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã:"
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ N8N:"
echo "  docker compose -f compose/test-minimal.yml restart n8n-test"
echo
echo "–ü–æ–ª–Ω—ã–µ –ª–æ–≥–∏:"
echo "  docker compose -f compose/test-minimal.yml logs -f n8n-test"
echo
echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É:"
echo "  docker exec -it compose-n8n-test-1 /bin/bash"
