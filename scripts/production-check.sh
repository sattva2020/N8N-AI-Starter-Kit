#!/bin/bash

# üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ Production-–æ–∫—Ä—É–∂–µ–Ω–∏—è N8N AI Starter Kit

echo "üéØ –ü–†–û–í–ï–†–ö–ê PRODUCTION-–û–ö–†–£–ñ–ï–ù–ò–Ø N8N AI STARTER KIT"
echo "=================================================="

# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
echo "üìã 1. –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (production –ø—Ä–æ—Ñ–∏–ª—å)
running_containers=$(docker compose ps --format "table {{.Service}}" | grep -v SERVICE | wc -l)
echo "‚úÖ –ó–∞–ø—É—â–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (production): $running_containers"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ N8N
echo -n "‚úÖ N8N –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: "
if curl -s -f http://localhost:5678 >/dev/null 2>&1; then
    echo "–†–ê–ë–û–¢–ê–ï–¢"
else
    echo "–ù–ï –û–¢–í–ï–ß–ê–ï–¢"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (production –∏–º–µ–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤)
echo -n "‚úÖ PostgreSQL: "
if docker exec n8n-ai-starter-kit-postgres-1 pg_isready -U postgres >/dev/null 2>&1; then
    echo "–ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï OK"
else
    echo "–ü–†–û–ë–õ–ï–ú–´ –° –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï–ú"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è N8N –≤ –ë–î
echo -n "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å N8N –≤ –ë–î: "
if docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -c "\du" | grep -q n8n; then
    echo "–°–û–ó–î–ê–ù"
else
    echo "–ù–ï –ù–ê–ô–î–ï–ù"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö N8N
echo -n "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö N8N: "
if docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -c "\l" | grep -q " n8n "; then
    echo "–°–û–ó–î–ê–ù–ê"
else
    echo "–ù–ï –ù–ê–ô–î–ï–ù–ê"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama
echo -n "‚úÖ Ollama API: "
if curl -s -f http://localhost:11434/api/tags >/dev/null 2>&1; then
    echo "–î–û–°–¢–£–ü–ï–ù"
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏
    model_count=$(curl -s http://localhost:11434/api/tags | jq -r '.models | length' 2>/dev/null || echo "0")
    echo "   üì¶ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: $model_count"
else
    echo "–ù–ï –û–¢–í–ï–ß–ê–ï–¢"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Qdrant
echo -n "‚úÖ Qdrant API: "
if curl -s -f http://localhost:6333/health >/dev/null 2>&1; then
    echo "–†–ê–ë–û–¢–ê–ï–¢"
else
    echo "–ù–ï –û–¢–í–ï–ß–ê–ï–¢"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Traefik (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
echo -n "‚úÖ Traefik Dashboard: "
if curl -s -f http://localhost:8080 >/dev/null 2>&1; then
    echo "–î–û–°–¢–£–ü–ï–ù"
else
    echo "–ù–ï –ù–ê–°–¢–†–û–ï–ù/–ù–ï –î–û–°–¢–£–ü–ï–ù"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Graphiti (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)
echo -n "‚úÖ Graphiti API: "
if docker compose ps | grep -q graphiti && curl -s -f http://localhost:8000/health >/dev/null 2>&1; then
    echo "–†–ê–ë–û–¢–ê–ï–¢"
else
    echo "–ù–ï –ó–ê–ü–£–©–ï–ù/–ù–ï –û–¢–í–ï–ß–ê–ï–¢"
fi

echo
echo "üìã 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Web –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤:"

local_ip=$(hostname -I | awk '{print $1}' 2>/dev/null || ipconfig | findstr "IPv4" | head -1 | awk '{print $NF}')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ N8N –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
echo "üåê N8N Web Interface:"
echo "   üëâ http://localhost:5678"
echo "   üëâ http://$local_ip:5678"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Qdrant Dashboard
if docker compose ps | grep -q qdrant; then
    echo "üóÑÔ∏è  Qdrant Dashboard:"
    echo "   üëâ http://localhost:6333/dashboard"
    echo "   üëâ http://$local_ip:6333/dashboard"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Traefik Dashboard
if docker compose ps | grep -q traefik; then
    echo "üîÄ Traefik Dashboard:"
    echo "   üëâ http://localhost:8080"
    echo "   üëâ http://$local_ip:8080"
fi

echo
echo "üìã 3. Production-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}" | head -10

echo
echo "üîß –ó–¥–æ—Ä–æ–≤—å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose ps --format "table {{.Service}}\t{{.State}}\t{{.Status}}"

echo
echo "üìã 4. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:"
if command -v lsb_release >/dev/null 2>&1; then
    echo "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $(lsb_release -d | cut -f2)"
else
    echo "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: Windows $(systeminfo | findstr "OS Name" | cut -d: -f2 | sed 's/^ *//')"
fi
echo "Docker –≤–µ—Ä—Å–∏—è: $(docker --version)"
echo "Docker Compose –≤–µ—Ä—Å–∏—è: $(docker compose version --short)"
if command -v free >/dev/null 2>&1; then
    echo "–î–æ—Å—Ç—É–ø–Ω–∞—è –ø–∞–º—è—Ç—å: $(free -h | awk '/^Mem:/ {print $2}')"
    echo "–°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ: $(df -h / | awk 'NR==2 {print $4}')"
else
    echo "–î–æ—Å—Ç—É–ø–Ω–∞—è –ø–∞–º—è—Ç—å: $(wmic computersystem get TotalPhysicalMemory /value | grep "=" | cut -d= -f2 | awk '{printf "%.1f GB", $1/1024/1024/1024}')"
fi

echo
echo "üìã 5. –õ–æ–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ):"
echo "–í—Å–µ –ª–æ–≥–∏: docker compose logs -f"
echo "–¢–æ–ª—å–∫–æ N8N: docker compose logs -f n8n"
echo "–¢–æ–ª—å–∫–æ PostgreSQL: docker compose logs -f postgres"
echo "–¢–æ–ª—å–∫–æ Ollama: docker compose logs -f ollama"
echo "–¢–æ–ª—å–∫–æ Qdrant: docker compose logs -f qdrant"

echo
echo "üìã 6. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ production-—Å—Ä–µ–¥–æ–π:"
echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker compose --profile cpu down"
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker compose --profile cpu restart"
echo "–°—Ç–∞—Ç—É—Å: docker compose --profile cpu ps"
echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: docker compose --profile cpu pull && docker compose --profile cpu up -d"

echo
echo "üéâ –†–ï–ó–£–õ–¨–¢–ê–¢ PRODUCTION-–ü–†–û–í–ï–†–ö–ò:"
echo "================================="

success_count=0
total_checks=6

# –ü–æ–¥—Å—á–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
if curl -s -f http://localhost:5678 >/dev/null 2>&1; then success_count=$((success_count + 1)); fi
if docker exec n8n-ai-starter-kit-postgres-1 pg_isready -U postgres >/dev/null 2>&1; then success_count=$((success_count + 1)); fi
if curl -s -f http://localhost:11434/api/tags >/dev/null 2>&1; then success_count=$((success_count + 1)); fi
if curl -s -f http://localhost:6333/health >/dev/null 2>&1; then success_count=$((success_count + 1)); fi
if docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -c "\du" | grep -q n8n; then success_count=$((success_count + 1)); fi
if docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -c "\l" | grep -q " n8n "; then success_count=$((success_count + 1)); fi

echo "üìä –£—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: $success_count/$total_checks"

if [ $success_count -eq $total_checks ]; then
    echo "‚úÖ Production-–æ–∫—Ä—É–∂–µ–Ω–∏–µ N8N AI Starter Kit –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ!"
    echo "‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –∏ –æ—Ç–≤–µ—á–∞—é—Ç"
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    echo "‚úÖ AI-—Å–µ—Ä–≤–∏—Å—ã (Ollama, Qdrant) —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç"
    echo
    echo "üöÄ PRODUCTION –ì–û–¢–û–í –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!"
    echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ N8N –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:5678"
    echo "2. –ù–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å AI-powered workflows"
    echo "3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ollama –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö LLM"
    echo "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Qdrant –¥–ª—è –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞"
elif [ $success_count -gt $((total_checks / 2)) ]; then
    echo "‚ö†Ô∏è  Production-–æ–∫—Ä—É–∂–µ–Ω–∏–µ —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ ($success_count/$total_checks)"
    echo "üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "üîß –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: docker compose logs -f"
else
    echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ production-–æ–∫—Ä—É–∂–µ–Ω–∏–∏ ($success_count/$total_checks)"
    echo "üö® –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ä–æ—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
    echo "üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: docker compose --profile cpu restart"
    echo "üîß –ò–ª–∏ –ø–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker compose --profile cpu down && docker compose --profile cpu up -d"
fi
