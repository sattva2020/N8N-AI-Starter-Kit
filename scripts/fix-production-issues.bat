@echo off
REM =============================================
REM –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ production –ø—Ä–æ–±–ª–µ–º N8N AI Starter Kit
REM =============================================

echo üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º production –æ–∫—Ä—É–∂–µ–Ω–∏—è...

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if not exist .env (
    echo ‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏–∑ template.env
    exit /b 1
)

REM 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º N8N encryption key mismatch
echo üîë –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ N8N encryption key...
docker volume ls | findstr "n8n-ai-starter-kit_n8n_storage" >nul 2>&1
if %errorlevel% equ 0 (
    echo üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ n8n volume –¥–ª—è —Å–±—Ä–æ—Å–∞ encryption key...
    docker compose down -v --remove-orphans >nul 2>&1
    docker volume rm n8n-ai-starter-kit_n8n_storage >nul 2>&1
)

REM 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º OpenAI API key
findstr /B "OPENAI_API_KEY=" .env | findstr "your_openai_api_key_here" >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.
    echo    –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã Graphiti –∏ –¥—Ä—É–≥–∏—Ö AI —Å–µ—Ä–≤–∏—Å–æ–≤
)

REM 3. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
echo ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...
docker compose down --remove-orphans >nul 2>&1
docker compose -f compose/zep-compose.yaml down --remove-orphans >nul 2>&1
docker compose -f compose/supabase-compose.yml down --remove-orphans >nul 2>&1

REM 4. –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö volume'–æ–≤
echo üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö volumes...
docker volume rm n8n-ai-starter-kit_postgres_storage >nul 2>&1
docker volume rm n8n-ai-starter-kit_n8n_storage >nul 2>&1

REM 5. –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo üöÄ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...
docker compose up -d postgres traefik n8n qdrant ollama

REM –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ PostgreSQL
echo ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ PostgreSQL...
for /l %%i in (1,1,30) do (
    docker compose exec postgres pg_isready -U root -d n8n >nul 2>&1
    if %errorlevel% equ 0 (
        echo ‚úÖ PostgreSQL –≥–æ—Ç–æ–≤
        goto :postgres_ready
    )
    echo    –ü–æ–ø—ã—Ç–∫–∞ %%i/30...
    timeout /t 2 >nul
)
:postgres_ready

REM –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ N8N
echo ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ N8N...
for /l %%i in (1,1,60) do (
    curl -s http://localhost:5678 >nul 2>&1
    if %errorlevel% equ 0 (
        echo ‚úÖ N8N –≥–æ—Ç–æ–≤
        goto :n8n_ready
    )
    echo    –ü–æ–ø—ã—Ç–∫–∞ %%i/60...
    timeout /t 2 >nul
)
:n8n_ready

echo.
echo üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!
echo.
echo üìã –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:
echo    N8N: http://localhost:5678
echo    Qdrant: http://localhost:6333
echo    Ollama: http://localhost:11434
echo.
echo üîß –î–ª—è –∑–∞–ø—É—Å–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (Zep, Graphiti):
echo    1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OPENAI_API_KEY –≤ .env
echo    2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker compose -f compose/zep-compose.yaml up -d
echo.
echo üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è: scripts\comprehensive-container-check.sh

pause
