#!/bin/bash

# =============================================
# N8N + PostgreSQL Connection Diagnostics
# =============================================
# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –º–µ–∂–¥—É N8N –∏ PostgreSQL
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

set -e

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è N8N + PostgreSQL"
echo "=========================================="

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
source .env 2>/dev/null || true

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
print_status() {
    local status=$1
    local message=$2
    if [ "$status" = "ok" ]; then
        echo "‚úÖ $message"
    elif [ "$status" = "warn" ]; then
        echo "‚ö†Ô∏è  $message"
    else
        echo "‚ùå $message"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env_vars() {
    echo ""
    echo "1Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    echo "-----------------------------------"
    
    local required_vars=("POSTGRES_USER" "POSTGRES_PASSWORD" "POSTGRES_DB" "POSTGRES_HOST" "POSTGRES_PORT" "N8N_ENCRYPTION_KEY")
    local missing_vars=()
    
    for var in "${required_vars[@]}"; do
        if [[ -z "${!var}" ]]; then
            missing_vars+=("$var")
            print_status "error" "$var - –Ω–µ –∑–∞–¥–∞–Ω–∞"
        else
            print_status "ok" "$var = ${!var}"
        fi
    done
    
    if [ ${#missing_vars[@]} -gt 0 ]; then
        echo ""
        echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
        echo "–î–æ–±–∞–≤—å—Ç–µ –≤ —Ñ–∞–π–ª .env:"
        for var in "${missing_vars[@]}"; do
            echo "   $var=–∑–Ω–∞—á–µ–Ω–∏–µ"
        done
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
check_containers() {
    echo ""
    echo "2Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    echo "---------------------------------"
    
    local containers=("n8n-ai-starter-kit-postgres-1" "n8n-ai-starter-kit-n8n-1")
    
    for container in "${containers[@]}"; do
        if docker ps --format "table {{.Names}}" | grep -q "^$container$"; then
            local status=$(docker inspect --format='{{.State.Status}}' "$container" 2>/dev/null || echo "unknown")
            local health=$(docker inspect --format='{{.State.Health.Status}}' "$container" 2>/dev/null || echo "none")
            
            if [ "$status" = "running" ]; then
                if [ "$health" = "healthy" ] || [ "$health" = "none" ]; then
                    print_status "ok" "$container - –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
                else
                    print_status "warn" "$container - –∑–∞–ø—É—â–µ–Ω, –Ω–æ —Å—Ç–∞—Ç—É—Å –∑–¥–æ—Ä–æ–≤—å—è: $health"
                fi
            else
                print_status "error" "$container - —Å—Ç–∞—Ç—É—Å: $status"
            fi
        else
            print_status "error" "$container - –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL
check_postgres_connectivity() {
    echo ""
    echo "3Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL:"
    echo "-----------------------------------"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ postgres —á–µ—Ä–µ–∑ pg_isready
    if docker exec n8n-ai-starter-kit-postgres-1 pg_isready -U postgres >/dev/null 2>&1; then
        print_status "ok" "PostgreSQL —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
    else
        print_status "error" "PostgreSQL —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
    if docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -c "SELECT version();" >/dev/null 2>&1; then
        print_status "ok" "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        print_status "error" "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -lqt | cut -d \| -f 1 | grep -qw "$POSTGRES_DB"; then
        print_status "ok" "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '$POSTGRES_DB' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        print_status "error" "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '$POSTGRES_DB' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        echo "   üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./scripts/init-postgres.sh"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è N8N
    if docker exec n8n-ai-starter-kit-postgres-1 psql -U postgres -c "SELECT 1 FROM pg_roles WHERE rolname='$POSTGRES_USER';" | grep -q "1"; then
        print_status "ok" "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '$POSTGRES_USER' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        print_status "error" "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '$POSTGRES_USER' –Ω–µ –Ω–∞–π–¥–µ–Ω"
        echo "   üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./scripts/init-postgres.sh"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è N8N
    if docker exec n8n-ai-starter-kit-postgres-1 psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 1;" >/dev/null 2>&1; then
        print_status "ok" "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '$POSTGRES_USER' –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ '$POSTGRES_DB'"
    else
        print_status "error" "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '$POSTGRES_USER' –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ '$POSTGRES_DB'"
        echo "   üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./scripts/init-postgres.sh"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ç–µ–≤–æ–π —Å–≤—è–∑–Ω–æ—Å—Ç–∏
check_network_connectivity() {
    echo ""
    echo "4Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–π —Å–≤—è–∑–Ω–æ—Å—Ç–∏:"
    echo "------------------------------"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑–æ–ª–≤–∏–Ω–≥–∞ –∏–º–µ–Ω–∏ postgres –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ N8N
    if docker exec n8n-ai-starter-kit-n8n-1 nslookup postgres >/dev/null 2>&1; then
        print_status "ok" "N8N –º–æ–∂–µ—Ç —Ä–µ–∑–æ–ª–≤–∏—Ç—å –∏–º—è 'postgres'"
    else
        print_status "error" "N8N –Ω–µ –º–æ–∂–µ—Ç —Ä–µ–∑–æ–ª–≤–∏—Ç—å –∏–º—è 'postgres'"
        echo "   üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–µ—Ç–µ–π –≤ docker-compose.yml"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞ PostgreSQL –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ N8N
    if docker exec n8n-ai-starter-kit-n8n-1 nc -z postgres "$POSTGRES_PORT" >/dev/null 2>&1; then
        print_status "ok" "N8N –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ postgres:$POSTGRES_PORT"
    else
        print_status "error" "N8N –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ postgres:$POSTGRES_PORT"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ N8N
check_n8n_logs() {
    echo ""
    echo "5Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ N8N:"
    echo "----------------------"
    
    local logs=$(docker logs n8n-ai-starter-kit-n8n-1 --tail 20 2>&1)
    
    if echo "$logs" | grep -q "Successfully connected to database"; then
        print_status "ok" "N8N —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    elif echo "$logs" | grep -q "Database connection successful"; then
        print_status "ok" "N8N —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    elif echo "$logs" | grep -q "Editor is now accessible"; then
        print_status "ok" "N8N –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
    else
        print_status "warn" "–ù–µ –Ω–∞–π–¥–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –ë–î"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö
    local error_patterns=("connection refused" "authentication failed" "password authentication" "database.*does not exist" "role.*does not exist")
    
    for pattern in "${error_patterns[@]}"; do
        if echo "$logs" | grep -qi "$pattern"; then
            print_status "error" "–ù–∞–π–¥–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤ –ª–æ–≥–∞—Ö: $(echo "$logs" | grep -i "$pattern" | tail -1)"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API N8N
check_n8n_api() {
    echo ""
    echo "6Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ API N8N:"
    echo "--------------------"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ healthcheck endpoint
    if curl -s -f "http://localhost:5678/healthz" >/dev/null 2>&1; then
        print_status "ok" "N8N API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ http://localhost:5678/healthz"
    else
        print_status "error" "N8N API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ http://localhost:5678/healthz"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if curl -s "http://localhost:5678/" | grep -q "n8n" >/dev/null 2>&1; then
        print_status "ok" "N8N –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Ç–≤–µ—á–∞–µ—Ç"
    else
        print_status "warn" "N8N –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
print_recommendations() {
    echo ""
    echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º:"
    echo "======================================="
    echo ""
    echo "1. –ï—Å–ª–∏ PostgreSQL –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:"
    echo "   ./scripts/init-postgres.sh"
    echo ""
    echo "2. –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é:"
    echo "   docker compose down && docker compose up -d"
    echo ""
    echo "3. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å volumes:"
    echo "   docker compose down -v && docker volume rm n8n_storage postgres_storage"
    echo "   docker compose up -d"
    echo ""
    echo "4. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤:"
    echo "   docker logs n8n-ai-starter-kit-n8n-1 -f"
    echo "   docker logs n8n-ai-starter-kit-postgres-1 -f"
    echo ""
    echo "5. –î–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:"
    echo "   ./scripts/reset-n8n-postgres.sh"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local exit_code=0
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
    check_env_vars || exit_code=1
    check_containers || exit_code=1
    check_postgres_connectivity || exit_code=1
    check_network_connectivity || exit_code=1
    check_n8n_logs || exit_code=1
    check_n8n_api || exit_code=1
    
    echo ""
    echo "=========================================="
    if [ $exit_code -eq 0 ]; then
        echo "üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
        echo "N8N + PostgreSQL —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."
    else
        echo "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."
        print_recommendations
    fi
    echo "=========================================="
    
    return $exit_code
}

# –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
main "$@"
