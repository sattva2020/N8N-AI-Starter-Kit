#!/bin/bash

# üîÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∏ production-—Å—Ä–µ–¥—ã N8N AI Starter Kit

echo "üîÑ –°–†–ê–í–ù–ï–ù–ò–ï –¢–ï–°–¢–û–í–û–ô –ò PRODUCTION-–°–†–ï–î–´"
echo "========================================"

echo "üìã 1. –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã:"
echo "----------------------------------------"

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ä–µ–¥—É
echo "üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã..."
docker compose -f compose/test-minimal.yml --profile test up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ä–µ–¥—É
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã:"
test_n8n_status="‚ùå"
test_postgres_status="‚ùå"
test_containers=0

if curl -s -f http://localhost:5678 >/dev/null 2>&1; then
    test_n8n_status="‚úÖ"
fi

if docker exec compose-postgres-test-1 pg_isready -U postgres >/dev/null 2>&1; then
    test_postgres_status="‚úÖ"
fi

test_containers=$(docker compose -f compose/test-minimal.yml --profile test ps --format "table {{.Service}}" | grep -v SERVICE | wc -l)

echo "   N8N: $test_n8n_status"
echo "   PostgreSQL: $test_postgres_status"
echo "   –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: $test_containers"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ä–µ–¥—É
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã..."
docker compose -f compose/test-minimal.yml --profile test down

echo
echo "üìã 2. –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ production-—Å—Ä–µ–¥—ã:"
echo "------------------------------------------"

# –ó–∞–ø—É—Å–∫–∞–µ–º production
echo "üöÄ –ó–∞–ø—É—Å–∫ production-—Å—Ä–µ–¥—ã..."
docker compose --profile cpu up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ (–¥–æ–ª—å—à–µ, —Ç–∞–∫ –∫–∞–∫ –±–æ–ª—å—à–µ —Å–µ—Ä–≤–∏—Å–æ–≤)
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (60 —Å–µ–∫—É–Ω–¥)..."
sleep 60

# –ü—Ä–æ–≤–µ—Ä—è–µ–º production
echo "üè≠ –ü—Ä–æ–≤–µ—Ä–∫–∞ production-—Å—Ä–µ–¥—ã:"
prod_n8n_status="‚ùå"
prod_postgres_status="‚ùå"
prod_ollama_status="‚ùå"
prod_qdrant_status="‚ùå"
prod_containers=0

if curl -s -f http://localhost:5678 >/dev/null 2>&1; then
    prod_n8n_status="‚úÖ"
fi

if docker exec n8n-ai-starter-kit-postgres-1 pg_isready -U postgres >/dev/null 2>&1; then
    prod_postgres_status="‚úÖ"
fi

if curl -s -f http://localhost:11434/api/tags >/dev/null 2>&1; then
    prod_ollama_status="‚úÖ"
fi

if curl -s -f http://localhost:6333/health >/dev/null 2>&1; then
    prod_qdrant_status="‚úÖ"
fi

prod_containers=$(docker compose ps --format "table {{.Service}}" | grep -v SERVICE | wc -l)

echo "   N8N: $prod_n8n_status"
echo "   PostgreSQL: $prod_postgres_status"
echo "   Ollama: $prod_ollama_status"
echo "   Qdrant: $prod_qdrant_status"
echo "   –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: $prod_containers"

echo
echo "üìã 3. –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–ê–Ø –¢–ê–ë–õ–ò–¶–ê:"
echo "============================"

echo "| –ö–æ–º–ø–æ–Ω–µ–Ω—Ç     | –¢–µ—Å—Ç  | Production | –°—Ç–∞—Ç—É—Å     |"
echo "|---------------|-------|------------|------------|"
echo "| N8N           | $test_n8n_status    | $prod_n8n_status         | $([ "$test_n8n_status" = "$prod_n8n_status" ] && echo "‚úÖ –°–æ–≤–ø–∞–¥–∞–µ—Ç" || echo "‚ö†Ô∏è  –û—Ç–ª–∏—á–∞–µ—Ç—Å—è") |"
echo "| PostgreSQL    | $test_postgres_status    | $prod_postgres_status         | $([ "$test_postgres_status" = "$prod_postgres_status" ] && echo "‚úÖ –°–æ–≤–ø–∞–¥–∞–µ—Ç" || echo "‚ö†Ô∏è  –û—Ç–ª–∏—á–∞–µ—Ç—Å—è") |"
echo "| Ollama        | ‚ûñ    | $prod_ollama_status         | üÜï –¢–æ–ª—å–∫–æ –≤ Prod |"
echo "| Qdrant        | ‚ûñ    | $prod_qdrant_status         | üÜï –¢–æ–ª—å–∫–æ –≤ Prod |"
echo "| –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã    | $test_containers     | $prod_containers          | $([ $test_containers -lt $prod_containers ] && echo "‚úÖ Prod –±–æ–ª—å—à–µ" || echo "‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å") |"

echo
echo "üìã 4. –ê–ù–ê–õ–ò–ó –†–ê–ó–õ–ò–ß–ò–ô:"
echo "====================="

echo "üß™ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ä–µ–¥–∞ (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è):"
echo "   - –¢–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (N8N + PostgreSQL)"
echo "   - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
echo "   - –ù–∏–∑–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤"
echo "   - –ü—Ä–µ—Ñ–∏–∫—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: compose-*-test-1"

echo
echo "üè≠ Production-—Å—Ä–µ–¥–∞ (–ø–æ–ª–Ω–∞—è):"
echo "   - –í—Å–µ AI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (Ollama, Qdrant, Graphiti)"
echo "   - –ü–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å AI"
echo "   - –ë–æ–ª—å—à–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞"
echo "   - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏–º–µ–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"

echo
echo "üìã 5. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
echo "=================="

if [ "$test_n8n_status" = "‚úÖ" ] && [ "$prod_n8n_status" = "‚úÖ" ]; then
    echo "‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–±–µ–∏—Ö —Å—Ä–µ–¥–∞—Ö"
    echo "‚úÖ –ú–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å production –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã"
    
    if [ "$prod_ollama_status" = "‚úÖ" ] && [ "$prod_qdrant_status" = "‚úÖ" ]; then
        echo "‚úÖ AI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        echo "üöÄ Production-—Å—Ä–µ–¥–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –¥–ª—è AI-workflows"
    else
        echo "‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã —Å AI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –≤ production"
        echo "üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose logs ollama qdrant"
    fi
    
else
    echo "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –æ–¥–Ω–æ–π –∏–ª–∏ –æ–±–µ–∏—Ö —Å—Ä–µ–¥–∞—Ö"
    echo "üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
fi

echo
echo "üìã 6. –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo "===================="

if [ "$prod_n8n_status" = "‚úÖ" ] && [ "$prod_postgres_status" = "‚úÖ" ]; then
    echo "1. ‚úÖ Production-—Å—Ä–µ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞"
    echo "2. üåê –û—Ç–∫—Ä–æ–π—Ç–µ N8N: http://localhost:5678"
    echo "3. ü§ñ –°–æ–∑–¥–∞–π—Ç–µ AI-workflow —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Ollama"
    echo "4. üîç –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤–µ–∫—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫ —Å Qdrant"
    echo "5. üìä –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
else
    echo "1. üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ production-—Å—Ä–µ–¥–µ"
    echo "2. üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose logs -f"
    echo "3. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "4. üß™ –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"
fi

echo
echo "üéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:"
echo "=============="

success_rate=0
if [ "$test_n8n_status" = "‚úÖ" ] && [ "$prod_n8n_status" = "‚úÖ" ]; then success_rate=$((success_rate + 50)); fi
if [ "$prod_ollama_status" = "‚úÖ" ]; then success_rate=$((success_rate + 25)); fi
if [ "$prod_qdrant_status" = "‚úÖ" ]; then success_rate=$((success_rate + 25)); fi

echo "üìä –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: $success_rate%"

if [ $success_rate -ge 75 ]; then
    echo "üéâ –û–¢–õ–ò–ß–ù–û! Production-—Å—Ä–µ–¥–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
elif [ $success_rate -ge 50 ]; then
    echo "‚ö†Ô∏è  –•–û–†–û–®–û! –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç, AI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è"
else
    echo "‚ùå –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–†–ê–ë–û–¢–ö–ê! –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã"
fi
