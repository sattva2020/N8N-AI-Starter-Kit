# N8N specific log processing pipeline
input {
  beats {
    port => 5045
    type => "n8n"
  }
}

filter {
  # Parse N8N log format
  if [fields][service] == "n8n" {
    # Parse N8N workflow logs
    if [message] =~ /Workflow.*execution/ {
      grok {
        match => { 
          "message" => "Workflow \"?%{DATA:workflow_name}\"? execution %{WORD:execution_status}.*execution_id: %{DATA:execution_id}" 
        }
      }
      
      mutate {
        add_field => { "log_type" => "workflow_execution" }
      }
    }
    
    # Parse N8N error logs
    else if [message] =~ /(?i)error/ {
      grok {
        match => { 
          "message" => "(?<error_type>Error|ERROR).*: %{GREEDYDATA:error_message}" 
        }
      }
      
      mutate {
        add_field => { "log_type" => "error" }
        add_field => { "log_level" => "ERROR" }
      }
    }
    
    # Parse N8N webhook logs
    else if [message] =~ /webhook/ {
      grok {
        match => { 
          "message" => ".*webhook.*%{WORD:http_method} %{URIPATH:webhook_path}" 
        }
      }
      
      mutate {
        add_field => { "log_type" => "webhook" }
      }
    }
    
    # Parse N8N node execution
    else if [message] =~ /Node.*executed/ {
      grok {
        match => { 
          "message" => "Node \"?%{DATA:node_name}\"? executed in %{NUMBER:execution_time_ms:float}ms" 
        }
      }
      
      mutate {
        add_field => { "log_type" => "node_execution" }
      }
    }
    
    # Default N8N log processing
    else {
      mutate {
        add_field => { "log_type" => "general" }
      }
    }
    
    # Add N8N specific fields
    mutate {
      add_field => {
        "service" => "n8n"
        "service_type" => "workflow_automation"
        "component" => "n8n-server"
      }
    }
    
    # Parse execution time for performance metrics
    if [execution_time_ms] {
      if [execution_time_ms] > 5000 {
        mutate { add_field => { "performance_flag" => "slow" } }
      } else if [execution_time_ms] > 1000 {
        mutate { add_field => { "performance_flag" => "medium" } }
      } else {
        mutate { add_field => { "performance_flag" => "fast" } }
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "n8n-logs-%{+YYYY.MM.dd}"
    template_name => "n8n-logs"
    template_pattern => "n8n-logs-*"
    template => {
      "index_patterns" => ["n8n-logs-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
        "index.refresh_interval" => "30s"
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" }
          "message" => { "type" => "text", "analyzer" => "standard" }
          "workflow_name" => { "type" => "keyword" }
          "execution_id" => { "type" => "keyword" }
          "execution_status" => { "type" => "keyword" }
          "execution_time_ms" => { "type" => "float" }
          "node_name" => { "type" => "keyword" }
          "log_type" => { "type" => "keyword" }
          "log_level" => { "type" => "keyword" }
          "service" => { "type" => "keyword" }
          "service_type" => { "type" => "keyword" }
          "component" => { "type" => "keyword" }
          "performance_flag" => { "type" => "keyword" }
          "error_type" => { "type" => "keyword" }
          "error_message" => { "type" => "text" }
          "http_method" => { "type" => "keyword" }
          "webhook_path" => { "type" => "keyword" }
        }
      }
    }
  }
}
