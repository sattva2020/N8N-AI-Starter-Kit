# System logs processing pipeline
input {
  beats {
    port => 5047
    type => "system"
  }
}

filter {
  # Parse system logs
  if [fields][log_type] == "system" {
    # Parse syslog format
    if [message] =~ /^[A-Z][a-z]{2}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}/ {
      grok {
        match => { 
          "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{IPORHOST:syslog_server} %{PROG:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" 
        }
      }
      
      mutate {
        add_field => { "log_type" => "syslog" }
      }
    }
    
    # Parse systemd journal logs
    else if [message] =~ /systemd/ {
      grok {
        match => { 
          "message" => ".*systemd.*: %{GREEDYDATA:systemd_message}" 
        }
      }
      
      mutate {
        add_field => { "log_type" => "systemd" }
      }
    }
    
    # Parse kernel logs
    else if [message] =~ /kernel/ {
      grok {
        match => { 
          "message" => ".*kernel.*: %{GREEDYDATA:kernel_message}" 
        }
      }
      
      mutate {
        add_field => { "log_type" => "kernel" }
      }
    }
    
    # Default system log processing
    else {
      mutate {
        add_field => { "log_type" => "system_general" }
      }
    }
    
    # Parse log levels from system logs
    if [message] =~ /(?i)critical|crit|emergency|emerg/ {
      mutate { add_field => { "log_level" => "CRITICAL" } }
    } else if [message] =~ /(?i)error|err/ {
      mutate { add_field => { "log_level" => "ERROR" } }
    } else if [message] =~ /(?i)warn|warning/ {
      mutate { add_field => { "log_level" => "WARN" } }
    } else if [message] =~ /(?i)notice/ {
      mutate { add_field => { "log_level" => "NOTICE" } }
    } else if [message] =~ /(?i)info/ {
      mutate { add_field => { "log_level" => "INFO" } }
    } else if [message] =~ /(?i)debug/ {
      mutate { add_field => { "log_level" => "DEBUG" } }
    } else {
      mutate { add_field => { "log_level" => "INFO" } }
    }
    
    # Add system specific fields
    mutate {
      add_field => {
        "log_source" => "system"
        "environment" => "production"
        "project" => "n8n-ai-starter-kit"
        "host" => "%{[host][name]}"
      }
    }
    
    # Parse resource usage information
    if [message] =~ /cpu|memory|disk|load/ {
      mutate {
        add_field => { "metric_type" => "resource_usage" }
      }
    }
    
    # Parse security related logs
    if [message] =~ /(?i)authentication|login|sudo|ssh|security/ {
      mutate {
        add_field => { "security_related" => "true" }
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "system-logs-%{+YYYY.MM.dd}"
    template_name => "system-logs"
    template_pattern => "system-logs-*"
    template => {
      "index_patterns" => ["system-logs-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
        "index.refresh_interval" => "30s"
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" }
          "message" => { "type" => "text", "analyzer" => "standard" }
          "log_type" => { "type" => "keyword" }
          "log_level" => { "type" => "keyword" }
          "log_source" => { "type" => "keyword" }
          "syslog_timestamp" => { "type" => "keyword" }
          "syslog_server" => { "type" => "keyword" }
          "syslog_program" => { "type" => "keyword" }
          "syslog_pid" => { "type" => "integer" }
          "syslog_message" => { "type" => "text" }
          "systemd_message" => { "type" => "text" }
          "kernel_message" => { "type" => "text" }
          "host" => { "type" => "keyword" }
          "environment" => { "type" => "keyword" }
          "project" => { "type" => "keyword" }
          "metric_type" => { "type" => "keyword" }
          "security_related" => { "type" => "boolean" }
        }
      }
    }
  }
}
