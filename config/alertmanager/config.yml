# AlertManager Configuration для N8N AI Starter Kit
# Настройка уведомлений и маршрутизации алертов

global:
  # SMTP server configuration for email alerts
  # smtp_smarthost: '${SMTP_HOST}:${SMTP_PORT}'
  # smtp_from: '${ALERT_EMAIL_FROM:-alerts@yourdomain.com}'
  # smtp_auth_username: '${SMTP_USERNAME}'
  # smtp_auth_password: '${SMTP_PASSWORD}'
  # smtp_require_tls: true

# Templates for alert notifications
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Routing configuration
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 12h
  receiver: 'default-receiver'
  
  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 10s
      repeat_interval: 1h
    
    # Warning alerts - grouped notifications
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      repeat_interval: 6h
    
    # N8N specific alerts
    - match_re:
        job: n8n.*
      receiver: 'n8n-alerts'
      group_wait: 15s
      repeat_interval: 2h
    
    # Database alerts
    - match_re:
        job: postgres|qdrant
      receiver: 'database-alerts'
      group_wait: 20s
      repeat_interval: 4h
    
    # AI services alerts
    - match_re:
        job: ollama|graphiti
      receiver: 'ai-services-alerts'
      group_wait: 30s
      repeat_interval: 4h

# Notification receivers
receivers:
  # Default receiver
  - name: 'default-receiver'
    # email_configs:
    #   - to: '${ALERT_EMAIL_TO:-admin@yourdomain.com}'
    #     subject: '[N8N-AI] {{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
    #     body: |
    #       {{ range .Alerts }}
    #       Alert: {{ .Annotations.summary }}
    #       Description: {{ .Annotations.description }}
    #       Severity: {{ .Labels.severity }}
    #       Instance: {{ .Labels.instance }}
    #       Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
    #       {{ end }}
    #     headers:
    #       X-Priority: '1'

  # Critical alerts receiver
  - name: 'critical-alerts'
    # email_configs:
    #   - to: '${ALERT_EMAIL_TO:-admin@yourdomain.com}'
    #     subject: '🚨 [CRITICAL] N8N AI Starter Kit Alert'
    #     body: |
    #       🚨 CRITICAL ALERT 🚨
    #       
    #       {{ range .Alerts }}
    #       ⚠️ {{ .Annotations.summary }}
    #       📝 {{ .Annotations.description }}
    #       🏷️ Severity: {{ .Labels.severity }}
    #       🖥️ Instance: {{ .Labels.instance }}
    #       ⏰ Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
    #       {{ if .EndsAt }}⏰ Ended: {{ .EndsAt.Format "2006-01-02 15:04:05" }}{{ end }}
    #       
    #       {{ end }}
    #       
    #       Please investigate immediately!
    #     headers:
    #       X-Priority: '1'
    
    # Slack webhook for critical alerts (optional)
    # slack_configs:
    #   - api_url: '${SLACK_WEBHOOK_URL}'
    #     channel: '#alerts'
    #     title: '🚨 Critical Alert - N8N AI Starter Kit'
    #     text: |
    #       {{ range .Alerts }}
    #       *{{ .Annotations.summary }}*
    #       {{ .Annotations.description }}
    #       Severity: {{ .Labels.severity }}
    #       Instance: {{ .Labels.instance }}
    #       {{ end }}
    #     color: 'danger'

  # Warning alerts receiver
  - name: 'warning-alerts'
    # email_configs:
    #   - to: '${ALERT_EMAIL_TO:-admin@yourdomain.com}'
    #     subject: '⚠️ [WARNING] N8N AI Starter Kit Alert'
    #     body: |
    #       ⚠️ WARNING ALERT ⚠️
    #       
    #       {{ range .Alerts }}
    #       📢 {{ .Annotations.summary }}
    #       📝 {{ .Annotations.description }}
    #       🏷️ Severity: {{ .Labels.severity }}
    #       🖥️ Instance: {{ .Labels.instance }}
    #       ⏰ Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
    #       
    #       {{ end }}

  # N8N specific alerts
  - name: 'n8n-alerts'
    # email_configs:
    #   - to: '${ALERT_EMAIL_TO:-admin@yourdomain.com}'
    #     subject: '🤖 [N8N] Automation Platform Alert'
    #     body: |
    #       🤖 N8N AUTOMATION ALERT 🤖
    #       
    #       {{ range .Alerts }}
    #       🔄 {{ .Annotations.summary }}
    #       📝 {{ .Annotations.description }}
    #       📊 Job: {{ .Labels.job }}
    #       🖥️ Instance: {{ .Labels.instance }}
    #       ⏰ Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
    #       
    #       {{ end }}
    #       
    #       Check your workflows and automation pipelines.

  # Database alerts
  - name: 'database-alerts'
    # email_configs:
    #   - to: '${ALERT_EMAIL_TO:-admin@yourdomain.com}'
    #     subject: '🗄️ [DATABASE] N8N AI Database Alert'
    #     body: |
    #       🗄️ DATABASE ALERT 🗄️
    #       
    #       {{ range .Alerts }}
    #       📊 {{ .Annotations.summary }}
    #       📝 {{ .Annotations.description }}
    #       🏷️ Database: {{ .Labels.job }}
    #       🖥️ Instance: {{ .Labels.instance }}
    #       ⏰ Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
    #       
    #       {{ end }}
    #       
    #       Database services may be affected.

  # AI services alerts
  - name: 'ai-services-alerts'
    # email_configs:
    #   - to: '${ALERT_EMAIL_TO:-admin@yourdomain.com}'
    #     subject: '🧠 [AI SERVICES] N8N AI Services Alert'
    #     body: |
    #       🧠 AI SERVICES ALERT 🧠
    #       
    #       {{ range .Alerts }}
    #       🤖 {{ .Annotations.summary }}
    #       📝 {{ .Annotations.description }}
    #       🏷️ Service: {{ .Labels.job }}
    #       🖥️ Instance: {{ .Labels.instance }}
    #       ⏰ Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
    #       
    #       {{ end }}
    #       
    #       AI functionality may be impacted.

# Inhibition rules - prevent spam alerts
inhibit_rules:
  # Inhibit lower severity alerts when higher severity alerts are firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'instance']
  
  # Inhibit all alerts when instance is down
  - source_match:
      alertname: 'InstanceDown'
    target_match_re:
      alertname: '.*'
    equal: ['instance']
